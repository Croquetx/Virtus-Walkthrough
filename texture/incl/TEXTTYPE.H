/*------------------------------------------------------------------------------ * WalkThrought - the real time 3-D CAD system. * Version 0.1 * * Copyright c 1989 by Virtus Corporation * All Rights Reserved * Written by  	Andrew B. Davidson * Suite 204 * 117 Edinburgh South * Cary, North Carolina    27511 * (919) 467-9700 *------------------------------------------------------------------------------ * Texture.h *------------------------------------------------------------------------------ */#ifndef _TEXTURE_TYPE_#define _TEXTURE_TYPE_#include "VTypes.h"#if MACINTOSH   // jca 7JAN94#include <QuickTimeComponents.h>#endif // MACINTOSH#include "VIO.h"// TEXTURE TYPES -- used for the Texture->type field#define TEXTURE_PICTFILE	0		// texture is a PICT file#define TEXTURE_PICT		1		// texture is a PICT#define TEXTURE_QUICKTIME 	2		// texture is a QuickTime movie#define TEXTURE_VDIG	 	3		// texture is a video digitizer#define TEXTURE_CHUNK		4		// texture is an offscreen chunk in a file#define	TEXTURE_BMPFILE		5		// texture is a BMP file		// BILBIL - 12/01/93// TEXTURE CLASS -- used for the TextureType->class_type field#define TEXTURE_NONE		0		// texture is not FileTextureType#define TEXTURE_FILE	 	1		// texture is FileTextureType//#define MAX_NUM_MIPS		8		// maximum number of MIP maps//JAM--mip maps not used yet--don't make them#define MAX_NUM_MIPS		1		// maximum number of MIP maps#define TEXTURE_ICON_SIZE	32 		// jca 18 Oct 93.  Texture icons are 32 x 32/*---------------------------------------------------------------------------------*//*	BASE TEXTURE TYPE*/struct TextureType:V_IO	{		int class_type;					// texture class		struct V_Pixel8 *mip[MAX_NUM_MIPS];	// offscreen mip maps		char type_str[32];				// texture type string		char info_str[64];				// texture info string		RGBColor mip_color;				// average color (like a 1x1 mip map)		Rect unpadded_rect[MAX_NUM_MIPS];	// unpadded mip map rects		Boolean padded;		virtual void cTextureType(void);		virtual void dTextureType(void);		virtual int LoadPicture(void);		virtual void UnloadPicture(void);		virtual int SetupFrame(void);#if (!VPLAYER)		virtual int MakeThumbnail(struct V_Offscreen *, Rect *);		virtual int SetThumbnail(struct V_Offscreen *, struct V_Offscreen *, Rect *);#endif // (!VPLAYER)		virtual int SetOffscreen(struct V_Offscreen *);     // ABD MERGE-BUG 17MAR94		virtual int MakeMIP(void);		virtual void Lock(void);		virtual void Unlock(void);		virtual void UnlockCompletely(void);	// MERGE-CLEANUP				virtual struct V_Offscreen *GetPicture(int);		virtual void GetUnpaddedRect(Rect*, int);		virtual void GetPaddedRect(Rect*, int);		virtual RGBColor GetFilteredRGB(void);				virtual void GetTypeStr(char*);		virtual void GetInfoStr(char*);		virtual void GetFullPathStr(char*);		virtual int IORef(struct V_Buffer *);		virtual int IOOff(struct V_Buffer *);	};/*---------------------------------------------------------------------------------*//*	FILE TEXTURE TYPE*/struct FileTextureType:TextureType	{		struct V_File *file;					// texture file reference		struct VfsLocation *vfsLocation;	//JAM better texture file reverence		virtual void cTextureType(void);		virtual void dTextureType(void);		virtual int SetFileLoc(struct VfsLocation *);				//GJR 10/06/93		virtual void GetFileLoc(struct VfsLocation *);				//GJR 10/06/93		virtual void GetFullPathStr(char*);		virtual int IORef(struct V_Buffer*);		virtual void SetVfsLocation(struct VfsLocation *);	};/*---------------------------------------------------------------------------------*//*	PICT TEXTURE TYPE*/struct TTPICT:TextureType	{		void cTextureType(void);		int LoadPicture(void);		void UnloadPicture(void);		int SetOffscreen(struct V_Offscreen *);     // ABD MERGE-BUG 17MAR94	};#if 0/*---------------------------------------------------------------------------------*//*	PICT FILE SUBSCRIBER TEXTURE TYPE*/struct TTPICTSub:TextureType	{		int LoadPicture(void);		void UnloadPicture(void);	};#endif/*---------------------------------------------------------------------------------*//*	PICT FILE TEXTURE TYPE*/struct TTPICTFile:FileTextureType	{		void cTextureType(void);		int LoadPicture(void);		void UnloadPicture(void);#if (!VPLAYER)		int MakeThumbnail(struct V_Offscreen *, Rect *);#endif // (!VPLAYER)	};/*---------------------------------------------------------------------------------*//*	BMP FILE TEXTURE TYPE*/struct TTBMPFile:FileTextureType	{		void cTextureType(void);		int LoadPicture(void);		void UnloadPicture(void);#if (!VPLAYER)		int MakeThumbnail(struct V_Offscreen *, Rect *);#endif // (!VPLAYER)	};/*---------------------------------------------------------------------------------*//*	OFFSCREEN CHUNK TEXTURE TYPE*/struct TTChunk:FileTextureType	{		long	io_position;				void cTextureType(void);		void dTextureType(void);		int LoadPicture(void);		void UnloadPicture(void);		void GetFileLoc(struct VfsLocation *);	//JAM 8/9/94	};/*---------------------------------------------------------------------------------*//*	QuickTime TEXTURE TYPE*/struct TTQuickTime:FileTextureType	{		int started;		Rect rect;		Boolean running;			void cTextureType(void);		void dTextureType(void);		int SetFileLoc(struct VfsLocation *);					//GJR 10/06/93		int SetupFrame(void);		int LoadPicture(void);		void UnloadPicture(void);		struct V_Offscreen *GetPicture(int);	#if (!VPLAYER)		int MakeThumbnail(struct V_Offscreen *, Rect *);#endif // (!VPLAYER)		int MakeMIP(void);		void SetMovieRunning(Boolean);		int IOOff(struct V_Buffer *);    // MERGE-DEC94	};	struct TTVDIG:TextureType	{#if MACINTOSH		VideoDigitizerComponent vdig;	// video digitizer		short input_num;		short slot_num;		void cTextureType(void);		void SetVDIG(VideoDigitizerComponent, short);		int SetupFrame(void);				int LoadPicture(void);		void UnloadPicture(void);#if (!VPLAYER)		int MakeThumbnail(struct V_Offscreen *, Rect *);#endif // (!VPLAYER)		int IORef(struct V_Buffer *);#endif	};#endif //_TEXTURE_TYPE_