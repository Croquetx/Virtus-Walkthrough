/*------------------------------------------------------------------------------ * WalkThrought - the real time 3-D CAD system. * Version 0.1 * * Copyright c 1989 by Virtus Corporation * All Rights Reserved * Written by  	Andrew B. Davidson * Suite 204 * 117 Edinburgh South * Cary, North Carolina    27511 * (919) 467-9700 *------------------------------------------------------------------------------ * TextureArray.h *------------------------------------------------------------------------------ */#ifndef _TEXTURE_ARRAY_#define _TEXTURE_ARRAY_#include "VArray.h"#define INCLUDE_NO_TEXTURE_STRING 1			// for GetMaxNameLength param/*-------------------------------------------------------------------------------*//*	TEXTURE ARRAY -- there is one of these per document */struct TextureArray:V_Array	{						struct CAVWalkController *controller;				/* ------ HIGH LEVEL ROUTINES ------ */				void SetController(struct CAVWalkController *);				//void LoadTexturesOldStyle(struct V_File *);	// loads textures old style				void LoadTexturesInDir(struct VfsLocation *);	// loads all textures in a dir		void AddListOfTextures(struct V_Array *);	//JAM added 25July94		int LoadTexture(struct VfsLocation *);			// loads texture		struct TextureItem *FindTextureItem(char *, struct VfsLocation*);		//JAM 12OCT94 changed to return error code		int GetTextureItem(char *, struct VfsLocation*, struct TextureItem **);		void PurgeUnused(void);		// MERGE14		struct TextureItem *FindOldStyle(int);		// find texture item old style				struct TextureItem *FindByName(char *);		// find texture item with name		struct TextureItem *FindByNameX(char *,					struct TextureItem *);			// find texture item with name, excluding the one passed in		struct TextureItem *FindByID(long);			// find texture item with id				void AddVDIGs(void);					// add vdigs to array		void NameChanged(void);					// tell array that a name has changed				/*-------- LOW LEVEL ROUTINES --------*/				void ResetIDs(void);					// resets all texture item ids to NON_IO_ID		struct V_Offscreen *GetSample(void);			// get a sample texture path ref num		void cTextureArray(void);				// create TextureArray		void dTextureArray(void);				// delete TextureArray		void dTextureItemsInTextureArray(void);	//JAM MEMLEAK 2JAN95 delete texture items in TextureArray		int Compare(void *, void *);			// used for sorting textures (by name)	};	#endif //_TEXTURE_ARRAY_