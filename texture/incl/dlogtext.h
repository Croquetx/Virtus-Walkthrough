#ifndef TEXTURE_OPTIONS_DIALOG#define TEXTURE_OPTIONS_DIALOG#include "IntfDlog.h"#include "TextItem.h"#if MACINTOSH#define TEXTURE_D_WIDTH		390#define TEXTURE_D_HEIGHT	310#else#define TEXTURE_D_WIDTH		400#define TEXTURE_D_HEIGHT	332#endif	struct TActionText:V_EditText { virtual int Action(char,long); };	struct TextureDialog:V_Dialog	{	struct Controller *controller;	struct  TextureDialogObject	*dialogObject;//	struct TSetSourceButton *set_source;//	struct TOKButton *ok_btn;//	struct TApplyButton *apply_btn;//	struct TRevertButton *revert_btn;//	struct TNameTextBox *tName;	struct TNameTextBox *textureName;	struct TextureItem *texture_item;	struct V_CtrlButton_Die *cancelButton;	struct TOKButton *okayButton;	struct TApplyButton *applyButton;	struct TRevertButton *revertButton;	struct TSetSourceButton *setSourceButton;	struct  TextureChoicePopMenu	*choices;	struct  THSizeRadio *hSize;	struct  THTileRadio *hTile;	struct  TVSizeRadio *vSize;	struct  TVTileRadio *vTile;		struct  THMirrorCheck *hMirror;	struct  TVMirrorCheck *vMirror;		struct THSizeTextBox *thSize;	struct TVSizeTextBox *tvSize;	struct THTilesTextBox *thTiles;	struct TVTilesTextBox *tvTiles;	struct  TextureUnitPopMenu1	*unit1;	struct TextureUnitPopMenu2 *unit2;	struct  THFlipCheck *hFlip;	struct  TVFlipCheck *vFlip;		struct THSlideTextBox *thSlide;	struct TVSlideTextBox *tvSlide;	struct TRotateTextBox *tRotate;	struct  TDecalCheck *decal;	struct  TShadeCheck *shade;	struct  TColorizeCheck *colorize;	struct  TextureMappingPopMenu	*map;	int	tcType;	int oldtcType;	struct TextureSettings oldSettings;	struct TextureSettings currentSettings;	struct V_File *current_file;	struct V_File *old_file;	int	old_file_is_chunk; 		//notes if old_file is a chunk JAM	long chunk_io_position;		//if old_file is chunk, this is its io_position	Boolean SetApplyFlag;		//JAM for marking set-apply situations	struct V_Text *SourceText;      //JAM added to allow access for changing	struct V_Text *DimensionsText;	//JAM added to allow access for changing	int	 cTextureDialog(struct Controller *);	void SetInterface(void);	void SetTextureDialogType(int type);	void Display(int,int,int);	void ForceRedraw(void);	//JAM invalidates rect and displays	int  GetResults(int);	int GetCurrentEntries(void);	void GetName(char*);	void GetInfoStr(char*);	void GetTypeStr(char*);	void GetInfoStrLabel(char*);	void GetTypeStrLabel(char*);	void GetFullPathStr(char*);	Boolean GetDecal(void);	Boolean GetShade(void);	Boolean GetColorize(void);	Boolean GetHFlip(void);	Boolean GetVFlip(void);	Boolean GetHMirror(void);	Boolean GetVMirror(void);	Boolean GetUseHTile(void);	Boolean GetUseVTile(void);	FFixed GetHSlide(void);	FFixed GetVSlide(void);	FFixed GetRotate(void);	FFixed GetHTiles(void);	FFixed GetVTiles(void);	FFixed GetHPPU(void);	FFixed GetVPPU(void);	int GetHUnit(void);	int GetVUnit(void);	};struct TextureDialogObject:indirect	{	struct TextureDialog *dialog;		void	SetTextureItem(struct TextureItem *);	virtual void cTextureDialogObject(void);	virtual void dTextureDialogObject(void);	virtual void SetInterface(struct V_Dialog *);	virtual void GetResults(void);	};struct TextureDialogObjectA:TextureDialogObject	{	void	SetInterface(struct V_Dialog *);	};struct TextureDialogObjectB:TextureDialogObject	{		void	SetInterface(struct V_Dialog *);	};struct TextureDialogObjectC:TextureDialogObject	{		void	SetInterface(struct V_Dialog *);	};	struct TextureChoicePopMenu:V_PopMenu 	{ 	struct  TextureDialog	*dialog;	void AddItems(); 	void Action(); 	void SetDialog(struct  TextureDialog	*);	};	struct TextureUnitPopMenu1:V_PopMenu 	{ 	struct  TextureDialog	*dialog;	void AddItems(); 	void Action(); 	void SetDialog(struct  TextureDialog	*);	void SetSystem(int); 	int	GetUnitSystem(char *,char *);	void Display(void);	};	struct TextureUnitPopMenu2:V_PopMenu 	{ 	struct  TextureDialog	*dialog;	void AddItems(); 	void Action(); 	void SetDialog(struct  TextureDialog	*);	void SetSystem(int); 	int	GetUnitSystem(char *,char *);	void Display(void);	};	struct TextureTextBox:TActionText{	struct  TextureDialog	*dialog;	void SetDialog(struct  TextureDialog	*);	};	struct TextureCheck:V_CtrlCheck{	struct  TextureDialog	*dialog;	void SetDialog(struct  TextureDialog	*);	};	struct TextureRadio:V_CtrlRadio{	struct  TextureDialog	*dialog;	void SetDialog(struct  TextureDialog	*);	};	struct TextureButton:V_CtrlButton{	struct  TextureDialog	*dialog;	void SetDialog(struct  TextureDialog	*);	};struct TNameTextBox:TextureTextBox{	int Action(char,long);	void Activate(int);	};struct THSlideTextBox:TextureTextBox{	int Action(char,long);	};struct TVSlideTextBox:TextureTextBox{	int Action(char,long);	};struct TRotateTextBox:TextureTextBox{	int Action(char,long);	};struct THSizeTextBox:TextureTextBox{	int Action(char,long);	};struct TVSizeTextBox:TextureTextBox{	int Action(char,long);	};struct THTilesTextBox:TextureTextBox{	int Action(char,long);	};struct TVTilesTextBox:TextureTextBox{	int Action(char,long);	};struct THMirrorCheck:TextureCheck{	void Action(void);	};struct TVMirrorCheck:TextureCheck{	void Action(void);	};struct THFlipCheck:TextureCheck{	void Action(void);	};struct TVFlipCheck:TextureCheck{	void Action(void);	};struct TDecalCheck:TextureCheck{	void Action(void);	};struct TShadeCheck:TextureCheck{	void Action(void);	};struct TColorizeCheck:TextureCheck{	void Action(void);	};struct THSizeRadio:TextureRadio{	void Action(void);	};struct THTileRadio:TextureRadio{	void Action(void);	};struct TVSizeRadio:TextureRadio{	void Action(void);	};struct TVTileRadio:TextureRadio{	void Action(void);	};struct TSetSourceButton:TextureButton{	void Action(void);	};struct TApplyButton:TextureButton{	void Action(void);	};struct TRevertButton:TextureButton{	void Action(void);	};struct TOKButton:TextureButton{	void Action(void);	};	#endif //TEXTURE_OPTIONS_DIALOG