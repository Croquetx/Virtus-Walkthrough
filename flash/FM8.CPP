/*------------------------------------------------------------------------------ * VWINDOWSÂ - the window object toolbox * * Copyright c 1991 by Virtus Corporation * All Rights Reserved * Written by David A. Smithx * Virtus Corporation * 117 Edinburgh So * Cary, North Carolina    27511 * (919) 467-9700 *------------------------------------------------------------------------------ * F8.c *------------------------------------------------------------------------------ */#include "VTypes.h"#include "VMath.h"#include "VToolBox.h"#include "VArray.h"#include "Clip.h"#include "VDisplay.h"#include "VGUtil.h"#include "Flash.h"#include "TextSrvr.h"	// ABD MERGE-TEXTURE 9/13/93#include "sfgen.h"		// JAM ABD MERGE-TEXTURE 9/13/93#include "Gouraud.h"		// MERGE-GOURAUD/*------------------------------------------------------------------------------ * Define the function names *------------------------------------------------------------------------------ */#define FLine FLine8#define FLineClip FLineClip8#define FlashFill FlashFill8#define FlashClip FlashClip8#define FFixedFLine FFixedFLine8#define FlashGouraud 		FlashGouraud8			// MERGE-GOURAUD#define FlashGouraudClip 	FlashGouraudClip8		// MERGE-GOURAUD/*------------------------------------------------------------------------------ * Define the two major data types. *------------------------------------------------------------------------------ */#define PixType unsigned char *typedef ULong VColorType[2];typedef unsigned char GColorType;		// MERGE-GOURAUD/*------------------------------------------------------------------------------ * Define the pixel routines. * For additional information about this code, see the Flash.c sources. *------------------------------------------------------------------------------ */#define InitColorPen(color,rgb) {color[0]=offscreen->GetNoDither(rgb); \	color[1]=color[0];}#define InitColorBrush(color,rgb) {color[0]=dither?offscreen->GetDither(rgb):offscreen->GetNoDither(rgb); \	color[1]=(color[0]>>16)|(color[0]&0xFFFF0000);	\	color[0]=(color[0]<<16)|(color[0]&0x0000FFFF);}/*#define InitPixel(pix,xval,yval,to) {pix = (unsigned char *)glpbBmRowAddresses[yval+to->yOffset];\	pix+=((LONG)(xval-to->xOffset)+(LONG)to->baseAddress);}*/// MERGE-GOURAUD [[[// this macro inits the color index based on the rgb -- index will range from 0..255// at most, and will be less for bit depths 1/2/4.  The index is an index into the standard color// table; index is an unsigned char, rgb is an RGBColor#define InitColorIndex(index,rgb) { index = rgb; }// MERGE-GOURAUD ]]]#define InitPixel(pix,xval,yval,to) {pix = (unsigned char*)to->baseAddress; \pix += (xval-to->xOffset); \pix += (yval-to->yOffset)*(long)(to->rowBytes);}#if USE_HMD#define InitPixelHMDL(pix,xval,yval,to) {pix = (unsigned char*)to->baseAddress; \pix += (xval-to->xOffset); \pix += (yval-to->yOffset)*(((long)(to->rowBytes)) << 1);	\if (gHMDOffsetLeft) pix += ((long)(to->rowBytes));	}#define InitPixelHMDR(pix,xval,yval,to) {pix = (unsigned char*)to->baseAddress; \pix += (xval-to->xOffset); \pix += (yval-to->yOffset)*(((long)(to->rowBytes)) << 1);	\if (gHMDOffsetRight) pix += ((long)(to->rowBytes));	}#define AddLinePixelHMD(pix,to) pix+=((long)to->rowBytes << 1)#endif // USE_HMD#define DecPixel(pix)  pix--#define IncPixel(pix)  pix++#define AddPixel(pix,length) pix+=length#define AddLinePixel(pix,to) pix+=to->rowBytes#define DecSetPixel(pix,color) *pix--=*color#define IncSetPixel(pix,color) *pix++=*color#define SetPixel(pix,color) *pix=*color// MERGE-GOURAUD [[[#define IncSetPixel2(pix,color) *pix++=color	// GOURAUD#define SetPixel2(pix,color) *pix=color			// GOURAUD#define PixVal(pix) ((long)pix)					// MERGE-GOURAUD#define GetGouraudDither(dith_abcd, the_shade, the_color)	(gTextureShader[the_shade].dith[3][dith_abcd][the_color])// MERGE-GOURAUD ]]]#define ScanFillPattern ScanFillPattern8void ScanFillPattern8(PixType pixel,int evenodd,int dx,VColorType color);								void ScanFillPattern8(PixType pixel,int evenodd,int dx,VColorType color) {											char col=color[0];			if(((long)pixel & 1) ^ (evenodd &1 ))pixel++;			do{*pixel=col; pixel+=2;}while((dx-=2)>0);/*	asm{														movea.l	pixel,a0			;  A0 = s						move.b	col,d1		;  D1.B = (unsigned char) c																move.w	dx,d2			;  dx							tst.w	d2				;  any bits?					ble.s	@p1											@p0																move.b	d1,(a0)+		;  start							adda	#1,a0			;  skip a byte					subq.w	#2,d2											bgt.s	@p0											@p1																} 			*/											}																			static ULong lMask[]={0,0x00FFFFFF,0x0000FFFF,0x000000FF};static ULong rMask[]={0,0xFF000000,0xFFFF0000,0xFFFFFF00};#define ScanFill ScanFill8			void ScanFill8(PixType pixel,int evenodd,int dx,VColorType color);										void ScanFill8(PixType pixel,int evenodd,int dx,VColorType color)											{			int ml,mr;				ULong *pl,*pr;ULong col=color[evenodd];pl=(ULong *)(((long)pixel)&0xFFFFFFFC);ml=((long)pixel)&0x03;pixel+=dx;pr=(ULong *)(((long)pixel)&0xFFFFFFFC);mr=((long)pixel)&0x03;		if(pl==pr)/*same 32 bits*/	{	if(ml)		{		if(mr)*pl=(*pl&(rMask[ml]|lMask[mr]))|(lMask[ml]&rMask[mr]&col);		else *pl=(*pl&rMask[ml])|(lMask[ml]&col);		}	else if(mr)*pl=(*pl&lMask[mr])|(rMask[mr]&col);	}else 	{// the powerpc section does exactly the same thing except that the compiler does// not handle the post-increment correctly. - BILBIL - 12/8/93#if __PPCC__	if(ml)		{		*pl=(*pl&rMask[ml])|(lMask[ml]&col);		*pl++;        }#else	if(ml)*pl++=(*pl&rMask[ml])|(lMask[ml]&col);#endif //__PPCC__	while(pl!=pr)*pl++=col;	if(mr)*pl=(*pl&lMask[mr])|(rMask[mr]&col);	}}			// MERGE-GOURAUD [[[/*------------------------------------------------------------------------------ * GouraudFillxxxx *------------------------------------------------------------------------------ */// GOURAUD -- we have to pattern fill dx pixels, going from intensity il to intensity ir#define DefaultGouraudFillPattern DefaultGouraudFillPattern8#define DefaultGouraudFill DefaultGouraudFill8#define GouraudFillPattern DefaultGouraudFillPattern8#define GouraudFill DefaultGouraudFill8// MERGE-GOURAUD ]]]					#include "FlashZ.h"