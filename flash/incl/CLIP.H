/*------------------------------------------------------------------------------ * Copyright _ 1991 by Virtus Corporation * All Rights Reserved * Written by David A. Smith * 117 Edinburgh So.  Suite 204 * Cary, North Carolina    27511 * (919) 467-9700 *------------------------------------------------------------------------------ * Clip.h *------------------------------------------------------------------------------*/#ifndef CLIP#define CLIP#include "VTypes.h"#include "VArray.h"#include "WTypes.h"//JAM 6/3/94//This global determines how small a window may get and still be a clip window//(if a window is 2 pixels tall, the frame fills in the window and there's no//need to clip everything behind).  This global needs to be set to something//less than than 1 pixel for printing since banding causes screens to be very//short, i.e. 3 or fewer pixels)extern FFixed gGlobalWindowClipMin;typedef struct FFixedRect	{		FFixed top;		FFixed bottom;		FFixed left;		FFixed right;	} FFixedRect;void InitClipper(void);void ReleaseClipper(void);// ABD WILLIAMS MERGE-TEXTURE 9/13/93 [[[V_Array *IdentNoPersp(V_Array *points, int cw);		// JAM TEXTUREV_Array *IndexIdentNoPersp(V_Array *points,V_Array *index,int cw);		// JAM TEXTUREV_Array *RealAbsoluteIdent(V_Array *points,int inside);		// ABD TEXTUREvoid	// JAM TEXTURENewIdent(V_Array *screen, V_Array *nopersp, V_Array *texture, int height, int cw,		 V_Array **screennew, V_Array **noperspnew, V_Array **texturenew);void	// JAM TEXTURENewIndexIdent(V_Array *screen, V_Array *nopersp, V_Array *texture, V_Array *index,		 int height, int cw,		 V_Array **screennew, V_Array **noperspnew, V_Array **texturenew);V_Array *AbsoluteIndexIdent(V_Array *points,V_Array *index,int cw);// ABD WILLIAMS MERGE-TEXTURE 9/13/93 ]]]// MERGE-GOURAUD [[[void IndexIdentGouraud(V_Array *points,V_Array *index,int cw,V_Array *intensities,	V_Array **new_points,V_Array **new_intensities);void IdentGouraud(V_Array *points,int cw,V_Array *intensities,	V_Array **new_points,V_Array **new_intensities);// MERGE-GOURAUD ]]]//struct V_Array *IndexIdent(struct V_Array *,struct V_Array *,int);//struct V_Array *Ident(struct V_Array *, int);//struct V_Array *AbsoluteIdent(struct V_Array *,int);//struct V_Array *IdentTexture(struct V_Array *,int,int);V_Array *IndexIdent(V_Array *points,V_Array *index,int cw);V_Array *Ident(V_Array *points, int cw);V_Array *AbsoluteIdent(V_Array *points,int inside);V_Array *AbsoluteIdentTexture(V_Array *,int ,int );		// MERGE16V_Array *	IdentTexture(V_Array *,int ,int );		// MERGE16/* Feature types (from SurfFeature.h)*/#define FEAT_MASK			0x03#define FEAT_TRANSPARENT	0		/* Hole */#define FEAT_TRANSLUCENT	1		/* Glass */#define FEAT_OPAQUE			2		/* Wall markings */// #define CLIP_MASK 	0x1C#define CLIP_FRAME	4	/* frame the polygon */#define CLIP_FILL	8	/* fill the polygon */#define CLIP_DITHER 0x10	/* dither the polygon */// ABD MERGE2 WILLIAMS 8/17/93 v#define CLIP_BBOX 0x20	/* calc the the polygon's world bounding box */// ABD MERGE2 WILLIAMS 8/17/93 ^#define CLIP_GOURAUD	0x40	/* gouraud-shade the polygon MERGE-GOURAUD */#define QD_METHOD	0#define FLASH_METHOD 1typedef struct semitrap{	Point left,right;	int lcross,rcross;	} semitrap;struct Clip:V_Array{	int type; 		/*TRUE or FALSE, means clip or not*/	int method;		/*indicates whether or not we use regions*/	int ytop;	int left,right;	Rect contain;	struct V_Array* ClipShape;	// JAM - object precision clipping	int	ClipShapeLength;		// JAM - object precision clipping	int		reject;				// JAM - object precision clipping	struct V_Array* LineEqtns;	// JAM - object precision clipping 3-94	FFixedRect BoundingBox;		// JAM - object precision clipping 3-94	FFixedRect ScreenRect;		// JAM - for not drawing frames on screen rect 4-94	void cClip(void);	struct Clip *MakeQDClip(struct V_Array *points);	struct Clip *CreateInitialClip(Rect *r);	struct Clip *ClipClip(struct V_Array *points);	struct Clip *ClipClipQD(struct Clip *trap2);	void ClipClipExact(struct Clip* NewClip, struct V_Array *);	// JAM - object precision clipping	int WinClipToPoly(Point *polyin, long lengthin,					  PointFFixed **polyoutptr, char **frameoutptr,					  long *lengthout, short MinPixels);	int ClipLineToPoly(PointFFixed *, PointFFixed *);	int ClipToPoly(Point3DAllInfo *polyin, PointFFixed *texturein, long lengthin,		   Point3DAllInfo **polyoutptr, PointFFixed **textureoutptr, long *lengthout,		   short MinPixels);		// MERGE-GOURAUD [[[	int GouraudClipToPoly(Point *polyin, long lengthin, PointFFixed **polyoutptr, long *lengthout,			FFixed *inten_in, FFixed **inten_outptr, short MinPixels);	// MERGE-GOURAUD ]]]	void TI(struct semitrap *tt1, struct semitrap *tb1, struct semitrap *tt2, struct semitrap *tb2,struct Clip *ptrap);	void dClip(void);    int DrawPoly(struct V_Array *points,int mode,struct GouraudRendSettings *grs, int pattern, int linepat, // MERGE-BUG// MERGE-GOURAUD		RGBColor *color,RGBColor *lineColor,int cw,struct ObjSpec *);		// ABD 3D PICK 8/13/93    int DrawPolyRef(struct V_Array *points, struct V_Array *pntRefs, int mode, struct GouraudRendSettings *grs, int pattern, int linepat, // MERGE-GOURAUD// MERGE-BUG		RGBColor *color, RGBColor *lineColor, int cw,struct ObjSpec *);		// ABD 3D PICK 8/13/93	int NewDrawPoly(V_Array *points,int fillmode,struct GouraudRendSettings *grs, int penmode,int pattern, int linepattern,		// MERGE-GOURAUD// MERGE-BUG	    RGBColor *color,RGBColor *lineColor,int cw, struct ObjSpec *obj);	// ABD 3D PICK 8/13/93    int NewDrawPolyRef(struct V_Array *points, struct V_Array *pntRefs, int mode,struct GouraudRendSettings *grs, int penmode,int pattern, int linepat, // MERGE-GOURAUD// MERGE-BUG		RGBColor *color, RGBColor *lineColor, int cw,struct ObjSpec *);		// ABD 3D PICK 8/13/93    int DrawQD(struct V_Array *points,RGBColor *color,RGBColor *lineColor,int mode,int penmode,int pat,int linepat);		// MERGE-BUG	struct V_Array *GetQDOutline(void);	void DrawTrap(void);	void GetRect(Rect *r);	};	typedef struct ClipStruct{	int left,right;	} ClipStruct ;// ABD MERGE-TEXTURE 9/13/93 took out Texture8void TestFlash(void);#define ClipPolyRef(pnts,pntRefs,cw)  ClipClip(IndexIdent(pnts,pntRefs,cw))#define ClipPoly(pnts,cw)			  ClipClip(Ident(pnts,cw))int			LongClipRect(PointLong *, PointLong *,Rect *);V_Array *	IndexLongClipPoly(V_Array *, V_Array *, Rect *, PointLong);V_Array *	LongClipPoly(V_Array *,Rect *,PointLong);// ABD 3D PICK 8/13/93 removed obsolete 3d pick routines that were hereextern  Clip *virtusClipper;// ABD 3D PICK 8/13/93 vextern int polyCheckMode;struct ObjSpec{						// ABD 3D PICK object specifier record	struct Polyhedron *poly;		// the picked polyhedron if non-NULL	struct PolyConvex *polyc;		// the picked polyconvex if non-NULL	struct SurfFeature *surffeat;	// the picked surface feature if non-NULL	int surfNum;					// the picked surface number if != NO_SURFACE_SPEC	int surfSide;					// the picked surface side if != NO_SURFACE_SPEC	};void FindPoly(struct ViewController *, Point, struct ObjSpec *);#define NO_SURFACE_SPEC	-1	// used for surfNum and surfSide in ObjSpec 							// when no surface specified (i.e. in the root poly)							// ABD 3D PICK 8/13/93 ^#endif //CLIP