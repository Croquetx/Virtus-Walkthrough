#ifndef FLASH#define FLASH#include "TextItem.h"	// ABD MERGE-TEXTURE 9/13/93 for TextureRendSettings#ifndef FLASHUSEASMERROR  Must Define FlashUseAsm via Options/Compiler/CodeGeneration/Defines// FLASHUSEASM=1		// Set via Options/Compiler/CodeGeneration/Defines						// Enables asm code for faster flashes.                        // BUT requires:						// Borland:	Must have Project/LocalOptions compile switch "-B" on.						// Borland: must do a DOS "TASM <filename.asm>" to get obj.// FLASHUSEASM=0		// Slower, non-asm code. But easier builds.						// NOTE: NO "-D" (like normal switches) in front.#endif#if FLASHUSEASM// -DFLASHUSEASM=1		// Set via Options/Compiler/CodeGeneration/Defines						// Borland:	Must have Project/LocalOptions compile switch "-B" on.						// Borland: must do a DOS "TASM <filename.asm>" to get obj.						// NOTE: Windows development info in FW4.cextern int FlashUseAsm; // Runtime switch. Asserted in fw4.c						// Also lets us know if runtime has it compiled.#if __BORLANDC__             // Handle various assemblers#define ASM asm#elif MICROSOFT#define ASM __asm#endif#endif  //FLASHUSEASM#define FASTER_PLEASE	1	// causes flash to use the index table rather than							// calculating the row addresses// Flash only works for certain bit-depths on certain machines.  The Mac can do// 1,2,4,8,16, and 32-bit flash, but not 24-bit.  Windows can handle 4,8,16,24, and // 32-bit flash, but not 1 or 2-bit.#if MACINTOSH#define FLASH1	TRUE#define FLASH2	TRUE#define FLASH24	FALSE#elif WINDOWS#define FLASH1	FALSE#define FLASH2	FALSE#define FLASH24	TRUE#endif#if 1int FlashFill32(struct V_Offscreen *to,struct V_Array *points,	RGBColor *rgb,RGBColor *lineColor,int mode,int pattern);int FlashClip32(struct V_Offscreen *to,struct V_Array *points,	RGBColor *rgb,RGBColor *lineColor,struct Clip *clip,int mode,int pattern);void FLine32(struct V_Offscreen *to, int x1,int y1,int x2,int y2, RGBColor *rgb);void FFixedFLine32(struct V_Offscreen *to, FFixed x1,FFixed y1,FFixed x2,FFixed y2,RGBColor *rgb);void FLineClip32(struct V_Offscreen *to, int x1,int y1,int x2,int y2, RGBColor *rgb, struct Clip *clipper);// MERGE-GOURAUD [[[int FlashGouraud32(struct V_Offscreen *to,struct V_Array *points,struct V_Array *intensities,	unsigned char rgb_index,RGBColor *lineColor,int mode,int pattern);int FlashGouraudClip32(struct V_Offscreen *to,struct V_Array *points,struct V_Array *intensities,	unsigned char rgb_index,RGBColor *lineColor,struct Clip *clip,int mode,int pattern);// MERGE-GOURAUD ]]]#endif/*-----------------------------------------------------------------------------------*/#if FLASH24int FlashFill24(struct V_Offscreen *to,struct V_Array *points,	RGBColor *rgb,RGBColor *lineColor,int mode,int pattern);int FlashClip24(struct V_Offscreen *to,struct V_Array *points,	RGBColor *rgb,RGBColor *lineColor,struct Clip *clip,int mode,int pattern);void FLine24(struct V_Offscreen *to, int x1,int y1,int x2,int y2, RGBColor *rgb);void FFixedFLine24(struct V_Offscreen *to, FFixed x1,FFixed y1,FFixed x2,FFixed y2,RGBColor *rgb);void FLineClip24(struct V_Offscreen *to, int x1,int y1,int x2,int y2, RGBColor *rgb, struct Clip *clipper);// MERGE-GOURAUD [[[int FlashGouraud24(struct V_Offscreen *to,struct V_Array *points,struct V_Array *intensities,	unsigned char rgb_index,RGBColor *lineColor,int mode,int pattern);int FlashGouraudClip24(struct V_Offscreen *to,struct V_Array *points,struct V_Array *intensities,	unsigned char rgb_index,RGBColor *lineColor,struct Clip *clip,int mode,int pattern);// MERGE-GOURAUD ]]]#endif/*-----------------------------------------------------------------------------------*/#if 1int FlashFill16(struct V_Offscreen *to,struct V_Array *points,	RGBColor *rgb,RGBColor *lineColor,int mode,int pattern);int FlashClip16(struct V_Offscreen *to,struct V_Array *points,	RGBColor *rgb,RGBColor *lineColor,struct Clip *clip,int mode,int pattern);void FLine16(struct V_Offscreen *to, int x1,int y1,int x2,int y2, RGBColor *rgb);void FFixedFLine16(struct V_Offscreen *to, FFixed x1,FFixed y1,FFixed x2,FFixed y2,RGBColor *rgb);void FLineClip16(struct V_Offscreen *to, int x1,int y1,int x2,int y2, RGBColor *rgb, struct Clip *clipper);// MERGE-GOURAUD [[[int FlashGouraud16(struct V_Offscreen *to,struct V_Array *points,struct V_Array *intensities,	unsigned char rgb_index,RGBColor *lineColor,int mode,int pattern);int FlashGouraudClip16(struct V_Offscreen *to,struct V_Array *points,struct V_Array *intensities,	unsigned char rgb_index,RGBColor *lineColor,struct Clip *clip,int mode,int pattern);// MERGE-GOURAUD ]]]#endif/*-----------------------------------------------------------------------------------*/int FlashFill8(struct V_Offscreen *to,struct V_Array *points,	RGBColor *rgb,RGBColor *lineColor,int mode,int pattern);int FlashClip8(struct V_Offscreen *to,struct V_Array *points,	RGBColor *rgb,RGBColor *lineColor,struct Clip *clip,int mode,int pattern);// ABD MERGE-TEXTURE 9/13/93 [[[int Texture8(struct V_Offscreen *to,struct V_Array *fpoints,struct V_Array *tpoints,struct V_Array *nppoints,	struct Clip *clipper, struct TextureRendSettings *);	// MERGE-HMD added "struct"int ShadedLinearTexture8(struct TextureRendSettings *textureinfo, struct V_Offscreen *to,	struct V_Array *fpoints, struct V_Array *tpoints, struct Clip *clipper);	// MERGE-HMD added "struct"// ABD MERGE-TEXTURE 9/13/93 ]]]void FLine8(struct V_Offscreen *to, int x1,int y1,int x2,int y2, RGBColor *rgb);void FFixedFLine8(struct V_Offscreen *to, FFixed x1,FFixed y1,FFixed x2,FFixed y2,RGBColor *rgb);void FLineClip8(struct V_Offscreen *to, int x1,int y1,int x2,int y2, RGBColor *rgb, struct Clip *clipper);// MERGE-GOURAUD [[[int FlashGouraud8(struct V_Offscreen *to,struct V_Array *points,struct V_Array *intensities,	unsigned char rgb_index,RGBColor *lineColor,int mode,int pattern);int FlashGouraudClip8(struct V_Offscreen *to,struct V_Array *points,struct V_Array *intensities,	unsigned char rgb_index,RGBColor *lineColor,struct Clip *clip,int mode,int pattern);// MERGE-GOURAUD ]]]/*-----------------------------------------------------------------------------------*/int FlashFill4(struct V_Offscreen *to,struct V_Array *points,	RGBColor *rgb,RGBColor *lineColor,int mode,int pattern);int FlashClip4(struct V_Offscreen *to,struct V_Array *points,	RGBColor *rgb,RGBColor *lineColor,struct Clip *clip,int mode,int pattern);void FLine4(struct V_Offscreen *to, int x1,int y1,int x2,int y2, RGBColor *rgb);void FFixedFLine4(struct V_Offscreen *to, FFixed x1,FFixed y1,FFixed x2,FFixed y2,RGBColor *rgb);void FLineClip4(struct V_Offscreen *to, int x1,int y1,int x2,int y2, RGBColor *rgb, struct Clip *clipper);// MERGE-GOURAUD [[[int FlashGouraud4(struct V_Offscreen *to,struct V_Array *points,struct V_Array *intensities,	unsigned char rgb_index,RGBColor *lineColor,int mode,int pattern);int FlashGouraudClip4(struct V_Offscreen *to,struct V_Array *points,struct V_Array *intensities,	unsigned char rgb_index,RGBColor *lineColor,struct Clip *clip,int mode,int pattern);// MERGE-GOURAUD ]]]/*-----------------------------------------------------------------------------------*/int FlashFill4x1(struct V_Offscreen *to,struct V_Array *points,	RGBColor *rgb,RGBColor *lineColor,int mode,int pattern);int FlashClip4x1(struct V_Offscreen *to,struct V_Array *points,	RGBColor *rgb,RGBColor *lineColor,struct Clip *clip,int mode,int pattern);void FLine4x1(struct V_Offscreen *to, int x1,int y1,int x2,int y2, RGBColor *rgb);void FFixedFLine4x1(struct V_Offscreen *to, FFixed x1,FFixed y1,FFixed x2,FFixed y2,RGBColor *rgb);void FLineClip4x1(struct V_Offscreen *to, int x1,int y1,int x2,int y2, RGBColor *rgb, struct Clip *clipper);// MERGE-GOURAUD [[[int FlashGouraud4x1(struct V_Offscreen *to,struct V_Array *points,struct V_Array *intensities,	unsigned char rgb_index,RGBColor *lineColor,int mode,int pattern);int FlashGouraudClip4x1(struct V_Offscreen *to,struct V_Array *points,struct V_Array *intensities,	unsigned char rgb_index,RGBColor *lineColor,struct Clip *clip,int mode,int pattern);// MERGE-GOURAUD ]]]/*-----------------------------------------------------------------------------------*/#if FLASH2int FlashFill2(struct V_Offscreen *to,struct V_Array *points,	RGBColor *rgb,RGBColor *lineColor,int mode,int pattern);int FlashClip2(struct V_Offscreen *to,struct V_Array *points,	RGBColor *rgb,RGBColor *lineColor,struct Clip *clip,int mode,int pattern);void FLine2(struct V_Offscreen *to, int x1,int y1,int x2,int y2, RGBColor *rgb);void FFixedFLine2(struct V_Offscreen *to, FFixed x1,FFixed y1,FFixed x2,FFixed y2,RGBColor *rgb);void FLineClip2(struct V_Offscreen *to, int x1,int y1,int x2,int y2, RGBColor *rgb, struct Clip *clipper);// MERGE-GOURAUD [[[int FlashGouraud2(struct V_Offscreen *to,struct V_Array *points,struct V_Array *intensities,	unsigned char rgb_index,RGBColor *lineColor,int mode,int pattern);int FlashGouraudClip2(struct V_Offscreen *to,struct V_Array *points,struct V_Array *intensities,	unsigned char rgb_index,RGBColor *lineColor,struct Clip *clip,int mode,int pattern);// MERGE-GOURAUD ]]]#endif/*-----------------------------------------------------------------------------------*/#if FLASH1int FlashFill1(struct V_Offscreen *to,struct V_Array *points,	RGBColor *rgb,RGBColor *lineColor,int mode,int pattern);int FlashClip1(struct V_Offscreen *to,struct V_Array *points,	RGBColor *rgb,RGBColor *lineColor,struct Clip *clip,int mode,int pattern);void FLine1(struct V_Offscreen *to, int x1,int y1,int x2,int y2, RGBColor *rgb);void FFixedFLine1(struct V_Offscreen *to, FFixed x1,FFixed y1,FFixed x2,FFixed y2,RGBColor *rgb);void FLineClip1(struct V_Offscreen *to, int x1,int y1,int x2,int y2, RGBColor *rgb, struct Clip *clipper);// MERGE-GOURAUD [[[int FlashGouraud1(struct V_Offscreen *to,struct V_Array *points,struct V_Array *intensities,	unsigned char rgb_index,RGBColor *lineColor,int mode,int pattern);int FlashGouraudClip1(struct V_Offscreen *to,struct V_Array *points,struct V_Array *intensities,	unsigned char rgb_index,RGBColor *lineColor,struct Clip *clip,int mode,int pattern);// MERGE-GOURAUD ]]]#endif/*-----------------------------------------------------------------------------------*/extern int (*FlashFill)(struct V_Offscreen *to,V_Array *points,	RGBColor *rgb,RGBColor *lineColor,int mode,int pattern);extern int (*FlashClip)(struct V_Offscreen *to,V_Array *points,	RGBColor *rgb,RGBColor *lineColor,struct Clip *clip,int mode,int pattern);	// MERGE-HMD added "struct"	// MERGE-GOURAUD [[[extern int (*FlashGouraud)(struct V_Offscreen *to,V_Array *points,struct V_Array *intensities,	unsigned char rgb_index,RGBColor *lineColor,int mode,int pattern);extern int (*FlashGouraudClip)(struct V_Offscreen *to,V_Array *points,struct V_Array *intensities,	unsigned char rgb_index,RGBColor *lineColor,struct Clip *clip,int mode,int pattern);	// MERGE-HMD added "struct"// MERGE-GOURAUD ]]]/*-----------------------------------------------------------------------------------*//*-----------------------------------------------------------------------------------*/// MERGE-GOURAUD [[[#define ABS(a)		(((a)<0) ? -(a) : (a))#define SGN(a)		(((a)<0) ? -1 : 1)// MERGE-GOURAUD ]]]#endif //FLASH