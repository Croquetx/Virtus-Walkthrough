#include "VTypes.h"#if VWT /* jca 17 Sept 93.  Not in VR { */#include "VToolBox.h"#include "Export.h"#include "DXF_IN.h"#include "DXFINCOM.h"#include "DXFOUT.H"#include "X2D.H"#include "IMP2D.H"ULong		dxfinOptions;DxfFile		**OpenDxf		(os_id id, color_mode cm, geometry g){return 0;}int			CloseDxf		(DxfFile ** h){return 0;}int			OpenDxfHdr		(DxfFile ** h){return 0;}int			CloseDxfHdr		(DxfFile ** h){return 0;}int			DxfComment		(DxfFile ** h, char * text){return 0;}int			DxfInitLayers	(DxfFile ** h, short nrLayers){return 0;}int			DxfLayerData	(DxfFile ** h, char * name, RGBColor *color){return 0;}int			DxfEndLayers	(DxfFile ** h){return 0;}int			DisposDxf		(DxfFile ** h){return 0;}int			DxfPoly			(DxfPBRec * pb){return 0;}int			DxfBase			(DxfPBRec * pb){return 0;}int			GetDxfData		(DxfPBRec * pb){return 0;}void		DxfBufCleared	(DxfFile ** h){}X2DFile		**OpenX2D(fmt2d f, color_mode cm){return 0;}int			CloseX2D(X2DFile ** h){return 0;}int			DisposX2D(X2DFile ** h){return 0;}int			X2DInitLayers(X2DFile ** h, int nrLayers){return 0;}int			X2DLayerData(X2DFile ** h, char * name, RGBColor * color){return 0;}int			X2DEndLayers(X2DFile ** h){return 0;}int			X2DPolygon(X2DFile ** h, X2DPBRec * pb){return 0;}int			X2DEnd(X2DFile ** h){return 0;}int			X2DGetData(X2DFile ** h, void ** buf, long * howmuch){return 0;}int			X2DGetRsrc(X2DFile ** h, long * type, int * id, long * size, void **theData){return 0;}int			X2DRuler(short *unitCode, double *UnitSizeInMeters){return0;}	/*	MOD4 920326	*///void MakeSFReply(SFReply *reply, struct V_File *){}#if MACINTOSHvoid Import(SFReply *sf){}#elif WINDOWSvoid Import(char *sf){}#endif//int NewPoly(Point3DFFixed *, int, short **, int, short *, RGBAColor *,long){return 0;}//RGBColor PolyColor(RGBAColor *, int){RGBColor b; b.red=b.green=b.blue=0;return b;}long	Imp2dNrLayers(void ** h){return 0;}long	Imp2dNrObjects(void ** h){return 0;}#if MACINTOSHvoid	**Imp2dOpen(fmt2d format, int nrSegsInCircle, SFReply * r){return 0;}#elif WINDOWSvoid	**Imp2dOpen(fmt2d format, int nrSegsInCircle, char * r){return 0;}void	Imp2dFree(obj2d * theObject) {}#endif //MACINTOSHvoid	Imp2dLayerInfo(void ** h, int layerID, char * layerName, long * all,long * useful){}void	Imp2dObject(void ** h, int layerID, int objWithinLayer, obj2d *theObject){}void	Imp2dEnd(void ** h){}void	Imp2dRul(short *unitCode, double *UnitSizeInMeters){}#endif // VWT jca 17 Sept 93 }