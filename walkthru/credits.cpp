#include "VTypes.h"#include "CVWCntrl.h"#include "VFile.h"#include "VDialog.h"#include "VItem.h"#include "VDisplay.h"#include "VTextDef.h"#include "VGUtil.h"#include "VGraphic.h"#include "VWindow.h"#include "Credits.h"#include "VSound.h"	//MERGE-PRO-JAM-4#include "AppFiles.h"	//MERGE-PRO-JAM-4#include "VError.h"		// jca 4 Oct 93#include "BMPHandl.h"#include "AppText.h"	//PRO-JAP#define EDIT_H	50voidDoTheCreditThing(CAVWalkController *controller)	{	V_Offscreen		*saveBitmap = controller->creditScreen;	CreditDialog	*theDialog;	Rect			sr, dr, r;	int				ret, textLen;	char			*string, nullChar = 0x00;	GetScreen(&sr);	dr.left = 0;	dr.right = 297;	dr.top = 0;	dr.bottom = 66;	if (saveBitmap)		{		int	delta;				delta = saveBitmap->rect.bottom - saveBitmap->rect.top;		dr.bottom += delta + D_EDGE;		delta = saveBitmap->rect.right - saveBitmap->rect.left + (D_EDGE*2);		if (delta > dr.right)			dr.right = delta;		}	if (controller->creditText)		string = (char*)controller->creditText->Use();	else		string = NULL;			dr.bottom += (EDIT_H + D_EDGE);	dr.left = ((sr.right-sr.left) - dr.right)/2;	dr.right += dr.left;	dr.top = ((sr.bottom-sr.top) - dr.bottom)/2;	dr.bottom += dr.top;#if WINDOWS	dr.bottom += 10;#endif	// ABD JAN95 CREDITS	{	Rect screenRect;		GetScreen(&screenRect);		if (dr.left < screenRect.left+20)			dr.left = screenRect.left+20;		if (dr.top < screenRect.top+40)			dr.top = screenRect.top+40;		if (dr.bottom > screenRect.bottom-20)			dr.bottom = screenRect.bottom-20;		if (dr.right > screenRect.right-20)			dr.right = screenRect.right-20;	}	// ABD JAN95 CREDITS	theDialog = new(CreditDialog);	theDialog->cDialog(&dr);	theDialog->oldScreen = saveBitmap;	theDialog->creditScreen = saveBitmap;	if (string)		theDialog->creditText->SetText(string);	if (saveBitmap)		theDialog->pictButton->SetText(TXTB_CHANGEPICT);	if (controller->creditText)		controller->creditText->Unuse();	theDialog->theWindow->mxSize.h = sr.right - sr.left;	theDialog->theWindow->mxSize.v = sr.bottom - sr.top;	theDialog->theWindow->mnSize.h = 297;	theDialog->theWindow->mnSize.v = 66 + EDIT_H + D_EDGE;	theDialog->theWindow->Move(&dr);	theDialog->SetTitle(TXTM_CREDITS);      // requested by the japanese	theDialog->Show();	ret = theDialog->Modal();	switch(ret)		{		case 0:	// OK			if ((theDialog->creditScreen != theDialog->oldScreen) && theDialog->oldScreen)				theDialog->oldScreen->dOffscreen();			controller->creditScreen = theDialog->creditScreen;			if (controller->creditText)				controller->creditText->dArray();			textLen = theDialog->creditText->TextLength();			if (textLen)				{				controller->creditText = new(V_Array);				controller->creditText->cArray(textLen, sizeof(char), 4);				string = (char*)controller->creditText->Use();				theDialog->creditText->GetText(string);				controller->creditText->Unuse();				controller->creditText->Append(&nullChar);				}			controller->SetChange(TRUE);			break;		case 1:	// Cancel			if ((theDialog->creditScreen != theDialog->oldScreen) && theDialog->creditScreen)				theDialog->creditScreen->dOffscreen();			break;		}	theDialog->Delete();	}voidShowCredits(V_Offscreen *theBitmap, V_Array *theText)	{	CreditScreen	*theDialog;	Rect			sr, dr, r;	int				ret, textLen, lines = 0;	char			*string;	GetScreen(&sr);	dr.left = 0;	dr.right = 297;	dr.top = 0;	dr.bottom = D_EDGE*2 + D_BTNH;	if (theBitmap)		{		int	delta;				delta = theBitmap->rect.bottom - theBitmap->rect.top;		dr.bottom += delta + D_EDGE;		delta = theBitmap->rect.right - theBitmap->rect.left + (D_EDGE*2);		if (delta > dr.right)			dr.right = delta;		}	if (theText)		{	#if WINDOWS		HDC	hdc;	#endif //WINDOWS		int length,width;				string = (char*)theText->Use();		length = theText->ALength();	#if WINDOWS		hdc = GetDC(NULL);		currentDevice = hdc;	#endif //WINDOWS		VSetFont(vAppFont,10,vNormal);		width = VTextWidth(string,0,length);	#if WINDOWS		ReleaseDC(NULL,hdc);	#endif //WINDOWS				lines = (width/(dr.right - dr.left - (D_EDGE*2) -10)) +1;		dr.bottom += (lines*14 + D_EDGE);		}	else		string = NULL;			dr.left = ((sr.right-sr.left) - dr.right)/2;	dr.right += dr.left;	dr.top = ((sr.bottom-sr.top) - dr.bottom)/2;	dr.bottom += dr.top;	theDialog = new(CreditScreen);	theDialog->cDialog(&dr);	theDialog->creditScreen = theBitmap;	if (string)		theDialog->creditText->SetText(string);	if (theText)		theText->Unuse();	theDialog->creditText->GetRect(&r);	if (theBitmap)		{		r.top = D_EDGE*2;		r.top += (theBitmap->rect.bottom - theBitmap->rect.top);		}	else		{		r.top = D_EDGE;		}	r.bottom = r.top + (lines*14);	theDialog->creditText->SetRect(&r);	theDialog->SetTitle(TXTM_CREDITS);	theDialog->Show();	theDialog->Modal();	theDialog->Delete();	}V_Dialog*CreditDialog::cDialog(Rect *r)	{	Rect	tempRect, dataRect;	VStyleRec	theStyle;		V_Dialog::cDialog(r);	dataRect = *r;	dataRect.right -= dataRect.left;	dataRect.left = 0;	dataRect.bottom -= dataRect.top;	dataRect.top = 0;		okButton = new(V_CtrlButton_Die);	okButton->cItem();	tempRect.right = dataRect.right - D_EDGE;	tempRect.left = tempRect.right - D_BTNW;	tempRect.bottom = dataRect.bottom - D_EDGE;	tempRect.top = tempRect.bottom - D_BTNH;	okButton->SetRect(&tempRect);	okButton->SetText(TXTC_OK);	okButton->SetFlag(0);#if WINDOWS    okButton->SetCtrlNumber(IDOK);#endif	AddItem(okButton);	cancelButton = new(V_CtrlButton_Die);	cancelButton->cItem();	tempRect.right = tempRect.left - D_EDGE;	tempRect.left = tempRect.right - D_BTNW;	cancelButton->SetRect(&tempRect);	cancelButton->SetText(TXTC_CANCEL);	cancelButton->SetFlag(1);#if WINDOWS    cancelButton->SetCtrlNumber(IDCANCEL);#endif	AddItem(cancelButton);		pictButton = new(PICTButton);	pictButton->cItem();	tempRect.left = D_EDGE;	tempRect.right = tempRect.left + D_BTNW;	pictButton->SetRect(&tempRect);	pictButton->SetText(TXTB_ADDPICT);	AddItem(pictButton);		noPictButton = new(NoPICTButton);	noPictButton->cItem();	tempRect.bottom = tempRect.top - 3;	tempRect.top = tempRect.bottom - D_BTNH;	noPictButton->SetRect(&tempRect);	noPictButton->SetText(TXTB_NOPICT);	AddItem(noPictButton);	creditText = new(V_MultilineEditText);   // make multiline.  jca 22OCT94	creditText->cItem();	theStyle.just = vJustLeft;	theStyle.size = 10;	theStyle.font = vAppFont;	theStyle.face = vDefTextFace;	theStyle.textFlags = TEXT_AUTOFORMAT|TEXT_ERASE;	creditText->SetStyle(&theStyle);	tempRect.top = D_EDGE;	tempRect.left = D_EDGE;	tempRect.bottom = tempRect.top + EDIT_H;	tempRect.right = dataRect.right - D_EDGE;	creditText->SetRect(&tempRect);	AddItem(creditText);		return this;	}voidCreditDialog::ResizeDialog(int dx, int dy)	{	Rect	tempRect;	Rect screenRect;	theWindow->Hide();	theWindow->Locate(&tempRect);	if ((dx + (tempRect.right-tempRect.left)) < theWindow->mnSize.h)		dx = theWindow->mnSize.h - (tempRect.right-tempRect.left);	if ((dy + (tempRect.bottom-tempRect.top)) < theWindow->mnSize.v)		dy = theWindow->mnSize.v - (tempRect.bottom-tempRect.top);	tempRect.left -= (dx/2);	tempRect.right += (dx - (dx/2));	tempRect.top -= (dy/2);	tempRect.bottom += (dy - (dy/2));		// ABD JAN95 CREDITS	GetScreen(&screenRect);	if (tempRect.left < screenRect.left+20)		tempRect.left = screenRect.left+20;	if (tempRect.top < screenRect.top+40)		tempRect.top = screenRect.top+40;	if (tempRect.bottom > screenRect.bottom-20)		tempRect.bottom = screenRect.bottom-20;	if (tempRect.right > screenRect.right-20)		tempRect.right = screenRect.right-20;	// ABD JAN95 CREDITS	theWindow->Move(&tempRect);	theWindow->Locate(&tempRect);		dataRect = tempRect;	dataRect.right -= dataRect.left;	dataRect.left = 0;	dataRect.bottom -= dataRect.top;	dataRect.top = 0;		tempRect.right = dataRect.right - D_EDGE;	tempRect.left = tempRect.right - D_BTNW;	tempRect.bottom = dataRect.bottom - D_EDGE;	tempRect.top = tempRect.bottom - D_BTNH;	okButton->SetRect(&tempRect);	tempRect.right = tempRect.left - D_EDGE;	tempRect.left = tempRect.right - D_BTNW;	cancelButton->SetRect(&tempRect);	tempRect.left = D_EDGE;	tempRect.right = tempRect.left + D_BTNW;	pictButton->SetRect(&tempRect);	tempRect.bottom = tempRect.top - 3;	tempRect.top = tempRect.bottom - D_BTNH;	noPictButton->SetRect(&tempRect);	tempRect.top = D_EDGE;	tempRect.left = D_EDGE;	tempRect.bottom = tempRect.top + EDIT_H;	tempRect.right = dataRect.right - D_EDGE;	creditText->SetRect(&tempRect);		theWindow->Show();	}voidCreditDialog::Display(int type,int x,int y)	{	if (creditScreen)		{		Rect	r;		short	delta;				r = creditScreen->rect;		r.top += D_EDGE;		r.bottom += D_EDGE;		r.left += D_EDGE;		r.right += D_EDGE;		r.top += EDIT_H;		r.bottom += EDIT_H;		delta = dataRect.right - dataRect.left - (D_EDGE*2);		if (delta > (r.right-r.left))			{			delta = delta - (r.right-r.left);			r.right += (delta/2);			r.left += (delta/2);			}		// ABD JAN95 [[[		if (r.left < dataRect.left+D_EDGE)			r.left = dataRect.left+D_EDGE;		if (r.top < dataRect.top+D_EDGE)			r.top = dataRect.top+D_EDGE;		if (r.bottom > dataRect.bottom-D_EDGE)			r.bottom = dataRect.bottom-D_EDGE;		if (r.right > dataRect.right-D_EDGE)			r.right = dataRect.right-D_EDGE;		// ABD JAN95 ]]]		creditScreen->MetaTo(this,&creditScreen->rect,&r);		}		V_Pane::Display(type,x,y);	}V_Dialog*CreditScreen::cDialog(Rect *r)	{	Rect	tempRect, dataRect;	VStyleRec	theStyle;		V_Dialog::cDialog(r);	dataRect = *r;	dataRect.right -= dataRect.left;	dataRect.left = 0;	dataRect.bottom -= dataRect.top;	dataRect.top = 0;		okButton = new(V_CtrlButton_Die);	okButton->cItem();	tempRect.right = (dataRect.right-dataRect.left + D_BTNW)/2;	tempRect.left = tempRect.right - D_BTNW;	tempRect.bottom = dataRect.bottom - D_EDGE;	tempRect.top = tempRect.bottom - D_BTNH;	okButton->SetRect(&tempRect);	okButton->SetText(TXTC_OK);	okButton->SetDefault(TRUE);	SetDefBtn(okButton);#if WINDOWS    okButton->SetCtrlNumber(IDOK);#endif	AddItem(okButton);	creditText = new(V_Text);	creditText->cItem();	theStyle.just = vJustLeft;	theStyle.size = 10;	theStyle.font = vAppFont;	theStyle.face = vDefTextFace;#if MACINTOSH	theStyle.textFlags = TEXT_AUTOFORMAT|TEXT_ERASE;#elif WINDOWS	theStyle.textFlags = TEXT_AUTOFORMAT;#endif //MACINTOSH	creditText->SetStyle(&theStyle);	tempRect.top = D_EDGE;	tempRect.left = D_EDGE;	tempRect.bottom = tempRect.top + EDIT_H;	tempRect.right = dataRect.right - D_EDGE;	creditText->SetRect(&tempRect);	AddItem(creditText);		return this;	}voidCreditScreen::Display(int type,int x,int y)	{	if (creditScreen)		{		Rect	r;		short	delta;				r = creditScreen->rect;		r.top += D_EDGE;		r.bottom += D_EDGE;		r.left += D_EDGE;		r.right += D_EDGE;		delta = dataRect.right - dataRect.left - (D_EDGE*2);		if (delta > (r.right-r.left))			{			delta = delta - (r.right-r.left);			r.right += (delta/2);			r.left += (delta/2);			}		// ABD JAN95 [[[		if (r.left < dataRect.left+D_EDGE)			r.left = dataRect.left+D_EDGE;		if (r.top < dataRect.top+D_EDGE)			r.top = dataRect.top+D_EDGE;		if (r.bottom > dataRect.bottom-D_EDGE)			r.bottom = dataRect.bottom-D_EDGE;		if (r.right > dataRect.right-D_EDGE)			r.right = dataRect.right-D_EDGE;		// ABD JAN95 ]]]		creditScreen->MetaTo(this,&creditScreen->rect,&r);		}		V_Pane::Display(type,x,y);	}	voidPICTButton::Action()	{	V_File		*file;	V_Dialog	*theDialog;	CreditDialog *installedDialog = (CreditDialog*)thePane;	int			dx = 0, dy = 0;	Rect screenRect;	if (!installedDialog) return;	if(installedDialog->creditScreen)		{		dx = installedDialog->creditScreen->rect.right - installedDialog->creditScreen->rect.left;		dy = installedDialog->creditScreen->rect.bottom - installedDialog->creditScreen->rect.top;		dx += (D_EDGE*2);		}	if (dx < (installedDialog->dataRect.right-installedDialog->dataRect.left))		dx = installedDialog->dataRect.right-installedDialog->dataRect.left;	dx -= (D_EDGE*2);		file = new(V_File);#if MACINTOSH	//MERGE-PRO-JAM-4	file->cFile(LOADAS,'PICT',0L,NULL,"");#elif WINDOWS	file->cFile(LOADAS,appFileTypeBMP,0L,"bitmap|*.bmp||","");#endif	if (file->Find())		{		file->dFile();		return;		}	file->Open(FALSE);	if ((installedDialog->creditScreen != installedDialog->oldScreen) && installedDialog->creditScreen)		installedDialog->creditScreen->dOffscreen();	#if MACINTOSH	installedDialog->creditScreen = new(V_Offscreen);	if (installedDialog->creditScreen->IOPictFile(file,MainDepth()))		VPlaySound(beepSound);	//MERGE-PRO-JAM-4	#elif WINDOWS	{		int error = 0;		BMPReader *bReader;		bReader = new(BMPReader);		if (!error) error = bReader->cBMPReader(file);		if (!error) error = bReader->ReadImage(8);		if (!error) installedDialog->creditScreen = bReader->GetScreen();		if (installedDialog->creditScreen == NULL) error = memFullErr;		bReader->dBMPReader();        if(error)			VPlaySound(beepSound);    }	#endif	file->Close();	file->dFile();		if(installedDialog->creditScreen)		{		SetText(TXTB_CHANGEPICT);		dx -= (installedDialog->creditScreen->rect.right - installedDialog->creditScreen->rect.left);		dy -= (installedDialog->creditScreen->rect.bottom - installedDialog->creditScreen->rect.top);		dx = -dx;		dy = -dy;		}	else		{		dx = 0;		dy = 0;		}			// ABD JAN95 CREDITS	if (dx > screenRect.right)		dx = screenRect.right - 20;	if (dy > screenRect.bottom)		dy = screenRect.bottom - 40;	// ABD JAN95 CREDITS		installedDialog->ResizeDialog(dx,dy);	}voidNoPICTButton::Action()	{	CreditDialog *installedDialog = (CreditDialog*)thePane;	int			dx = 0, dy = 0;	if (!installedDialog) return;	if(!(installedDialog->creditScreen)) return;		dx = (installedDialog->creditScreen->rect.right - installedDialog->creditScreen->rect.left);	dy = (installedDialog->creditScreen->rect.bottom - installedDialog->creditScreen->rect.top);		dx = -dx;	dy = -dy;		if ((installedDialog->creditScreen != installedDialog->oldScreen) && installedDialog->creditScreen)		installedDialog->creditScreen->dOffscreen();	installedDialog->creditScreen = NULL;		installedDialog->ResizeDialog(dx,dy);	}