#include "VIO.h"#define IFF_FORM		MakeID('F', 'O', 'R', 'M')#define IFF_PROP		MakeID('P', 'R', 'O', 'P')#define IFF_LIST		MakeID('L', 'I', 'S', 'T')#define IFF_CAT			MakeID('C', 'A', 'T', ' ')#define IFF_VMDL		MakeID('V', 'M', 'D', 'L')#define IFF_VCLP		MakeID('V', 'C', 'L', 'P')#define IFF_VPRF		MakeID('V', 'P', 'R', 'F')#define IFF_VERS		MakeID('V', 'E', 'R', 'S')#define IFF_ID			MakeID('I', 'D', ' ', ' ')#define IFF_NAME		MakeID('N', 'A', 'M', 'E')#define IFF_DATA		MakeID('D', 'A', 'T', 'A')#define IFF_PPRF		MakeID('P', 'R', 'E', 'F')#define IFF_CPRF		MakeID('C', 'P', 'R', 'F')#define IFF_VPRF		MakeID('V', 'P', 'R', 'F')#define IFF_LAYR		MakeID('L', 'A', 'Y', 'R')#define IFF_ROOT		MakeID('R', 'O', 'O', 'T')#define IFF_TRACE		MakeID('T', 'R', 'A', 'C')#define IFF_FILE		MakeID('F', 'I', 'L', 'E')// ABD MERGE-TEXTURE 9/13/93 [[[#define IFF_SFTX		MakeID('S', 'F', 'T', 'X')	// ABD TEXTURE - surface feature texture #define IFF_SUTX		MakeID('S', 'U', 'T', 'X')	// ABD TEXTURE - surface texture #define IFF_PLTX		MakeID('P', 'L', 'T', 'X')	// ABD TEXTURE - polyhedron texture #define IFF_TXTB		MakeID('T', 'X', 'T', 'B')	// ABD TEXTURE - texture table #define IFF_TXTE		MakeID('T', 'X', 'T', 'E')	// ABD TEXTURE - texture table entry #define IFF_TXNM		MakeID('T', 'X', 'N', 'M')	// ABD TEXTURE - texture name #define IFF_TXFR		MakeID('T', 'X', 'R', 'F')	// ABD TEXTURE - texture file ref #define IFF_TXVD		MakeID('T', 'X', 'V', 'D')	// ABD TEXTURE - texture video digitizer ref #define IFF_TXPD		MakeID('T', 'X', 'P', 'D')	// ABD TEXTURE - texture picture data #define IFF_TXID		MakeID('T', 'X', 'I', 'D')	// ABD TEXTURE - texture id (inside texture)#define IFF_TXOD		MakeID('T', 'X', 'O', 'D')	// ABD TEXTURE - texture id (outside texture)#define IFF_TATR		MakeID('T', 'A', 'T', 'R')	// ABD TEXTURE - texture attributes #define IFF_TXST		MakeID('T', 'X', 'S', 'T')	// ABD TEXTURE - texture attributes // ABD MERGE-TEXTURE 9/13/93 ]]]// MERGE-GOURAUD [[[#define IFF_PLGR		MakeID('P', 'L', 'G', 'R')	// ABD GOURAUD - polygon gouruad #define IFF_SUGR		MakeID('S', 'U', 'G', 'R')	// ABD GOURAUD - surface gouraud // MERGE-GOURAUD ]]]#define IFF_LNUM		MakeID('L', 'N', 'U', 'M')#define IFF_UNIT		MakeID('U', 'N', 'I', 'T')#define IFF_LGHT		MakeID('L', 'G', 'H', 'T')#define IFF_COLR		MakeID('C', 'O', 'L', 'R')#define IFF_POLY		MakeID('P', 'O', 'L', 'Y')#define IFF_MESH		MakeID('M', 'E', 'S', 'H')#define IFF_SLIC		MakeID('S', 'L', 'I', 'C')#define IFF_SURF		MakeID('S', 'U', 'R', 'F')#define IFF_FEAT		MakeID('F', 'E', 'A', 'T')#define IFF_POSN		MakeID('P', 'O', 'S', 'N')#define IFF_ELGT		MakeID('E', 'L', 'G', 'T')#define IFF_ESLC		MakeID('E', 'S', 'L', 'C')#define IFF_PGRP		MakeID('P', 'G', 'R', 'P')#define IFF_PRSM		MakeID('P', 'R', 'S', 'M')#define IFF_CONN		MakeID('C', 'O', 'N', 'N')#define IFF_LOCK		MakeID('L', 'O', 'C', 'K')#if VRML_ANCHOR		// VRML-ABD 23JUN95#define IFF_VRAN		MakeID('V', 'R', 'A', 'N')	// VRML anchor tag (URL) -- for surf, surffeat, polyhedron#endif // VRML_ANCHOR#define IFF_VRIF		MakeID('V', 'R', 'I', 'F')	// ABD MERGE6 8/26/93 WILLIAMS#define IFF_CGRP		MakeID('C', 'G', 'R', 'P')  // jca 14 Set 93#define IFF_CMAP		MakeID('C', 'M', 'A', 'P')  // jca#define IFF_CMPR		MakeID('C', 'M', 'P', 'R')  // jca#define IFF_BMAP		MakeID('B', 'M', 'A', 'P')  // jca#define IFF_CRED		MakeID('C', 'R', 'E', 'D')	// BILBIL - credit info#define IFF_TEXT		MakeID('T', 'E', 'X', 'T')	// BILBIL - credit info#define VERS_MAJ		1#define VERS_MIN		0/* *	Save file format version history * *		Pre-VMDL (Approx. May-1990): *			A/E/C systems '90 vintage.  Hack to save just enough info to pass *			to Polyhedron::Create(). * *		0.0 (Approx. July-1990): *			First VMDL development version. * *		0.1 (27-July-1990): *			Changed creation method for extrusions.  Old way used CAD system *			orientations as reference.  New way uses +X, +Y, +Z axis orientations. * *		0.2 (19-Aug-1990): *			Changed the way light intensities are calculated.  New way is more *			correct in that a surface that is normal to a white source will be *			shaded in its defined color.  Shades calculated the old way would *			result in a shade of half intensity. * *		0.3 (7-Sep-1990): *			Changed the data type of 'defAxis' and 'inflate' for the creation chunks *			from short to char.  Also changed the values for 'inflate.'  ('Inflate' *			didn't previously exist in the object and was calculated just for I/O. *			The new values define the orientation for the convergence case.) * *		0.4 (17-Sep-1990): *			Changed the content of "Inflate" creation chunks to always include  *			point end and base end 2D skew values, replacing the vertex point *			coordinate for convergences. * *		0.5 (12-Oct-1990): *			Changed features to support placement on inside, outside or middle of *			surface.  Removed feature 'type' and added 'where'.  Defined opacities *			for all colors.  Implemented two sided surfaces for coloring. * *		0.6 (28-Oct-1990): *			Added 'editType' field to "Inflate" chunk to allow external constraint *			on outline data type.  Added 'levels' field to "Inflate" chunk to support *			elliptical convergences.  Changed surfDef numbering as required by *			elliptical convergences, causing bottom end surface to be numbered last *			rather than 0 or 1. * *		0.7 (5-Nov-1990): *			Added 'editType' field to surface features. * *		1.0 (7-Nov-1990): *			Changed polyhedron layer number chunk from 'LAYR' to 'LNUM'.  Changed *			version number to production number.6/26/91 add NAME, DATA to polyhedronscale to positionshear to positioninterior connectionspreferenceslocktrace reference */int IO_VERS(struct V_Buffer *);int IO_ID(struct V_Buffer *, long);