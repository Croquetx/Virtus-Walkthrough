#ifndef PREFERENCE_DIALOG#define PREFERENCE_DIALOG#include "IntfDlog.h"#define PREF_WIDTH		(308+BTNPAD_W)#define PREF_HEIGHT		(240+BTNPAD_H)enum prefResults	{	cancelBFlag,		doneBFlag,		revertBFlag,		defaultBFlag,		updateFlag		};enum prefCategories	{	prefEditor = 1,	prefRenderer,	prefNavigate,	prefDefaults,	prefUnits	#if USE_HMD			// MERGE-HMD	,					// MERGE-HMD	prefHMD				// MERGE-HMD	#endif // USE_HMD	};struct ActionText:V_EditText { virtual int Action(char,long); };		#if VWTstruct PrefDialog:V_Dialog	{	struct Controller *controller;	struct AppPreference	*prefCopy;	struct V_CtrlButton_Die *revertButton,*doneButton,*cancelButton;#if !SAVE_DISABLED // jca 22Feb95	struct V_CtrlButton_Die *defaultButton;#endif //!SAVE_DISABLED // jca 22Feb95	struct V_Text *choiceText;	struct  V_PopMenu	*choices;	struct  PrefObject	*prefObject;	int	prefType,oldPrefType;		int	 cPrefDialog(struct Controller *, int);	void SetInterface(void);	void SetPrefType(int);//void Update(void);	void Display(int,int,int);	int  GetResults(int);	};#elif VRstruct PrefDialog:V_Dialog	{	struct Controller		*controller;	struct AppPreference	*prefCopy;	struct V_CtrlButton_Die *defaultButton,*doneButton,*cancelButton;#if !SAVE_DISABLED // jca 22Feb95	struct V_CtrlCheck		*makeDefaultBox;#endif //!SAVE_DISABLED // jca 22Feb95	struct V_OutlineBox		*divider;	struct V_Text			*title;	struct PrefVR			*prefs;		int	 cPrefDialog(struct Controller *, int);	void SetInterface(void);	void Display(int,int,int);	int  GetResults(int);	};#endif //VWT  struct PrefObject:indirect	{	virtual void cPrefObject(void);	virtual void dPrefObject(void);	virtual void SetInterface(struct V_Dialog *);	virtual void SetPreferences(struct AppPreference *);	virtual void GetResults(struct AppPreference *);	};	                   #if VWTstruct PrefEditor:PrefObject	{	struct  V_CtrlCheck *cRuler,*cGrid,*cDepth,*cGuide,*cOrigin,*cSnap;	struct  V_CtrlRadio *rWorld,*rView;	 	struct 	ColorPop	*clrRuler,*clrGrid,*clrDepth,*clrBackground,*clrHome,*clrGuide;	#if VRML_ANCHOR		// ABD PRO25 AUG95	struct  V_CtrlCheck *cURL;	#endif		void SetInterface(struct V_Dialog *);	void SetPreferences(struct AppPreference *);	void GetResults(struct AppPreference *);	};enum renderPopUp{	renderPopFrameFill = 1,	renderPopFill,	renderPopFrame	};enum shadePopUp{	shadePopShade = 1,	shadePopUnshade,	shadePopWhiteShade	};struct PrefRender:PrefObject	{	struct  DrawPopMenu	*draw;	struct  ShadePopMenu *shade;	struct  V_CtrlCheck *seeIn,*seeOut,*seeConnect;	struct  V_CtrlCheck *frameBlack,*printWhite;	struct	V_CtrlCheck *flashFill,*dither,*interpTransp;		void SetInterface(struct V_Dialog *);	void SetPreferences(struct AppPreference *);	void GetResults(struct AppPreference *);	};struct PrefNavigate:PrefObject	{	struct  V_CtrlCheck *mouseDown,*crossHair,*grid;	struct  ActionText 	*aspectH,*aspectV;	struct  AspectPopMenu	*aspectPop;	struct  ActionCheck *aspectCheck;	struct  ActionText 	*film,*focal;	struct  V_Text 	*filmUnit,*focalUnit;	#if VPRO	struct	V_CtrlCheck	*colldet;	// MERGE-GOURAUD-PRO-2	#endif // VPRO		void SetInterface(struct V_Dialog *);	void SetPreferences(struct AppPreference *);	void GetResults(struct AppPreference *);	};struct PrefDefault:PrefObject	{		struct  ActionText 	*depthFromX,*depthToX;	struct  ActionText 	*depthFromY,*depthToY;	struct  ActionText 	*depthFromZ,*depthToZ;	struct  ActionText 	*homeX,*homeY,*homeZ;	struct  ActionText 	*nSides,*nLevels;	void SetInterface(struct V_Dialog *);	void SetPreferences(struct AppPreference *);	void GetResults(struct AppPreference *);	};struct PrefUnit:PrefObject	{		struct  UnitPopMenu		*unit;	struct  ActionText 	*customName,*customSymbol,*customSize;	struct  ActionText 	*modelSize,*modelWorld;	struct  V_Text		*customTitle,*customSym,*customSz;	struct  V_Text		*sizeUnit,*worldUnit,*customSzUn;	struct  V_CtrlCheck *promote;	int 	oldUnitType;		void SetInterface(struct V_Dialog *);	void SetPreferences(struct AppPreference *);	void GetResults(struct AppPreference *);	};#elif VRstruct PrefVR:PrefObject	{#if WINDOWS	struct	V_CtrlCheck	*flash;#endif //WINDOWS	struct	V_CtrlRadio	*centimeters;	struct	V_CtrlRadio	*inches;	struct	V_CtrlCheck	*dithering;	struct	V_CtrlCheck	*snaptogrid;	struct	V_CtrlCheck	*frames;	struct	V_CtrlCheck	*colldet;	struct	V_Array		*radioGroup;	struct	V_Text		*unitsLabel;	virtual void SetInterface(struct V_Dialog *);	virtual void SetPreferences(struct AppPreference *);	virtual void GetResults(struct AppPreference *);	};#endif //VWT// MERGE-HMD [[[#if USE_HMDstruct HMDPopMenu:V_PopMenu 	// ABD HMD JUL95	{ 	void AddItems(void);	};struct PrefHMD:PrefObject	{		struct PrefDialog *the_dialog; 	// ABD HMD JUL95	V_EditText *ipd, *iod, *wp, *yb;	V_Text *title;	V_Text *statText;	struct HMDPopMenu *pop; 	// ABD HMD JUL95	void SetInterface(struct V_Dialog *);	void SetPreferences(struct AppPreference *);	void GetResults(struct AppPreference *);	};#endif // USE_HMD// MERGE-HMD ]]]struct ChoicePopMenu:V_PopMenu 	{ 	void Action(void);	void AddItems(void);	};struct DrawPopMenu:V_PopMenu 	{ 	void AddItems(void);	};struct ShadePopMenu:V_PopMenu 	{ 	void AddItems(void);	};enum aspectRatioPopUp	{	aspPop35Horz = 1,	aspPop35Vert,	aspPop225Square,	aspPop4x5Horz,	aspPop4x5Vert,#if MACINTOSH	aspPopTelevision = aspPop4x5Vert+2,#elif WINDOWS	aspPopTelevision,#endif //WINDOWS#if JAPANESE	aspPopJapaneseHiVision, // HDTV, requested by AJ peralta#endif // JAPANESE	aspPopAcademyAperture,	aspPopEuroWideScreen,	aspPopUSWideScreen,	aspPopAnamorphicAperture,#if MACINTOSH	aspPopCustom = aspPopAnamorphicAperture+2#elif WINDOWS	aspPopCustom#endif //WINDOWS	};struct AspectPopMenu:V_PopMenu 	{ 	struct  V_CtrlCheck *check;	struct ActionText *h;	struct ActionText *v;	RGBColor	skyColor;		void	Action();	int		GetRatio(Point*);	void	SetRatio(int); 	void	Display(void);	void	AddItems(void);	void	LinkText(struct ActionText*,struct ActionText*); 	void	SetColor(RGBColor); 	void	SetCheck(struct V_CtrlCheck *); 	};enum menuUnitType{	menuUnitInch = 1,	menuUnitFoot,	menuUnitYard,	menuUnitMile,#if MACINTOSH	menuUnitMMeter = menuUnitMile + 2,#elif WINDOWS	menuUnitMMeter,#endif //WINDOWS	menuUnitCMeter,	menuUnitMeter,	menuUnitKMeter,#if MACINTOSH	menuUnitPoint = menuUnitKMeter + 2,#elif WINDOWS	menuUnitPoint,#endif //WINDOWS	menuUnitPica,#if MACINTOSH	menuUnitAngstrom = menuUnitPica + 2,#elif WINDOWS	menuUnitAngstrom,#endif //WINDOWS	menuUnitParsec,#if MACINTOSH	menuUnitCustom = menuUnitParsec + 2#elif WINDOWS	menuUnitCustom#endif //WINDOWS	};	struct UnitPopMenu:V_PopMenu 	{ 	void SetSystem(int);	int	 GetUnitSystem(char *,char *);	void Action();	void AddItems(void);	};	#endif //PREFERENCE_DIALOG