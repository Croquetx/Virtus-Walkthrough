#ifndef RULER#define RULER#include "WTypes.h"#include "VArray.h"#include "VPane.h"struct	TickArray:V_Array{	int Compare(void*,void*);	};enum	tickMarkType{	unitTick = 0,	minorTick,	majorTick,	guideTick	};	typedef struct TickMark{	short type;	short padTest;	short where;	short index;	} TickMark;typedef struct RulerInfo{	FFixed scale;	short divisions;	short majorTick;	} RulerInfo;typedef struct RulerScaleInfo{	FFixed scale2Local;	FFixed scale2World;	FFixed unitValue;	FFixed gridUnit;	int	unitWidth;	int	worldPrecision;	int	localPrecision;	int gridPrecision;	int	divisions;	int	majorTicks;	} RulerScaleInfo;extern RulerInfo rulerTable[];#define UNIT_INCH_START		6#define UNIT_INCH_END		17#define UNIT_FOOT_START		19#define UNIT_FOOT_END		37#define UNIT_MILE_START		38#define UNIT_MILE_END		56#define UNIT_METRIC_START	63#define UNIT_METRIC_END		74#define UNIT_MIN_WIDTH		50#define UNIT_MAX_WIDTH		130#define UNIT_IDEAL_WIDTH	72#define	RULER_WIDTH		12	#define TAB_WIDTH		7#define MAJOR_WIDTH		5#define MINOR_WIDTH		2#define TRACK_WIDTH		11#define DOCKET_WIDTH	15#define	TAB_STATE		0x01	#define RULER_STATE		0x02#define SNAP_STATE		0x04#define	SHOW_RULER		0x01	#define	SHOW_TAB		0x02	#define	SHOW_GUIDE		0x04	#define	SHOW_ORIGIN		0x08	#define	SHOW_RANGE		0x10	#define	SHOW_BADTHING	0x20 /* THIS IS A HACK FOR THE DEPTH RULER */	#define	TICK_ON			0x01	#define TICK_OFF		0x02#define AUTO_SELECT	V_OPTION#define SELECTION_RANGE	5enum rulerEditMode{	rulerNoMode = 0,	rulerInDocket	};#define RMAX_PRECISION	9#define SCROLL_DELAY	12	/* 1/5 second */	// MERGE15#define HORZ_RULER	0x01	#define VERT_RULER	0x02	#define RSCALE_ABSOLUTE	0x01	#define RSCALE_RELATIVE	0x02	#define SELECT_RANGE	5 struct	Ruler:V_Pane	{	struct Controller *controller;	struct CAVEnvironment *environment;	struct  TickArray	*tickTable;	struct  V_Array	*rulerItems;	struct  RulerItem	*localOrigin;	struct  RulerItem	*extrusionRange;	struct  RulerItem	*editItem;	struct  Formatter *formatter;	struct  RulerInfo	rulerInfo;		FFixed	gridUnit;	FFixed  origin,offsetOrigin,snapOrigin;	FFixed  extBase,extPoint,anchor;	FFixed	scale2World,scale2Local,scroll2World,world2Scroll;	short	worldPrecision,localPrecision,scrollPrecision,gridPrecision;	int		worldMin,worldMax;	long	lOrigin;	int		scrollStep;	RGBColor color,backColor;	short	unitWidth;		short	start;				short	position,lAnchor,lLast;		short	unitForm;			char	showState,snapState;		char 	trackState;			char	unitFlag;			char	direction;			short	editMode;	char	defAxis,side;	int 	width;     // this is the rulers width	int 	type;		// DAS-VWINDOWS 10/9/93	void	cPane(int);				void	dPane(void);			  	void 	Center(FFixed);	void	SetController(struct Controller *);	void	SetEnvironment(struct CAVEnvironment *);	void	SetAxis(char);					void	SetSide(char);					void	AddRange(void);				void	KillList(void);				void	CopyItem(struct RulerItemDef *,int);				void	CalcSize(Rect*,Point*,int,int);					void	GetVirtual(Rect *);					void	CalcScroll();					void	SetVScroll();					void	SetHScroll();					void	Display(int,int,int);					void	DisplayLine(int);					void	DisplayTab(void);					void	DisplayTick(int,int);					void	DisplayNumber(FFixed,int);			void	DisplayExtreme(void);			void	DisplayDocket(void);						int		Parse(Point);					FFixed	Constrain(short*);					FFixed	GridLoc(int,int);					FFixed	RulerTrack(short*,int);					void	MouseDown(Point,long);	void	TrackHelp(Point,long modifier);		// DAS-VWINDOWS 9/30/93			void	Track(Point,long,int);	void	MouseUp(Point,long);	int		Push(int,int);					int		GetAction(long,long);					void	DoTab(Point,long,int);	void	DoDocket(Point,long,int);		void	Update(void);			FFixed	GetOrigin(void);	FFixed	GetOriginOffset(void);	void    SetOriginOffset(FFixed);	FFixed	SetOrigin(FFixed);	void	SetScale(double);	double  GetScale(void);	void	FFSetScale(struct RulerScaleInfo *);	void	FFGetScale(struct RulerScaleInfo *);	int		World2Local(FFixed,int);	FFixed	Local2World(int,int);	int		World2Scroll(FFixed);	FFixed	Scroll2World(int);		int		GetEnd(void);		int		InDocket(Point);		void	GetDocketRect(Rect*);		void	GetTabRect(Rect*);		void 	SetStart(int);			int		GetStart(void);		FFixed	GetGrid(void);		void 	SetState(char,int);			char	GetState(int);		int		GetWidth(void);		void 	SetPosition(int);		void	SetDivisions(int,int);	void	SetColor(RGBColor);		void	SetBackColor(RGBColor);		void	RangeColor(RGBColor);		void 	SetDirection(char);			void	SetTabs(FFixed,FFixed);	void	GetTabs(FFixed*,FFixed*);	int		InTab(Point);	void	SetFormat(struct  Formatter *);	struct RulerItemDef *FindRulerItem(int);	struct RulerItem *FindItem(int,FFixed *);	RGBColor	GetItemColor(int);	void	SetItemColor(int,RGBColor);	void 	SetTrackSet(int);			};		#endif //RULER