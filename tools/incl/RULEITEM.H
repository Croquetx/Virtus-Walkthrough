#ifndef RULER_ITEM#define RULER_ITEM#include "VIO.h"#include "WTypes.h"	enum rulerItemType{	guideItem = 1,	originItem,	rangeItem 	};enum{	outRulerItem,	inRulerItem,	inRulerItem2,	inRulerItemRange	};#define POSITIVE_SIDE	0x04#define NEGATIVE_SIDE	0x08struct RulerItemDef:V_IO	{	FFixed 		value,value2;	RGBColor	color;	int		type;	short		axis;	void	cRulerItemDef(void);	void	dRulerItemDef(void);	FFixed	GetValue(void);	void	SetValue(FFixed);	FFixed	GetValue2(void);	void	SetValue2(FFixed);	char	GetAxis(void);	void	SetAxis(char);	int		GetType(void);	void	SetType(int);	void	SetColor(RGBColor);	RGBColor	GetColor(void);	int		IO(struct V_Buffer *);	};		struct RulerItem:V_IO	{	struct 		RulerItemDef *itemDef;	short		scaleValue,scaleValue2;	char		state;		void	cRulerItem(void);	void	dRulerItem(void);	char	GetState(void);	void	SetState(char);	int		GetType(void);	void	SetType(int);	void	SetItemDef(struct RulerItemDef *);	struct RulerItemDef *GetItemDef(void);	void	MoveItem(struct Ruler *,FFixed,int,int);	void	Display(struct Ruler *,FFixed,FFixed,FFixed,int);	void	ScaleItem(struct Ruler *,int);	int		Find(FFixed*,FFixed,int);	int		FindLocal(int);	void	Copy(struct RulerItem *);	};#define HORZ_MARK		1#define VERT_MARK		2#define BACK_MARK		1#define FORW_MARK		2void DrawTab(Point,int,int);void DrawGuideSymbol(int,int,int,int);	#endif //RULER_ITEM