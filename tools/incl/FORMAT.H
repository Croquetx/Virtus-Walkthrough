#ifndef FORMATTER#define FORMATTER#include"WTypes.h"// Unit type definitions; types >= meter are "normal" decimal; all others// have special handling.  Symbols in Formatter.c must match types.typedef enum	{	inch,	foot,	yard,	mile,	point,	pica,	centimeter,	meter,	angstrom,	parsec,	degree,	radian,	custom	} unitType;struct Formatter:indirect	{	unitType type;			/* the type */	char promote;			/* promotable? */	short magnitude;		/* 1 == kilo, 2 == Mega, -1 == milli, -2 == micro, etc. */	FFixed scale;			/* additional scale factor; powers of 2 are most precise */	FFixed origin;			/* location of origin */	char custSym[8];		/* symbol for type == custom */	/* --- */	void cFormat(void);	void dFormat(void);	void Copy(struct Formatter *);	void SetType(unitType);	void SetPromotion(int);	void SetMagnitude(short);	void SetScale(FFixed);	void SetOrigin(FFixed);	unitType GetType(void);	int GetPromotion(void);	short GetMagnitude(void);	FFixed GetScale(void);	FFixed GetOrigin(void);	void SetCustom(char *);	void GetCustom(char *, int);	void Format(FFixed, char *);	};#endif //FORMATTER