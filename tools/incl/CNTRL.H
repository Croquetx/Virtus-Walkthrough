#ifndef CONTROLLER#define CONTROLLER#include "VTypes.h"#include "WTypes.h"#include "CntrlDef.h"#include "VIO.h"#include "VDocumnt.h"typedef struct LaunchInit	{	Rect	location;	Point	scrollPosition;	FFixed  scale;	union		{		void *polyhedron;		void *surfDef;		} data;	} LaunchInit;	struct Controller:V_IO	{	struct V_Document		*document;	struct Controller *controller;	struct Information	  *information;	char	title[256];	int		type,activateState;			virtual void 	cController(V_Document *);	virtual void 	dController(void);	virtual void	SetChange(int state);	virtual void 	Activate(int);	virtual void 	*cTool(struct Controller *ctrl,int);	virtual void	InstallTool(struct V_Pane *);	virtual	void 	GetPlace(Rect *,int,int);	virtual struct V_Window	*GetWindow(int);	virtual int		EditPolyhedron(void *,int);	virtual struct TextureItem *GetTexture(void);	// ABD WILLIAMS MERGE-TEXTURE 9/13/93	virtual int		CheckPolyhedron(void *);	virtual void	Hide(int);	virtual	void 	ControlMessage(int,long,int);	virtual	void	Request(void *,int,int,int);	virtual	void	Response(void *,int,int,int);	virtual struct AppPreference *GetPreference(void);/* NEW */	virtual int		UnitConversion(double);	virtual void	SetPreference(struct AppPreference *,int );/* NEW */	virtual int		ExportContents(struct V_Buffer *,int);	virtual void	SetTitle(char *);	virtual void 	LaunchController(struct LaunchInit, int);	virtual	void 	LoadWindowPref(struct AppPreference *);	virtual void ActivatePalette(int, Boolean);	virtual void SetPaletteController(int, struct Controller *c);// jca 24MAR94 routines to tell the menus (or anything else) if// there is anything selected, and whether it is opaque, round,// skewed, etc.  	virtual int 	IsAnythingSelected(void);	// jca 22MAR94 for use with the Edit menu.	virtual int		CanBufferPaste(struct V_Buffer *);	// jca 28MAR94 for use with the Edit menu	virtual ULong	SelectedConditions(void);   // jca 24MAR94 tells menus about the conditions of the selected items	void 	SetController(struct Controller *);		void 	SetType(int);	int		GetType(void);	void	GetTitle(char *);	};	#endif //CONTROLLER