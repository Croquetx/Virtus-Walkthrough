/*------------------------------------------------------------------------------ * WalkThroughª - the real time 3-D CAD system. * Version 0.1 * * Copyright © 1989 by Virtus Corporation * All Rights Reserved * Written by  	Greg Rivera * Suite 204 * 117 Edinburgh South * Cary, North Carolina    27511 * (919) 467-9700 *------------------------------------------------------------------------------ * VAsm.c * Support for Asm debugging, etc. *------------------------------------------------------------------------------ */#include "VTypes.h" #include "VMath.h"#include "VAsm.h"#include "VGestalt.h"// stuff for the mac gestalt manager#if MACINTOSH#include <GestaltEqu.h>#define gestaltComponentMgr 'cpnt'#endif// these only work for THINKC, and are for debugging the routines#if (MAC_ASMABLE_DEBUG)AsmRegs_t AsmRegs;				// Reserve space for the registers for dumping//===// InitAsm() moved to Main where all its constants, etc. and similar code was.//===int GetAsmRegs(void){	asm {	GETASMREGS	}	return (1);}#endif // (MACINTOSH && DEBUG)/*------------------------------------------------------------------------------ * InitAsm()													(gjr081993) * Determine which assembler we can use. * Call the various other initters to set up their asm's. * Done here cuz too many things only defined here. *------------------------------------------------------------------------------*/int gAsmM020 = FALSE;		// start with fancy asm's off.voidInitAsm(){OSErr osErr;long rval;int  cpuType;		// Two bytes#if MACINTOSH && (!__powerc)  	/* this only works on the mac */	if (gGestaltAvailable)		{  // Then ask gestalt for processor type		osErr = Gestalt(gestaltProcessorType, &rval);		if (osErr)			{  // Then oops, gestalt error. Try reading global.			if (*(char *)CPUFlag >= env68020)				{  // Then we have a '020. Say so.				gAsmM020 = TRUE;				}			}		else			{  // else gestalt worked. check processor type.			if (rval >= gestalt68020)				{  // then we have a '020. Say so.				gAsmM020 = TRUE;				}			}		}	else		{  // else no gestalt trap available. Try reading global.		if (*(char *)CPUFlag >= env68020)			{  // Then we have a '020. Say so.			gAsmM020 = TRUE;			}		}#endif // MACINTOSH//---------------------------------// Done finding our cpu.// Now, call all the other asm setup routines//---------------------------------InitVMathAsm();			}