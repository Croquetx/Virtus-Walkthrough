Problems with Virtus VRML Project1) Revision control system problems	SourceSafe is abyssmal, especially on the Mac.	Why is SourceSafe not installed on all development computers?	Why is there not even minimal documentation on how to get files		with SourceSafe?	Smith gives me files that he has created for VRML export, expecting		me to merge them into SourceSafe.  I check the new files in.  		Then Greg gets on me for not compiling the files under Windows		and fixing all of Smith's bugs before checking them in.  If you		think *I'M* going to take the blame for files not compiling		on Windows, when it's YOU ******* MANAGERS THAT ARE SUPPOSED		TO HAVE THE ********* SCHEDULES SET UP AHEAD OF TIME, THEN YOU		ARE OUT OF YOUR ******* MIND.  I check the files in.  If they		don't compile, who's fault is that?  If you are rushed at the		last minute because some manager thought it was a brilliant plan		to port Smith's code to Windows at the VERY LAST MINUTE, THEN		WHOSE ******* FAULT IS THAT??????	2) Development resource problems		Why is development saddled with crappy Windows machines that take		2 hours to compile a full project?	People complain about files being checked into SourceSafe when they		don't compile.  Then they complain that it's taking forever		to check the files in.... Uh... hello?  McFly??  Give us a 		decent machine or quit your bitching.  		3) No standards of what projects are where	Who knows if the sources on any given machine are the latest sources?	Who knows if the sources on any given machine have been modified?	Nobody.  There are no standards of any kind.  		4) Schedule Problems	Yet again, we are working up until the very last minute.	It is insane to expect that it will take no time to port code 		to Windows (e.g. all of Smith's VRML export code was not 		compiled under Windows until the very last day)	It is insane to think that in the last few days we can combine 		everything we are working on and it will work (e.g. Smith's		stuff, Drew's stuff, etc).  5) Bonehead development plan	I find it extremely frustrating to realize that virtually none of the 	code I wrote for this product actually was needed, yet we are still	rushing at the last minute to finish stuff.  		TCP/IP PUT code -- this was a moronic plan from the beginning.  Whose		idea was this?  	VRML export dialog box -- completely removed before shipping	URL's on surfaces & surface features -- completely removed		so basically, the code I wrote for VWT VRML was about 3 or 4 #defines,	a few enum's and 15 lines of code to put up a dialog box for URLs.	Everything else was removed from the final product.  		Virtus needs to stop shooting for the moon.  You don't add marginally 	cool but still useless features until EVERYTHING ELSE IS DONE.