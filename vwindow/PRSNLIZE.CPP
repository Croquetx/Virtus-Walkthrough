/*------------------------------------------------------------------------------ * Virtus WalkThrough_ * Version 1.1.1 * * Copyright _ 1990-1992 by Virtus Corporation * All Rights Reserved * Written by  	David A. Smith *				 *				 * Virtus Corporation * Suite 204 * 117 Edinburgh South * Cary, North Carolina    27511 * (919) 467-9700 *------------------------------------------------------------------------------ * Source File:  * Notes:  * History:  *------------------------------------------------------------------------------ */#include "VTypes.h"#include "Prsnlize.h"#include "Serial.h"#include "VItem.h"#include "VAbout.h"#include "VGraphic.h"#include "VGUtil.h"#include "VMain.h"#include "VSound.h"#include "VError.h"#include "VTextDef.h"#include <stdio.h>#include <string.h>#include <ctype.h>#define CONFIDENTIAL FALSE#if MACINTOSH voidVPersonalize::cVPersonalize(void)	{	AlertDialog *alert;	V_EditText *t1, *t2, *t3;	V_Text	*text;	V_Icon	*icon;	V_CtrlButton_Die *button;	Rect r1,r2;	string str1[256], str2[256],str3[256];	int l1,l2,l3,i;	int notDone=TRUE;	string **str;	int err;	int errCount;	time_t date;		GetScreen(&r1);	r2.left = (r1.right+r1.left-VPWIDTH)>>1;	r2.right=r2.left+VPWIDTH;	r2.top=(r1.bottom+r1.top-VPHEIGHT)>>1;	r2.bottom=r2.top+VPHEIGHT;		cDialog(&r2);	r2.right-=r2.left;	r2.bottom-=r2.top;	r2.left=r2.top=0;		r1.right=r2.right-8;	r1.left=r1.right-32;	r1.top=r2.top+8;	r1.bottom=r1.top+32;	icon = new(V_Icon);	icon->cItem();	icon->SetRect(&r1);	icon->SetIconID(128);	itemList->AddItem(icon);	r1.right=r2.right-8;	r1.bottom=r2.bottom-8;	r1.top=r1.bottom-25;	r1.left=r1.right-100;	button = new(V_CtrlButton_Die);	button->cItem();	button->SetRect(&r1);	button->SetText(TXTC_OK);	button->SetFlag(TRUE);#if WINDOWS    button->SetCtrlNumber(IDOK);#endif	itemList->AddItem(button);		r1.right=r1.left-16;	r1.left=r1.right-100;	button = new(V_CtrlButton_Die);	button->cItem();	button->SetRect(&r1);	button->SetText(TXTC_CANCEL);	button->SetFlag(FALSE);#if WINDOWS	button->SetCtrlNumber(IDCANCEL);#endif	itemList->AddItem(button);	r1.left=8;	r1.top=8;	r1.right=r2.right-100;	r1.bottom=r1.top+40;	text = new(V_Text);	text->cItem();	text->SetRect(&r1);	text->SetText(TXT_PRSNCOPY);	itemList->AddItem(text);	r1.right=r2.right-8;	r1.top=r1.bottom+8;	r1.bottom=r1.top+16;	text = new(V_Text);	text->cItem();	text->SetRect(&r1);	text->SetText(TXT_LICENSEDTO);	itemList->AddItem(text);	r1.top=r1.bottom+8;	r1.bottom=r1.top+16;	t2 = new(V_EditText);	t2->cItem();	t2->SetRect(&r1);	itemList->AddItem(t2);	r1.top=r1.bottom+8;	r1.bottom=r1.top+16;	text = new(V_Text);	text->cItem();	text->SetRect(&r1);	text->SetText(TXT_ORGANIZAT);	itemList->AddItem(text);	r1.top=r1.bottom+8;	r1.bottom=r1.top+16;	t3 = new(V_EditText);	t3->cItem();	t3->SetRect(&r1);	itemList->AddItem(t3);	r1.right=r2.right-8;	r1.top=r1.bottom+8;	r1.bottom=r1.top+16;	text = new(V_Text);	text->cItem();	text->SetRect(&r1);	text->SetText(TXT_SERIALNUM);	itemList->AddItem(text);	r1.top=r1.bottom+8;	r1.bottom=r1.top+16;	t1 = new(V_EditText);	t1->cItem();	t1->SetRect(&r1);	itemList->AddItem(t1);	r1.right=120;	r1.top=r1.bottom+8;	r1.bottom=r1.top+16;	if(GetVersion(str2))		{		sprintf((char *)str1,"%s %s",TXT_VERSION,str2);		text = new(V_Text);		text->cItem();		text->SetRect(&r1);		text->SetText(str1);		itemList->AddItem(text);		}	else Damaged();		Show();	errCount=0;	while(notDone && errCount<3)		{		if(Modal())			{			t1->GetText(str1);			t2->GetText(str2);			t3->GetText(str3);			l1=0;			while(str1[l1]=toupper(str1[l1]))l1++;			l2=0;			while(str2[l2])l2++;			l3=0;			while(str3[l3])l3++;			if(!CheckNumber(str1) || (-1==(date=CheckDate(str1))))				{				VPlaySound(beepSound);				alert=new(AlertDialog);				if(errCount==3)					{					alert->cAlertDialog(TXT_RETRYERR);					Exit();					}				else					alert->cAlertDialog(TXT_INVALSN);				errCount++;				}			else if(l2<3)				{				VPlaySound(beepSound);				alert=new(AlertDialog);				if(errCount==3)					{					alert->cAlertDialog(TXT_RETRYERR);					Exit();					}				else					alert->cAlertDialog(TXT_INVALLIC);				errCount++;				}			else				{#if MACINTOSH				UseResFile(appResFile);								/*save the new serial number (resource 1)*/				str=(string **)NewHandle(l1);				Encode(str1,l1);				for(i=0;i<l1;i++)(*str)[i]=str1[i];				AddResource(str,'dave',1,(StringPtr)"\p");				ChangedResource(str);				if(err=ResError())					{					ResultError(err);					Exit();					}				WriteResource(str);								/*save the user name (resource 2)*/				str=(strPtr *)NewHandle(l2);				Encode(str2,l2);				for(i=0;i<l2;i++)(*str)[i]=str2[i];				AddResource(str,'dave',2,(StringPtr)"\p");				ChangedResource(str);				if(err=ResError())					{					ResultError(err);					Exit();					}				WriteResource(str);								/*save the user organization (resource 3)*/				str=(strPtr*)NewHandle(l3);				Encode(str3,l3);				for(i=0;i<l3;i++)(*str)[i]=str3[i];				AddResource(str,'dave',3,(StringPtr)"\p");				ChangedResource(str);				if(err=ResError())					{					ResultError(err);					Exit();					}				WriteResource(str);								str=(strPtr *)NewHandle(sizeof(time_t));				*(time_t*)str1=date;				str1[4]=0;				Encode(str1,4);				for(i=0;i<4;i++)(*str)[i]=str1[i];				AddResource(str,'dave',4,(StringPtr)"\p");				ChangedResource(str);				if(err=ResError())					{					ResultError(err);					Exit();					}				WriteResource(str);#endif //MACINTOSH			 	notDone=FALSE;				}			}		else notDone=FALSE; /* we pressed cancel */		}	Delete();	Exit();	}void Personalize(void)	{	VPersonalize *p;	VSerialize *s;	string str[256];	int rnum;		if(GetSerial(str,2))return;/*we are ready to roll*/	/*are we where we are supposed to be?*//* #if CONFIDENTIAL	Confidential();#else   // this used to be the old way. jca 7 sept 93 */	p=new(VPersonalize);	p->cVPersonalize();/* #endif //CONFIDENTIAL */	}void CantDoIt(void)	{	AlertDialog *alert;	VPlaySound(beepSound);	alert=new(AlertDialog);	alert->cAlertDialog(TXT_PRSNMASTER);	Exit();	}#elif WINDOWS# if BUNDLEDFILE *OpenSerialDLL(char *name)	{	static FILE *f=NULL;	char	fpath[256];    int		length;	length = GetModuleFileName(GetAppInstance(), fpath, 256);	while((length>0)&&(fpath[length] != '\\'))		{		fpath[length] = 0x00;		length --;		}	strcat(fpath, name);	if (!(f = fopen(fpath, "r+b")))    	{		return(NULL);        }	return(f);	}intSeekAndDestroy(FILE *f, char *what, int len, int whichChar)	{	long fLen, i, where;	char buf[512], find;	int nRead, done, inTheLoop, ok=0;	fseek(f, 0, SEEK_END);	fgetpos(f, &fLen);	find = whichChar;	done = 0; inTheLoop = 0; 	fseek(f, 0, SEEK_SET);	nRead = fread(buf, sizeof(char), 512, f);	while (nRead && !done)		{		for (i = 0; i < nRead && !done; i++)			{			if (buf[i] == 0)            	{				inTheLoop = 1;				}			else if ((buf[i] == find) && (inTheLoop > 0))				{				inTheLoop++;				if (inTheLoop == 256)					{					fgetpos(f, &where);					where += (-nRead + i - 255); // this should be where the string begins					done = 1;					inTheLoop = 0;					}                }			else				inTheLoop = 0;			}		if (done)			{			if (what)            	{				fseek(f, where, SEEK_SET);				fputc(len&0xFF, f);				nRead = fwrite(what, sizeof(char), len, f);				if (nRead != len)            		{#if DEBUG					MessageBox(NULL, "nRead != len of string", "I've seen Elvis!", MB_OK|MB_ICONEXCLAMATION);#endif					ok = 0;					}				else            		{#if DEBUG					char info[256];                	sprintf(info, "wrote out %d chars at %ld in file\n", len+1, where);					MessageBox(NULL, info, "I've seen Elvis!", MB_OK|MB_ICONEXCLAMATION);#endif					ok = 1;					}				}			else      // yes, we found the right spot            	ok = 1;			}		else			nRead = fread(buf, sizeof(char), 512, f);		}    return(ok);	} #endif  // BUNDLED #if PERSONALIZED         	// merge SE, vrmadness		// GJR 7/4/95#include "AppText.h"#define NAME_EDIT			104#define ORG_EDIT			105#define SERIAL_EDIT			106#define PERSONALIZED_ID    880#define PERSONAL_FAILURE	1#define PERSONAL_SUCCESS	0#define SERIALDLL_NAME		"VRTSPERL.DLL"#if 0		//This stuff has been moved to apptext.h and apptext.hj[[[#if ENGLISH#define PERS_NOT_ENOUGH_LETTERS  "You must enter your name."#define PERS_WIN_NAME	"Oops!"#define PERS_CANCEL		(strPtr)"You must personalize %s before you can run it.  Are you sure you want leave now?"#elif JAPANESE #define PERS_NOT_ENOUGH_LETTERS  "You must enter your name."	// PRO-JAP#define PERS_WIN_NAME	"Oops!"		// PRO-JAP#define PERS_CANCEL		(strPtr)"You must personalize %s before you can run it.  Are you sure you want leave now?"	// PRO-JAP#endif#endif //0	//This stuff has been moved to apptext.h and apptext.hj[[[static FILE	*personalDLLFile = NULL;static int	gPersonallyInited = 0;static int wSelStart1 = 0;static int wSelEnd1   = 0;static int wSelStart2 = 0;static int wSelEnd2   = 0;static int wSelStart3 = 0;static int wSelEnd3   = 0;BOOL FAR PASCAL PersonalDataProc(HWND hdlg, WORD wMsg, WORD wParam, LONG lParam){	char  	cbuf[255];	int 	result = FALSE;    int 	length, ok;	switch (wMsg)		{	case WM_INITDIALOG:		SendDlgItemMessage(hdlg, NAME_EDIT, EM_LIMITTEXT, 254, 0L);		SetDlgItemText(hdlg, NAME_EDIT, (LPSTR)"");		SendDlgItemMessage(hdlg, ORG_EDIT, EM_LIMITTEXT, 254, 0L);		SetDlgItemText(hdlg, ORG_EDIT, (LPSTR)"");		SendDlgItemMessage(hdlg, SERIAL_EDIT, EM_LIMITTEXT, 254, 0L);		SetDlgItemText(hdlg, SERIAL_EDIT, (LPSTR)"");		wSelStart1 = wSelEnd1 = 0;		wSelStart2 = wSelEnd2 = 0;		wSelStart3 = wSelEnd3 = 0;		result = TRUE;        break;	case WM_COMMAND:		switch(wParam)			{			case NAME_EDIT:				if (HIWORD(lParam) == EN_SETFOCUS)					SendDlgItemMessage(hdlg, NAME_EDIT, EM_SETSEL, 0,							MAKELONG(wSelStart1, wSelEnd1));				else if (HIWORD(lParam) == EN_KILLFOCUS)					{					LONG l = SendDlgItemMessage(hdlg, NAME_EDIT, EM_GETSEL, 0, 0L);					wSelStart1 = LOWORD(l);					wSelEnd1   = HIWORD(l);					}			result = TRUE;        	break;			case ORG_EDIT:				if (HIWORD(lParam) == EN_SETFOCUS)					SendDlgItemMessage(hdlg, ORG_EDIT, EM_SETSEL, 0,							MAKELONG(wSelStart2, wSelEnd2));				else if (HIWORD(lParam) == EN_KILLFOCUS)					{					LONG l = SendDlgItemMessage(hdlg, ORG_EDIT, EM_GETSEL, 0, 0L);					wSelStart2 = LOWORD(l);					wSelEnd2   = HIWORD(l);					}			result = TRUE;        	break; 			case SERIAL_EDIT:				if (HIWORD(lParam) == EN_SETFOCUS)					SendDlgItemMessage(hdlg, SERIAL_EDIT, EM_SETSEL, 0,							MAKELONG(wSelStart3, wSelEnd3));				else if (HIWORD(lParam) == EN_KILLFOCUS)					{					LONG l = SendDlgItemMessage(hdlg, SERIAL_EDIT, EM_GETSEL, 0, 0L);					wSelStart3 = LOWORD(l);					wSelEnd3   = HIWORD(l);					}			result = TRUE;        	break;			case IDCANCEL:            	sprintf(cbuf, PERS_CANCEL, TXT_APPNAME);				ok = MessageBox(hdlg, cbuf, PERS_WIN_NAME, MB_YESNO|MB_ICONQUESTION);				if (ok == IDYES)					EndDialog(hdlg, PERSONAL_FAILURE);				else					{					SendDlgItemMessage(hdlg, NAME_EDIT, EM_SETSEL, 0, MAKELONG(0, -1));					SendDlgItemMessage(hdlg, NAME_EDIT, EN_SETFOCUS, NAME_EDIT,						MAKELONG(GetDlgItem(hdlg, NAME_EDIT), EN_SETFOCUS));					}				result = TRUE;				break;			case IDOK:				memset(cbuf, 0, 255);				length = SendDlgItemMessage(hdlg, NAME_EDIT, (WORD)WM_GETTEXT, 255, (LONG)((LPSTR)cbuf));				if (length < 3)                	{					MessageBox(hdlg, PERS_NOT_ENOUGH_LETTERS, PERS_WIN_NAME, MB_OK|MB_ICONEXCLAMATION);					SendDlgItemMessage(hdlg, NAME_EDIT, EN_SETFOCUS, NAME_EDIT,						MAKELONG(GetDlgItem(hdlg, NAME_EDIT), EN_SETFOCUS));					SendDlgItemMessage(hdlg, NAME_EDIT, EM_SETSEL, 0, MAKELONG(0, -1));					result = TRUE;                    break;					}			         	//[ merge SE, vrmadness		// GJR 7/4/95#if BUNDLED				Encode(cbuf, 127);				ok = SeekAndDestroy(personalDLLFile, cbuf, 127, 'V');#else  //PERSONALIZED	// jca 27AUG94 vrmadness				ok = WriteProfileString(TXT_APPNAME, TXT_WININI_VWT_SE_NAME, cbuf);#endif // BUNDLED				memset(cbuf, 0, 255);				length = SendDlgItemMessage(hdlg, ORG_EDIT, (WORD)WM_GETTEXT, 255, (LONG)((LPSTR)cbuf));#if BUNDLED				Encode(cbuf, 127);				if (ok) ok = SeekAndDestroy(personalDLLFile, cbuf, 127, 'X');#else  // PERSONALIZED	// jca 27AUG94 vrmadness				if (ok) ok = WriteProfileString(TXT_APPNAME, TXT_WININI_VWT_SE_ORG, cbuf);				memset(cbuf, 0, 255);				length = SendDlgItemMessage(hdlg, SERIAL_EDIT, (WORD)WM_GETTEXT, 255, (LONG)((LPSTR)cbuf));				if (ok) ok = WriteProfileString(TXT_APPNAME, TXT_WININI_VWT_SE_SERIAL, cbuf);#endif // BUNDLED						//] merge SE, vrmadness		// GJR 7/4/95				if (ok)					EndDialog(hdlg, PERSONAL_SUCCESS);				else					EndDialog(hdlg, PERSONAL_FAILURE);				result = TRUE;				break;			}		break;		}	return(result);}voidVPersonalize::cVPersonalize(void)	{	FARPROC	dlogBoxProc;	int err = 0;	dlogBoxProc = MakeProcInstance((FARPROC)PersonalDataProc, GetAppInstance());	if (dlogBoxProc)		{		err = DialogBox(GetAppInstance(), MAKEINTRESOURCE(PERSONALIZED_ID), NULL, dlogBoxProc);	// PRO-JAP		FreeProcInstance(dlogBoxProc);		}	else    	CantDoIt();	if (err)		VExitToShell();}void Personalize(void)	{	VPersonalize *p;	VSerialize *s;	string str[256];	int rnum;		if (gPersonallyInited) return;  // have we done this yet?#if BUNDLED	         	// merge SE, vrmadness		// GJR 7/4/95	personalDLLFile = OpenSerialDLL(SERIALDLL_NAME);	if (personalDLLFile)		{		if (SeekAndDestroy(personalDLLFile, NULL, 0, 'V'))    		{			p=new(VPersonalize);			p->cVPersonalize();			}		fclose(personalDLLFile);		}	else		CantDoIt();			         	//[ merge SE, vrmadness		// GJR 7/4/95#else // PERSONALIZE 	// jca 27AUG94 vrmadness		if (!GetSerial(str,2))  // This checks for a name in the win.ini    		{			p=new(VPersonalize);			p->cVPersonalize();        	}#endif // BUNDLED						//] merge SE, vrmadness		// GJR 7/4/95	gPersonallyInited = 1;	}# elsevoid	VPersonalize::cVPersonalize(void)	{ }void 	Personalize(void)	{ }# endif // BUNDLEDvoid CantDoIt(void)	{	AlertDialog *alert;	VPlaySound(beepSound);	alert=new(AlertDialog);	alert->cAlertDialog(TXT_PRSNMASTER);	VExitToShell();	}#endif // MACINTOSH