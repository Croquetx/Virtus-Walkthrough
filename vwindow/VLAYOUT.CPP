/*------------------------------------------------------------------------------ * Virtus WalkThrough_ * Version 1.1.1 * * Copyright _ 1990-1992 by Virtus Corporation * All Rights Reserved * Written by   *				 *				Mark J. Uland * Virtus Corporation * Suite 204 * 117 Edinburgh South * Cary, North Carolina    27511 * (919) 467-9700 *------------------------------------------------------------------------------ * Source File:  * Notes:  * How to decipher *	First three letters tell which dialog box the descriptor goes with *		EXP - Export dialog discriptor *	4th letter is the type of item it is *		T - Title *		S - Static Text *		P - Popup *		E - Edit Text * 		C - Check Box *		R - Radio Button *		B - Button *	_XXXX is some remote description of what it's for * History:  *------------------------------------------------------------------------------ */#include "VTypes.h"#include "WTypes.h"#include "VLayout.h"#include "VGraphic.h"#include "VTextDef.h"#if MACINTOSH#define STD_REVERTW	238#define STD_REVERTH	120#define STD_SAVEW	300#define STD_SAVEH	100#define STD_QUERYW	394#define STD_QUERYH	105#define STD_INPUTW	214#define STD_INPUTH	160#elif WINDOWS#define STD_REVERTW	320#define STD_REVERTH	105#define STD_SAVEW	310#define STD_SAVEH	105#define STD_QUERYW	250#define STD_QUERYH	105#define STD_INPUTW	200#define STD_INPUTH	122#endif //WINDOWSLayoutSpec systemLayoutSpec[] =	/* { { top,left,bottom,right } , title } */	{/* STANDARD INPUT DIALOG *//* inputTitle 	*/	{ InitRect(D_EDGE , D_LEDGE , D_EDGE+D_TEXTH , STD_INPUTW) , TXT_EMPTYSTRING } ,#if MACINTOSH/* inputText 	*/	{ InitRect(D_EDGE+D_TEXTH+7 , D_LEDGE , D_EDGE+D_TEXTH+7+D_EDITH , STD_INPUTW-D_LEDGE ) , TXT_EMPTYSTRING } ,/* inputNumber 	*/	{ InitRect(D_EDGE+D_TEXTH+7 , D_LEDGE , D_EDGE+D_TEXTH+7+D_EDITH ,  (4*D_LEDGE) ) , TXT_EMPTYSTRING } ,/* inputCancel 	*/	{ InitRect(STD_INPUTH-D_EDGE-D_BTNH , STD_INPUTW-(2*D_EDGE)-(2*D_BTNW) ,  STD_INPUTH-D_EDGE ,  STD_INPUTW-(2*D_EDGE)-D_BTNW ) , TXTC_CANCEL } ,/* inputOK 		*/	{ InitRect(STD_INPUTH-D_EDGE-D_BTNH , STD_INPUTW-D_EDGE-D_BTNW ,  STD_INPUTH-D_EDGE ,  STD_INPUTW-D_EDGE ) , TXTC_OK },#elif WINDOWS/* inputText 	*/	{ InitRect(D_EDGE+D_TEXTH+7 , D_LEDGE , D_EDGE+D_TEXTH+7+D_EDITH , STD_INPUTW-D_LEDGE ) , TXT_EMPTYSTRING } ,/* inputNumber 	*/	{ InitRect(D_EDGE+D_TEXTH+7 , D_LEDGE , D_EDGE+D_TEXTH+7+D_EDITH ,  (4*D_LEDGE) ) , TXT_EMPTYSTRING } ,/* inputCancel 	*/	{ InitRect(STD_INPUTH-D_EDGE-D_BTNH , (STD_INPUTW-D_BTNSEP>>1)+D_BTNSEP ,  STD_INPUTH-D_EDGE ,  (STD_INPUTW-D_BTNSEP>>1)+D_BTNSEP+D_BTNW ) , TXTC_CANCEL } ,/* inputOK 		*/	{ InitRect(STD_INPUTH-D_EDGE-D_BTNH , (STD_INPUTW-D_BTNSEP>>1)-D_BTNW ,  STD_INPUTH-D_EDGE ,  (STD_INPUTW-D_BTNSEP>>1) ) , TXTC_OK },#endif //WINDOWS/* stdInputDlog */	{ InitRect(0 ,  0 , STD_INPUTH , STD_INPUTW ) , TXT_EMPTYSTRING } ,#if VRML_ANCHOR			// VRML-ABD 23JUN95#define STD_INPUTW_WIDE 400/* stdInputDlogWide */	{ InitRect(0 ,  0 , STD_INPUTH , STD_INPUTW_WIDE ) , TXT_EMPTYSTRING } ,/* inputTitleWide 	*/	{ InitRect(D_EDGE , D_LEDGE , D_EDGE+D_TEXTH , STD_INPUTW_WIDE) , TXT_EMPTYSTRING } ,/* inputCancelWide 	*/	{ InitRect(STD_INPUTH-D_EDGE-D_BTNH , STD_INPUTW_WIDE-(2*D_EDGE)-(2*D_BTNW) ,  STD_INPUTH-D_EDGE ,  STD_INPUTW_WIDE-(2*D_EDGE)-D_BTNW ) , TXTC_CANCEL } ,/* inputOKWide 		*/	{ InitRect(STD_INPUTH-D_EDGE-D_BTNH , STD_INPUTW_WIDE-D_EDGE-D_BTNW ,  STD_INPUTH-D_EDGE ,  STD_INPUTW_WIDE-D_EDGE ) , TXTC_OK },/* inputTextWide 	*/	{ InitRect(D_EDGE+D_TEXTH+7 , D_LEDGE , D_EDGE+(D_TEXTH*6)+7+D_EDITH , STD_INPUTW_WIDE-D_LEDGE ) , TXT_EMPTYSTRING } ,/* inputNumberWide 	*/	{ InitRect(D_EDGE+D_TEXTH+7 , D_LEDGE , D_EDGE+(D_TEXTH*6)+7+D_EDITH ,  (4*D_LEDGE) ) , TXT_EMPTYSTRING } ,#endif // VRML_ANCHOR/* STANDARD QUERY DIALOG */#if MACINTOSH/*  queryMsg */		{ InitRect(D_EDGE , D_LEDGE+D_ICNW+D_EDGE , D_EDGE+(4*D_TEXTH) , STD_QUERYW ) , TXT_EMPTYSTRING } ,/*  queryOK */		{ InitRect(STD_QUERYH-D_EDGE-D_BTNH , STD_QUERYW-D_EDGE-D_BTNW , STD_QUERYH-D_EDGE , STD_QUERYW-D_EDGE ) , TXTC_OK } ,/*  queryCancel */	{ InitRect(STD_QUERYH-D_EDGE-D_BTNH , STD_QUERYW-(2*D_EDGE)-(2*D_BTNW) , STD_QUERYH-D_EDGE , STD_QUERYW-(2*D_EDGE)-D_BTNW ) , TXTC_CANCEL } ,#elif WINDOWS/*  queryMsg */		{ InitRect(D_EDGE+(D_ICNH-D_TEXTH>>1) , D_LEDGE+D_ICNW+D_EDGE , D_EDGE+(D_ICNH-D_TEXTH>>1)+(4*D_TEXTH) , STD_QUERYW ) , TXT_EMPTYSTRING } ,/*  queryOK */		{ InitRect(STD_QUERYH-D_EDGE-D_BTNH , (STD_QUERYW-D_BTNSEP>>1)-D_BTNW , STD_QUERYH-D_EDGE , (STD_QUERYW-D_BTNSEP>>1) ) , TXTC_OK } ,/*  queryCancel */	{ InitRect(STD_QUERYH-D_EDGE-D_BTNH , (STD_QUERYW-D_BTNSEP>>1)+D_BTNSEP , STD_QUERYH-D_EDGE , (STD_QUERYW-D_BTNSEP>>1)+D_BTNSEP+D_BTNW ) , TXTC_CANCEL } ,#endif //WINDOWS/*  queryIcon */	{ InitRect(D_EDGE , D_LEDGE , D_EDGE+D_ICNW ,   D_LEDGE+D_ICNW ) , TXT_EMPTYSTRING } ,/*  stdQueryDlog */	{ InitRect(   0 ,  0 , STD_QUERYH , STD_QUERYW ) , TXT_EMPTYSTRING } ,/* STANDARD SAVE DIALOG */#if MACINTOSH/*  saveMsg */		{ InitRect(D_EDGE , D_LEDGE , D_EDGE+(4*D_TEXTH) , STD_SAVEW ) , TXT_SAVECHANGES } ,/*  saveSave */		{ InitRect(STD_SAVEH-D_EDGE-D_BTNH , STD_SAVEW-D_EDGE-D_BTNW ,  STD_SAVEH-D_EDGE ,  STD_SAVEW-D_EDGE ) , TXT_SAVE } ,/*  saveDontSave */	{ InitRect(STD_SAVEH-D_EDGE-D_BTNH , STD_SAVEW-(4*D_EDGE)-(3*D_BTNW) , STD_SAVEH-D_EDGE , STD_SAVEW-(4*D_EDGE)-(2*D_BTNW) ) , TXT_DONTSAVE } ,/*  saveCancel */ 	{ InitRect(STD_SAVEH-D_EDGE-D_BTNH , STD_SAVEW-(2*D_EDGE)-(2*D_BTNW) , STD_SAVEH-D_EDGE , STD_SAVEW-(2*D_EDGE)-D_BTNW ) , TXTC_CANCEL } ,#elif WINDOWS/*  saveMsg */		{ InitRect(D_EDGE+(D_ICNH-D_TEXTH>>1) , D_LEDGE+D_ICNW+D_EDGE , D_EDGE+(D_ICNH-D_TEXTH>>1)+D_TEXTH , STD_SAVEW ) , TXT_SAVECHANGES } ,/*  saveSave */		{ InitRect(STD_SAVEH-D_EDGE-D_BTNH , (STD_SAVEW-D_BTNW>>1)-D_BTNW-D_BTNSEP , STD_SAVEH-D_EDGE , (STD_SAVEW-D_BTNW>>1)-D_BTNSEP ) , TXTC_YES } ,/*  saveDontSave */	{ InitRect(STD_SAVEH-D_EDGE-D_BTNH , (STD_SAVEW-D_BTNW>>1) , STD_SAVEH-D_EDGE , (STD_SAVEW-D_BTNW>>1)+D_BTNW ) , TXTC_NO } ,/*  saveCancel */ 	{ InitRect(STD_SAVEH-D_EDGE-D_BTNH , (STD_SAVEW-D_BTNW>>1)+D_BTNW+D_BTNSEP , STD_SAVEH-D_EDGE , (STD_SAVEW-D_BTNW>>1)+(2*D_BTNW)+D_BTNSEP ) , TXTC_CANCEL } ,#endif //WINDOWS/*	saveIcon */		{ InitRect(D_EDGE , D_LEDGE , D_EDGE+D_ICNW , D_LEDGE+D_ICNW ) , TXT_EMPTYSTRING } ,/*  stdCloseDlog */	{ InitRect(0 , 0 ,  STD_SAVEH , STD_SAVEW ) , TXT_EMPTYSTRING } ,/* STANDARD DISCARD DIALOG */#if MACINTOSH/*  revertSMsg */	{ InitRect(D_EDGE , D_LEDGE ,  D_EDGE+(4*D_TEXTH) , STD_REVERTW ) , TXT_DISCCHANGES } ,/*  revertYes */	{ InitRect(STD_REVERTH-D_EDGE-D_BTNH , STD_REVERTW-D_EDGE-D_BTNW ,  STD_REVERTH-D_EDGE ,  STD_REVERTW-D_EDGE ) , TXTC_YES } ,/*  revertNo */		{ InitRect(STD_REVERTH-D_EDGE-D_BTNH , STD_REVERTW-(2*D_EDGE)-(2*D_BTNW) , STD_REVERTH-D_EDGE , STD_REVERTW-(2*D_EDGE)-D_BTNW ) , TXTC_NO } ,#elif WINDOWS/*  revertSMsg */	{ InitRect(D_EDGE+(D_ICNH-D_TEXTH>>1) , D_LEDGE+D_ICNW+D_EDGE ,  D_EDGE+(D_ICNH-D_TEXTH>>1)+D_TEXTH , STD_REVERTW ) , TXT_DISCCHANGES } ,/*  revertYes */	{ InitRect(STD_REVERTH-D_EDGE-D_BTNH , (STD_REVERTW-D_BTNSEP>>1)-D_BTNW , STD_REVERTH-D_EDGE , (STD_REVERTW-D_BTNSEP>>1) ) , TXTC_YES } ,/*  revertNo */		{ InitRect(STD_REVERTH-D_EDGE-D_BTNH , (STD_REVERTW-D_BTNSEP>>1)+D_BTNSEP , STD_REVERTH-D_EDGE , (STD_REVERTW-D_BTNSEP>>1)+D_BTNSEP+D_BTNW ) , TXTC_NO } ,#endif //WINDOWS/*	revertIcon */	{ InitRect(D_EDGE , D_LEDGE , D_EDGE+D_ICNW , D_LEDGE+D_ICNW ) , TXT_EMPTYSTRING } ,/*  stdRevertDlog*/	{ InitRect( 0 ,  0 , STD_REVERTH , STD_REVERTW ) , TXT_EMPTYSTRING } ,	};	