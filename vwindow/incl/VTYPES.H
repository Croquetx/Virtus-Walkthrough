#ifndef V_TYPES#define V_TYPES/* compiler flags */#define TRUE 	1#define	FALSE	0#define	PRECOMPILED		FALSE//#define THINKC 		FALSE//#define MPW 		FALSE//#define BORLAND 	TRUE//#define MICROSOFT 	FALSE#ifdef __PPCC__#define MACINTOSH TRUE#include <Types.h>#include "VWHeaders.h"#elif (THINK_C||THINK_CPLUS || applec||__MWERKS__) //applec = MPW // DAS-C++ 10/2/93#define MACINTOSH	TRUE#else#define MACINTOSH	FALSE#endif //(THINK_C || applec)#if (__BORLANDC__ || _MSC_VER || __SC__)#define WINDOWS	TRUE#else#define WINDOWS	FALSE#endif //(__BORLANDC__ || _MSC_VER || __SC__)#if __BORLANDC__       // jca 5JAN93 borlandc 4 uses functions for min and max#define __MINMAX_DEFINED 1#endif#if (MACINTOSH && WINDOWS)#error Bad compiler!  Figure out who you really are.#endif#ifndef MACINTOSH#ifndef WINDOWS#error Bad compiler!  You must tell us who you are.#endif //WINDOWS#endif //MACINTOSH #include "VToolBox.h"#include "VStructs.h"//-----------------------------------------------------------------------------------#if MACINTOSH		// Catch a Symantec QuickDraw.h/MacHeaders problem	//GJR 09/28/93#ifdef dangerousPattern#error OOPS, WRONG DEFINITION IN QUICKDRAW.H.  BAD MacHeader PRECOMPILE ALSO.#endif#if 0/* DAS-VWINDOWS-C++ 10/2/93	Ok, so you got caught by the QuickDraw/Symantec bug. Here's how to fix it...	1) Edit "QuickDraw.h"		Goto "Symantec C(++?) for Macintosh"		Goto "Mac #includes"		Goto "Apple #includes"		Edit "QuickDraw.h"			Find "#define dangerousPattern 1		// for THINK C backwards compatibility "			Comment it out. Don't let it be defined. (Precede it with double slash)				(Changing the 1 to a 0 is NOT sufficient...)			BE SURE TO SAVE YOUR CHANGES 	2) Precompile MacHeaders		Goto "Symantec C(++?) for Macintosh"		Goto "Mac #includes"		Open and PreCompile "Mac #includes.c"		SAVE IT as "MacHeaders" in the same directory (within "Mac #includes")*/#endif //0comment#endif //MACINTOSH//-----------------------------------------------------------------------------------// BILBIL - RoutineDPtr is no more - 11/15/93typedef long			Long, *LongPtr;		// 32 bitstypedef unsigned long	ULong, *ULongPtr;	// 32 bits unsignedtypedef int				Int, *IntPtr;		// 16 bits or more; platform compiler dependenttypedef unsigned int	UInt, *UIntPtr;		// 16 bits or more unsigned; platform compiler dependenttypedef short			Short, *ShortPtr;	// 16 bitstypedef unsigned short	UShort, *UShortPtr;	// 16 bits unsignedtypedef char			Char, *CharPtr;		// character, what about kanjiTalk?typedef unsigned char	UChar, *UCharPtr;	// character-unsigned#if MACINTOSH#define V_COMMAND		cmdKey#define V_SHIFT			shiftKey#define V_OPTION		optionKey#define V_CONTROL		controlKey#define VExitToShell() 	ExitToShell()#define ObjectHandle 	Handle#define LONG ULong#define WORD UShort#define BOOL Short#define LPLONG ULongPtr#define LPBYTE UCharPtr#define FLASHUSEASM FALSE#elif WINDOWStypedef int		Boolean;    // mac type used in texturestypedef UChar*  StringPtr;	// ditto#define reallyQuitApp	-1#define VExitToShell() TerminateApp(NULL,NO_UAE_BOX)#define V_COMMAND		VK_MENU#define V_SHIFT			MK_SHIFT#define V_OPTION		MK_CONTROL#define V_CONTROL		MK_CONTROL#endif //WINDOWS#endif //V_TYPES