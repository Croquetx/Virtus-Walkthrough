#ifndef V_PANE#define V_PANE#include "VDisplay.h"#include "VItem.h"extern struct V_Pane *currentPane;void SetCurrentPane(struct V_Pane *);struct V_Pane *GetCurrentPane(void);#if WINDOWS#define BUTTONUP_FLYING	0x01    // jca constants for the gWithoutButtonDown#define TUM_MOMENTUM	0x02extern char *paneClassName;extern struct V_Pane *lastPane;extern int gWithoutButtonDown;	// jca 17FEB94 are we flying without buttonDown set?long FAR PASCAL _export PaneWndProc (HWND, UINT, WPARAM, LPARAM);#endif //WINDOWS#define doubleClick		0x10000L#if MACINTOSH#define V_PANE_PANE		0 // MERGE-GOURAUD-PRO-10	#define V_PANE_DIALOG	1 // MERGE-GOURAUD-PRO-10#endif/*------------------------------------------------------------------------------ * Arguments to the display method of the V_Pane: *------------------------------------------------------------------------------*/enum DisplayFlags{	DRAW = 1,	SCROLL_DRAW,	ACT_REBUILD_DRAW ,	DEACT_REBUILD_DRAW,	ACT_DRAW ,	DEACT_DRAW,	ACT_REDRAW,	DEACT_REDRAW,	PRINT_DRAW = 10,		PICT_DRAW		};	/*------------------------------------------------------------------------------ * Arguments to the construction method of the V_Pane: *------------------------------------------------------------------------------*/#define VERTSCROLLBAR	0x01#define HORZSCROLLBAR	0x02#define GRAYOUT			0x04/*------------------------------------------------------------------------------ * Arguments to the CalcSize() *------------------------------------------------------------------------------*/enum CalcSizeTypes{	INSTALL=1,	RESIZE,	GETRECT,	POPUP	};struct V_Pane:V_Display{	struct V_Window * theWindow;	/* the owning display device				*/	Rect paneRect;					/* the full pane in window coordinates		*/	Rect contRect;					/* the content part in window coordinates	*/	Rect dataRect;					/* the content part in local coordinates	*/	Rect virtRect;					/* the virtual area of the "document"		*/	Rect scrollRect;				/* how much of the above is scrolled?		*/	struct V_HorzScroll *HorzScroll;/*das 12/14/89 Scroll bar  Control Handle	*/	struct V_VertScroll *VertScroll;/*das 12/14/89 Scroll bar  Control Handle	*/#if WINDOWS	HWND paneWindow;	PAINTSTRUCT ps;	HFONT itemFont;	int doingPaint;					/* set if we need to BeginPaint()*/	short bandPrint;				// ABD MERGE-PRINT set to TRUE if we want banded printing										// for this pane -- all this does is suppress the StartPage/										// EndPage calls -- it does not do the banding this for you yet.#endif //WINDOWS	int grow;						/* can this window grow?					*/	long lastClick;					/* when did the last mouse click occur?		*/	Point lastPoint;				/* where did the last mouse click occur?	*/	int active;						/* is this pane currently active?			*/	int centerX,centerY;			/* this is the center of the pane in local.	*/	int barWidth;					/* this determines scrollbar width.			*/	int xOrigin;					/* origin location in global (window) coordinates */	int yOrigin;	int depth;						/* this is the color depth of this pane		*/	struct V_ItemList *itemList;	/* list of items in pane - GBA 6/22/90 		*/	int frame;						/* default frame offset for new V_EditTextes - GBA 6/27/90 */	int popup;						/* indicates whether this is a popup pane or not - DAS 7/2/90*/	int grayOut;					/* indicates if grayed out when inactive	*/	struct V_MenuMgr* theMenu;		/* menu manager */	struct V_Display* outputOn;		// DAS-VPRINT-UPDATE 9/17/93/* indicates that we are drawing to output device */	int scrollBarFlag;	int StashHScrollValue;          /* JAM 11/3/93 for saving/restoring scroll bar */    int StashVScrollValue;                /*JAM 11/3/93 positions between installs */	int installed;					/* indicates whether or not we are in a window*/#if MACINTOSH	WindowPtr GetParentWindow(void);	void Resize(RgnHandle,int);#elif WINDOWS	HWND GetParentWindow(void);	void Resize(int);	HWND  FindControl(DWORD,int);	struct V_Control*  FindControlType(int);	virtual int ContinuousTrack(void);		// jca for buttondown/momentum 5APR94#endif //WINDOWS	virtual void cPane(int flag);		virtual void dPane(void);	void SetUp(struct V_Window *);	void UnSetUp(void);				void PaneDepth(void);	void Draw(void);	int  MouseClick(Point,long);	void MouseUnclick(Point,long);	void DoHand(Point);	virtual int Push(int,int);	void MovePane(int,int,int);	void SetScroll(int);	virtual void Activate(void);	void Deactivate(void);	void TrackCursor(Point,long);	virtual void Reset(void);	int  GrowRectCalc(Rect *,Point *,int,int);	void CalcVert(Rect *);	void CalcHorz(Rect *);	void CalcDataRect(void);#if VPRO	void VForceRedraw(int);		//JAM TXTRFIDDLE 06/14/94#endif	void VInvalidate(void);	 	// ABD JAN95	void VDisplay(int);	void SetPane(void);	void UnsetPane(void);	void WindowPane(void);	void ClipPane(int);	void GetRect(Rect *);	void SetBarWidth(int);	int SetMetaPort(void);	// DAS-VWIN 9/17/93	void UnsetMetaPort(void);	VGrafData GetMetaPort(Rect *);	void ReleaseMetaPort(VGrafData);	void MetaCopy(Rect *);		void PopUp(Point, int, Rect *);	struct V_MenuMgr *GetMenuMgr(void);			void	SetText(struct V_EditText *);	struct V_EditText *GetText(void);		virtual void CalcScroll(void);	virtual void Display(int,int,int);	virtual void CalcSize(Rect *,Point *,int,int);	virtual void SizeNotify(void);	virtual void MouseDown(Point,long);	virtual void MouseUp(Point,long);	virtual int  KeyAction(char,long);	#if WINKEYBOARDVAVIGATION	//17OCT94 JAM-WINDOWS-KEYBOARD-NAVIGATION [[[	virtual int  KeyUpAction(char,long);	#endif		//17OCT94 JAM-WINDOWS-KEYBOARD-NAVIGATION ]]]	virtual	int	 GetAction(long,long);	virtual void Track(Point,long,int);	virtual void GetVirtual(Rect *);	virtual void SetVScroll(void);	virtual void SetHScroll(void);	virtual int OKDrop(struct V_Pane *);	// DAS-VDRAG 9/3/93	virtual void Drop(Point pt, struct V_Pane *); // DAS-VDRAG 9/3/93	void Drag(void);					// DAS-VDRAG 9/4/93	virtual void DisplayDrag(Point pt);	// DAS-VDRAG 9/4/93	void StashScrollValues(void);	//JAM 11/3/93 save/restore scroll pos	void RestoreScrollValues(void);	//JAM 11/3/93		void SetVSpeed(int);	void SetVPage(int);	void SetVMove(int);	void SetVScrollValue(int);	int  GetVScrollValue(void);	void SetVScrollRange(int,int);	void GetVScrollRange(int*,int*);	void SetHSpeed(int);	void SetHPage(int);	void SetHMove(int);	void SetHScrollValue(int);	int  GetHScrollValue(void);	void SetHScrollRange(int,int);	void GetHScrollRange(int*,int*);	int VOutput(struct V_Display *);	void Output(struct V_Display *);	virtual void TrackHelp(Point pt,long modifier); // DAS-VWINDOWS 9/30/93	void Bubble(Point pt,Rect *hot,char *text);	void AddItem(struct V_Item *);	void RemoveItem(struct V_Item *);    #if MACINTOSH	virtual int GetType(void);	// MERGE-GOURAUD-PRO-10	#endif	};typedef struct SavePaneData{	Rect paneRect;					/* the full pane in window coordinates		*/	Rect contRect;					/* the content part in window coordinates	*/	Rect dataRect;					/* the content part in local coordinates	*/	Rect virtRect;					/* the virtual area of the "document"		*/	Rect scrollRect;				/* how much of the above is scrolled?		*/	int hLoc;	int vLoc;		int xOrigin;					/* origin location in global (window) coordinates */	int yOrigin;	int depth;	int centerX;	int centerY;	} SavePaneData;#if MACINTOSHstruct V_PaneScroll:V_CtrlScrollBar{ 	void GetRect(Rect *);	};	struct V_VertScroll:V_PaneScroll{ 	void Action(void);	};struct V_HorzScroll:V_PaneScroll{ 	void Action(void);	};#elif WINDOWS#define SB_STEPPOS SB_LINEDOWN#define SB_STEPNEG SB_LINEUP#define SB_PAGEPOS SB_PAGEDOWN#define SB_PAGENEG SB_PAGEUPstruct V_PaneScroll:V_Item{	int whichScroll;	int speed,page,step;	virtual void cItem(void);	void SetSpeed(int);	void SetPage(int);	void SetMove(int);	void SetValue(int);	int  GetValue(void);    void SetRange(int,int);	void GetRange(int*,int*);    void DoScroll(int,int);	};	struct V_VertScroll:V_PaneScroll{ 	void cItem(void);	};struct V_HorzScroll:V_PaneScroll{ 	void cItem(void);	};#endif //WINDOWS#endif //V_PANE