#ifndef _DEBUG_H_#define _DEBUG_H_// Don't EVER set DEBUG here, the proper place for such// is in the project #defines.  BILBIL 9/15/94#if MACINTOSH// MERGE-GOURAUD-PRO-8 [[[#if DEBUG#define DEBUGGER() 		Debugger()#define DEBUGSTR(a) 	DebugStr(a)#else#define DEBUGGER() 		{ /* do nothing */ }#define DEBUGSTR(a) 	{ /* do nothing */ }#endif // DEBUG// MERGE-GOURAUD-PRO-8 ]]]#define DO_WINDOWS		/* this code needs a Windows(tm) equivalent */#elif WINDOWS && !VINSTALLER#include <stdio.h>extern int AlertMessage(char *);#if DEBUG#define DEBUGGER()		{ char deErrStr[256]; sprintf(deErrStr, "%s line %d failed its ASSERT (or called DEBUGGER)", __FILE__, __LINE__); AlertMessage(deErrStr); }#define DEBUGSTR(a)		{ char deErrStr[256]; sprintf(deErrStr, "%s line %d failed its ASSERT (or called DEBUGGER)", __FILE__, __LINE__); AlertMessage(deErrStr); }	// MERGE-GOURAUD-PRO-8#else#define DEBUGGER()		{ }#define DEBUGSTR(a) 	{ /* do nothing */ }// MERGE-GOURAUD-PRO-8#endif#if !__SC__ // Symantic doesn't like this jca 1FEB94#define DO_WINDOWS		#error this code needs a Windows(tm) equivalent#endif // !__SC__#endif#define VA(va, n, type)	(  * ( (type *)  ((*(va->array)) + (n * sizeof(type))) )    )#if DEBUG#define ASSERT(a)	{ if (!(a)) DEBUGGER(); }#else#define ASSERT(a)	{ /* do nothing */ }#endif#endif //_DEBUG_H_