#ifndef _WHANDLE_#define _WHANDLE_#include "VTypes.h"#if MACINTOSH#define HDeref(h)			(*(h))#elif WINDOWS#if DEBUG && MEM_DEBUG// jca 7APR94 MEM_DEBUG turns on the smartheap memory debugging stuff,// and DEFINE_NEW_MACRO puts stuff in the new() calls to show where they// were allocated.  All this stuff gets written out to a file called// memdebug.log (look in vmemutil.cpp for this)#define DEFINE_NEW_MACRO	1#endif // DEBUG#include "smrtheap.hpp"typedef char *Handle;#define NewHandle(s)		((Handle)MemAllocPtr(MEM_DEFAULT_POOL, s, FALSE)) #define DisposHandle(h)		MemFreePtr(h)#define GetHandleSize(h)	MemSizePtr(h)#define HLock(h)#define HUnlock(h)#define HDeref(h)			(h)long FreeMem(void);#endif //WINDOWS/*new allocator initHLock overrideV_Array Use, Unuse, Abuse, UnAbuseLow memory handler*/#endif //_WHANDLE_