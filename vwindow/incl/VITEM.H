/*------------------------------------------------------------------------------ * VWINDOWSt - the window object toolbox * Version 1.0 * * Copyright c 1990 by Virtus Corporation * All Rights Reserved * Written by David A. Smith *            Gregory B. Abbas   * Suite 204 * 117 Edinburgh South * Cary, North Carolina    27511 * (919) 467-9700 *------------------------------------------------------------------------------ * V_Item.h *------------------------------------------------------------------------------ */#ifndef V_ITEM#define V_ITEM#include "VIO.h"#include "VArray.h"#if MACINTOSHenum VJustificationType{	vJustLeft = teJustLeft,	vJustCenter = teJustCenter,	vJustRight = teJustRight	};#define DEFAULT_FRAME 1#define vDefTextFont systemFont#define vDefTextFace vNormal#define vDefTextSize 12#define	V_CLEANUP		0xFF#define	V_ENTER			0x03#define V_DELETE		0x08#define V_BACKSPACE		0x08#define V_TAB			0x09#define	V_RETURN		0x0D#define V_ESCAPE		0x1B#define	V_CLEAR			V_ESCAPE#define	V_LEFTARROW 	0x1C#define	V_RIGHTARROW	0x1D#define	V_UPARROW		0x1E#define	V_DOWNARROW		0x1F#define V_SPACE			0x20#define V_PERIOD		0x2E#define V_CANCEL		V_ESCAPE#endif //MACINTOSH#if WINDOWS#define IDC_VIRTUS 			5011 //most controls have this identifier.#define ID_VIRTUS_REVERT 	5012 //pref dlog revert button.  Is there no better place for this?#define ID_VIRTUS_DEFAULT   5013 // pref dlog default button.enum VJustificationType{	vJustLeft = TA_LEFT,	vJustCenter = TA_CENTER,	vJustRight = TA_RIGHT	};#define DEFAULT_FRAME 1#define vDefTextFont vDialogFont#define vDefTextFace vDialogFace#define vDefTextSize vDialogFontSize#define	V_CLEANUP		0xFF#define	V_ENTER			VK_EXECUTE#define V_DELETE		VK_DELETE#define V_BACKSPACE		VK_BACK#define V_TAB			VK_TAB#define	V_RETURN		VK_RETURN#define V_ESCAPE		VK_ESCAPE#define	V_CLEAR			VK_CLEAR#define	V_CANCEL		VK_CANCEL#define	V_LEFTARROW 	VK_LEFT#define	V_RIGHTARROW	VK_RIGHT#define	V_UPARROW		VK_UP#define	V_DOWNARROW		VK_DOWN#define V_SPACE			VK_SPACE#define V_PERIOD		VK_ESCAPE#endif //WINDOWStypedef struct VStyleRec{	int just;	int font;	int face;	int size;	int textFlags;	} VStyleRec;struct V_Item:indirect	{	struct V_Pane *thePane;	Rect bounds;		// BILBIL - moved text style flags from V_Text	int just;	int font;	int face;	int size;	short textFlags;	/* --- */		virtual void cItem(void);	virtual void dItem(void);	virtual void Install(struct V_Pane *);	virtual void Uninstall(void);	virtual void Display(void);	virtual void Idle(void);	virtual int MouseDown(Point, long);	virtual int Track(Point, long);	virtual void SetRect(Rect *r);	virtual void GetRect(Rect *r);	virtual void Tab(void);	virtual void SetDisplay(VGrafPort);	virtual void Activate(int);	virtual int  GetActiveState(void);	virtual void SetStyle(struct VStyleRec *); // BILBIL - from V_Text - 12/01/93	virtual void GetStyle(struct VStyleRec *); // BILBIL - from V_Text - 12/01/93	virtual long GetControlType(void);   // jca 31JAN94 virtual func#if WINDOWS	virtual HWND  FindControl(DWORD,int);	virtual void  FocusOn(void);#elif MACINTOSH	void GlobalRect(Rect *r);#endif //WINDOWS	};	#define TEXT_AUTOFORMAT	0x01#define TEXT_ERASE		0x02	struct V_Text:V_Item	{	Handle text;	// BILBIL moved style flags to V_Item - 12/01/93	virtual void cItem(void);	virtual void dItem(void);	void SetUp(void);	void UnSetUp(void);	virtual void Display(void);		virtual void SetText(strPtr str);	virtual void GetText(strPtr str);    virtual int TextLength(void);	// BILBIL - moved style stuff to V_Item - 12/01/93	};//JAM added for merge VPRO 5-3-94 [[[struct V_StatTextBox:V_Text	{	void Display(void);	};//JAM added for merge VPRO 5-3-94 ]]]	struct V_EditText:V_Text	{#if MACINTOSH	TEHandle textbox;#endif //MACINTOSH#if WINDOWS	HWND textbox;#endif //WINDOWS	int frame;		/* --- */		virtual void cItem(void);	virtual void dItem(void);	virtual void Install(struct V_Pane *);	virtual void Uninstall(void);	virtual void Display(void);	virtual int Action(char,long);		void Tab(void);		int MouseDown(Point, long);	void Idle(void);		void Activate(int);	void SetRect(Rect *);	void SetFrame(int);		void SetText(strPtr);	void GetText(strPtr);    int TextLength(void);	void SetSelect(int, int);	void Edit(char, long);	void SetDisplay(VGrafPort);#if WINDOWS	HWND  FindControl(DWORD,int);	void  FocusOn(void);#endif //WINDOWS	};	// jca 22OCT94 PRO/PLAYER credits.  To do a multiline edit box under Windows, you// must give the ES_MULTILINE style, which makes all our other edit text items// stop working.  So this is to handle doing multiline boxes on the PC, which the mac// does right anyway.  [[[struct V_MultilineEditText:V_EditText	{	virtual void Install(struct V_Pane *);	};// ]]] jca 22OCT94struct V_Control:V_Item	{#if MACINTOSH	ControlHandle theControl;#endif //MACINTOSH#if WINDOWS	HWND theControl;    int	theControlNumber;#endif //WINDOWS	Handle text;	int minValue, maxValue,value;    struct V_Array *group;	/* --- */		virtual void cItem(void);	virtual void dItem(void);	virtual void Display(void);	virtual void Install(struct V_Pane *);	virtual void Uninstall(void);	void Activate(int);	int MouseDown(Point, long);	virtual long GetControlType(void);#if WINDOWS	virtual void GetControlClass(char*);	HWND  FindControl(DWORD,int);	void  SetCtrlNumber(int);       	// set the windows button id	int	  GetCtrlNumber(char *);        // what is the appropriate button id for this text?	void  MakeActive(void);    void  FocusOn(void);	void GetText(strPtr);	void SetStyle(struct VStyleRec *); // BILBIL - from V_Text - 12/01/93#endif //WINDOWS	virtual void Action(void);	void SetDisplay(VGrafPort);	void SetRect(Rect *);		virtual void SetValue(int);	virtual int GetValue(void);	void SetRange(int,int);	void GetRange(int*,int*);	void SetText(strPtr);	int  GetActiveState(void);	void SetGroup(struct V_Array *);	struct V_Array *GetGroup(void);	};	struct V_CtrlButton:V_Control	{	int defFlag;	void cItem(void);	void SetDefault(int);	int  GetDefault(void);	void Install(struct V_Pane *);	long GetControlType(void);	void Display(void);	virtual void Action(void);	};	struct V_CtrlCheck:V_Control	{	long GetControlType(void);	virtual void Action(void);	};	struct V_CtrlRadio:V_Control	{	long GetControlType(void);	void Action(void);	};struct V_CtrlScrollBar:V_Control	{	int page,move,scrollDelay;				long GetControlType(void);#if WINDOWS	void GetControlClass(char*);	void SetValue(int);	int  GetValue(void);#endif //WINDOWS	int MouseDown(Point,long);	void SetSpeed(int);			void SetPage(int);				void SetMove(int);				void ScrollRate(void);	};		#if MACINTOSHstruct V_PopMenu:V_Text	{	struct V_Menu	*popMenu;	Rect	popRect;	int		value;	int check_current_value;		// VPRO	void cItem(void);	void dItem(void);	void Reset(void);		// MERGE14	void SetRect(Rect *);	void SetText(strPtr);	void Display(void);	int  MouseDown(Point,long);		void SetCheckCurrentValue(int);		// ABD VPRO 	virtual void Action(void);	virtual void SetValue(int);	virtual int GetValue(void);	virtual void AddItems(void);	void Append(strPtr);	void AppendSeparator(void);		// ABD MERGE11 9/10/93 WILLIAMS	};#elif WINDOWSstruct V_PopMenu:V_Control	{	long GetControlType(void);	void GetControlClass(char*);	HWND  FindControl(DWORD,int);	void Install(struct V_Pane *);	virtual void Action(void);	virtual void SetValue(int);	virtual int GetValue(void);	virtual void AddItems(void);	void Append(strPtr);	void AppendSeparator(void);		// BG - 11/1/93	int	DroppedDown(void);			// BG - 11/03/93	};#endif //WINDOWSstruct V_Icon:V_Item	{#if MACINTOSH	Handle icon;	#elif WINDOWS	HICON	icon;#endif //WINDOWS	int id;		void cItem(void);	void dItem(void);	void SetIconID(int);	void Display(void);	};struct V_OutlineBox:V_Item	{	void Display(void);	};struct V_ItemList:V_Array	{	struct V_Pane *thePane;	struct V_Array *tabItems;			void cItemList(void);	void dItemList(void);	void DeleteItems(void);	void Install(struct V_Pane *);	void Uninstall(void);	void AddItem(struct V_Item *);	void RemoveItem(struct V_Item *);	void Display(void);	void Activate(int);	int MouseDown(Point, long);	int Track(Point, long);	void AddTabItem(struct V_Item *);	void RemoveTabItem(struct V_Item *);	void Tab(struct V_Item *);	void SetDisplay(VGrafPort);#if WINDOWS	struct V_Control*	FindControlType(int);	HWND  FindControl(DWORD,int);#endif //WINDOWS	};	#endif //V_ITEM