#ifndef V_WINDOW#define V_WINDOW#include "VDisplay.h"extern Point maxPoint;struct V_Window *TopWindow(struct V_Document *);struct V_Window *OnTopWindow(void); // DAS-VWI 8/9/93#define DieWindowEvent	13#define PRINT_WINDOW 	-129#define PRINT_SETUP		-130#if MACINTOSHstruct V_Window *BottomWindoid(struct V_Document *);int ActiveWindow(WindowPeek);WindowPeek GetRealWindow(WindowPeek pwin);WindowPeek MyFrontWindow(void);#elif WINDOWSextern char *windowClassName;extern char *windoidClassName;long FAR PASCAL _export WndProc(HWND,UINT,WPARAM,LPARAM);long FAR PASCAL _export WindoidProc(HWND,UINT,WPARAM,LPARAM);#endif //WINDOWS/*------------------------------------------------------------------------------ * V_Window object flags. *------------------------------------------------------------------------------*/enum WindowCloseFlags{	WINDOW_CLOSE=0,	WINDOW_HIDE,	WINDOW_DESTROY	};/* what kind of window?			*/#define DRAGBAR		0x0001#define GROWBOX 	0x0002#define GOAWAY		0x0004#define WINDOID		0x0008#define MODALDIALOG	0x0010#define BORDERLESS	0x0020#define POPUPDIALOG 0x0040#define OFFSCREEN	0x0100#define	FULLSCREEN	0x0200//DAS-VWI-ONTOP is for the new ON TOP OF EVERYTHING windows#define ONTOP		0x0400// ABD MERGE12 WILLIAMS 9/12/93 zoom box -- separate from grow box#define ZOOMBOX 	0x0800#define MODALWINDOW (POPUPDIALOG|MODALDIALOG)#define IN_MENU(t)	(((t) & (WINDOID|MODALDIALOG|POPUPDIALOG|OFFSCREEN)) == 0)struct V_Window:V_Display{	struct V_Document* theDocument;	/* the owning V_Document					*/	struct V_MenuMgr *theMenu;	/* local menu object						*/	struct V_Pane*	savePane;	/* while mousedown this is used				*/	VGrafPort theWindow;			/* the actual Macintosh window				*/	struct V_Pane*	lastPane;	/* after mouseup this is called to clean up	*/#if WINDOWS	Rect locate;				/* where the window goes*/	int	 appActivateState;#endif  //WINDOWS	int grow;					/* grow box flag							*/	int zoom;					/* zoom box flag ABD WILLIAMS 9/12/93 */	Point mnSize;				/* the minimum size that this window can be	*/	Point mxSize;				/* the maximum size that this window can be	*/	Point warnSize;				/* the size the CalcRect gets a warning at 	*/	struct V_Array *panes; 			/* this object is added to by pane			*/	Point wSize;				/* the size of the original window			*/	int icon;					/* is the window iconified?					*/	int wType;					/* dialog or regular window?				*/	int	priority;				/* is this a primary window or not 			*/	int offFlag;				/* Offscreen image flag (T/F)				*/	int dragable;				/* can we drag this window?					*/	struct	V_EditText	*activeText;	/* the current editable text if any	 MJU - 6/20/90*/	void AppActivate(int);	VGrafPort GetParentWindow(void);	void SetDocument(struct V_Document *);	void cWindow(Rect *,strPtr,Point,Point,Point,int,int);	void dWindow(void);	void Install(struct V_Pane *);	void UnInstall(struct V_Pane *);	void GetRect(Rect *);	void AddFrameSize(Rect *);	void RemoveFrameSize(Rect *);	void Locate(Rect *);	void Resize(int);	int  Active(void);	void Activate(void);	void Deactivate(void);	void Update(void);	void DrawPanes(void); // DAS-VWINDOW-UPDATE 9/9/93	void Grow(Point);	void Delete(void);	void DrawGrow(void);	void Drag(Point);	void Move(Rect *);	void Freeze(int tf);		/*these are the EVENTS*/	void MouseDown(Point,long);	void MouseUp(Point,long);	int KeyAction(char,long);	#if WINKEYBOARDVAVIGATION	//17OCT94 JAM-WINDOWS-KEYBOARD-NAVIGATION [[[	int KeyUpAction(char,long);	#endif		//17OCT94 JAM-WINDOWS-KEYBOARD-NAVIGATION ]]]	void TrackWindow(Point,long);	void Dispatch(int,Point,long);	void SetWPort(void);	void Paint(RGBColor *color);	void Cleanup(void);	void SetTitle(strPtr);	void GetTitle(strPtr);	virtual void Show(void);		// BILBIL - 12/15/93	virtual void Hide(void);		// BILBIL - 12/15/93	int  Visible(void);	void Select(void);	void Behind(V_Window *);	void SendEvent(long);	struct V_Pane *FindPane(Point);	struct V_MenuMgr *GetMenuMgr(void);		void SetOffScreen(int,int);	/* force the offscreen GWorld to resize to window	*/	VGrafData GetMetaPort(Rect *);	void ReleaseMetaPort(VGrafData);	// DAS-VWIN 9/17/93	void SetMetaWin(int,int,Rect *r);	/* set offscreen port to be drawn into				*/	void UnsetMetaWin(void);	void MetaCopy(Rect *);	/* copy offscreen to onscreen (if necessary)		*/			int DoEvent(long,long);	#if (!VPLAYER)	struct V_Print *GetVPrint(void);/*add MJU 3/15/91 */	void SetPrint(void);/*add DAS 9/26/90 */#endif //!VPLAYER	};#endif //V_WINDOW