#ifndef V_BUTTON#define V_BUTTON#include "VPane.h"#include "VArray.h"extern RGBColor offColor[];extern RGBColor onColor[];extern int colorButton;enum ButtonColor {      		// jca 2 Oct 93 {	BaseColor = 0,	TopFrame,	RightFrame,	BottomFrame,	LeftFrame,	OuterFrame,	ButtonTextColor             // jca 2 Oct 93 }	};#define BUTTON_FONT		125#define BUTTON_SIZE		16#define POPUP_SYMBOL	128#define OFFSTATE 	0#define ONSTATE  	1#define LOCKSTATE 	2#if WINDOWS#define BUTTON_EXTRA	0   // jca 3MAR94 don't add an extra pixel in windows#elif MACINTOSH#define BUTTON_EXTRA	1   // jca 3MAR94 do add an extra pixel on the mac#endif // WINDOWS// DAS-VR-VBUTTON 8/17/93 this is for horizontal and vertical bars in the buttons#define bHBAR	1#define bVBAR	2/* DAS-VR-VBUTTON 8/17/93 B_VARIABLE means that the button pane width is determined   by the overridden V_Console CalcSize method and that the button width is now    variable. It is the argument to cButton() */#define B_VARIABLE -1#define btnNotFound -1void TallColorButton(Rect *,RGBColor colorArray[]);void ShortColorButton(Rect *,RGBColor colorArray[]);void MonoButton(Rect *,int);struct V_BItem:indirect{	int  changed;				int  state;					Rect location;				// DAS-VR-VBUTTON 8/17/93 this was a Point.	struct V_Button *heirButton;	int  heirIndex;				unsigned char icon;			// DAS-VBUTTON 8/15/93		strPtr help;						void cBItem(unsigned char);// DAS-VBUTTON 8/22/93 unsigned char	void dBItem(void);	void CDraw(void);	void MDraw(void);	void SetState(int);	int  GetState(void);	void SetHeir(struct V_Button *);	void SetChar(unsigned char); // DAS 8/17/93	unsigned char GetChar(void); // DAS 8/17/93	void SetHelp(strPtr);	strPtr GetHelp(void);	void MoveButton(Rect *);	void OnState(void);	void OffState(void);	void NextHeir(void);	int DoHeir(int,Point);	int DoHelp(int,Point);	int PtInButton(Point); // DAS-VBUTTON 8/17/93 this is to find the cursor in the button	};struct V_Button:V_Array{	int tall;					int columns;				int rows;					int bWidth,bHeight;			Rect location;	struct V_Console *thePane;	void cButton(int);		void dButton(void);	void AppendButton(unsigned char);	// DAS-VBUTTON 8/22/93 unsigned char	void InsertButton(int, unsigned char);// DAS-VBUTTON 8/22/93 unsigned char	void CalcSize(Rect *, Point *);  // jca 27JAN94 added offset point	int Remove(long);	void SetHeir(int, struct V_Button *);	void Display(Rect *,int);	void HDisplay(int);	void DisplayChanged(int);	void SetState(int,int);	int  GetState(int);	void GetRect(Rect *);	void GetButtonRect(int item,Rect *r);	int  FindButton(Point);	int  OnButton(int);	void VMouseDown(int,int,long,int);	void VMouseTrack(int,int,int *,long,int); // DAS-VBUTTON 8/21/93     void VMouseUp(int,int,long,int);	void SetChar(int,unsigned char);// DAS-VBUTTON 8/22/93 unsigned char	unsigned char GetChar(int);// DAS-VBUTTON 8/22/93 unsigned char	void SetHelp(int,strPtr);	strPtr GetHelp(int);	int  Toggle(int);		virtual void SetButtonWidth(int);	// MERGE-GOURAUD		virtual void SetButtonSize(int);	virtual void MouseDown(int,long);	virtual void MouseUp(int,int,long);	virtual void MouseTrack(int,int,long); // DAS-VBUTTON 8/21/93	};enum ConsolePositionType{	positionConsole  = 0,	leftConsole,	topConsole,	rightConsole,	bottomConsole,	topLeftConsole,	bottomLeftConsole,	bottomRightConsole,	topRightConsole	};struct V_Console:V_Pane{	struct V_Button * vButton;		Point location;					int fullHeight;					struct V_Pane *hangPane;			int corner;						int border;					int initItem,item;#if WINDOWS	int buttonSelect;   // jca 1MAR94 flag for whether to allow button state changes#endif // WINDOWS	virtual void cPane(int);	virtual void dPane(void); // DAS-VWINDOWS 10/23/93	void Display(int,int,int);	void CalcSize(Rect *,Point *, int,int);	void MouseDown(Point,long);	void Track(Point,long,int);	void MouseUp(Point,long);	void SetButton(struct V_Button *);	void SetLocation(Point);	void SetFullHeight(int);	void SetPosition(struct V_Pane *,int);	void SetBorder(int);	void TrackHelp(Point pt, long modifier);// DAS-VWINDOWS 9/30/93	};	struct BHelp:V_Pane{	struct V_BItem *button;	int height;		void cBHelp(struct V_BItem *, int);	void Track(Point,long,int);					void CalcSize(Rect *,Point *,int,int);		void Display(int,int,int);				};#endif //V_BUTTON