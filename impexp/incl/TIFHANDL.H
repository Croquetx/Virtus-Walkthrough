#ifndef TIFF_HEADER_#define TIFF_HEADER_#include "VTypes.h"#if VWT#include "ImgHandl.h"struct TIFFWriter:ImageWriter {	ULong	IFDPosition, bufferSize, fileStartPos;	unsigned int 	compression, rowsPerStrip, Prediction;	struct V_Array	*stripOffsets;	struct V_Array	*stripLengths;		/* these are in TIFFWriter.c */	int		cTIFFWriter(struct V_Buffer *, struct V_Offscreen *);	void	dTIFFWriter(void);		/* DrawImage() is the same as the default */	int		WriteImage(struct TranslatorPreference *);		/* private routines */	void	WriteHeader(void);	int		WritePixels(void);	void	WriteTagsDirectory(void);	/* the really private routines.  Do not disturb */	void	WriteIntel(void);	void	WriteMotorolla(void);	void	MakeIFDEntry(char *, unsigned short, unsigned short, ULong, ULong);#if WINDOWS/* this #def inverted because of the mounds of memory the mac routines take */	int		WritePixelsDIBColor(struct BaseCompressor *);	int		WritePixelsDIBGrayscale(struct BaseCompressor *);	int		WritePixelsDIBBilevel(struct BaseCompressor *);#elif MACINTOSH	int		WritePixels32RGB(struct BaseCompressor *);	int		WritePixels16RGB(struct BaseCompressor *);	int		WritePixels8RGB(struct BaseCompressor *);	int		WritePixels32Grayscale(struct BaseCompressor *);	int		WritePixels16Grayscale(struct BaseCompressor *);	int		WritePixels8Grayscale(struct BaseCompressor *);	int		WritePixels8Bilevel(struct BaseCompressor *);	int		WritePixels1Bilevel(struct BaseCompressor *);#endif  // MACINTOSH};/* class declarations first, then the many constants */#define MAX_SAMPLES_PER_PIXEL	3	/* this is needed in the class decl */struct TIFFReader:ImageReader {	unsigned short	IFDSize;	ULong	IFDPosition, LengthOfStrip;	unsigned int 	compression, rowsPerStrip, Prediction;	int				imageDepth, screenDepth,bitsPerSample[MAX_SAMPLES_PER_PIXEL];	Rect			rect;	struct V_Array	*stripOffsets;	struct V_Array	*stripLengths;	struct V_Array	*colorMap;	struct V_Array	*colorResponseCurves;	int		cTIFFReader(struct V_Buffer *);	void	dTIFFReader(void);	int		ReadImage(int);	/* local, private routines */	int		ReadHeader(void);	int		ReadTagsDirectory(void);	struct BaseUncompressor		*MakePixelReader(void);	struct ColorConverterBase	*MakePixelConverter(int);	void	InterpIFDEntry(char *,unsigned short *, unsigned short *, ULong *, ULong *);	int		HorizontalDiff(char *, long, long, int);		int		ReadPixels(struct BaseUncompressor *, struct ColorConverterBase *);};#endif // VWT#endif // TIFF_HEADER_