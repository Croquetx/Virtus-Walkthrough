#ifndef TIFF_CONSTANT_AND_MACROS_#define TIFF_CONSTANT_AND_MACROS_#include "VTYPES.H"#if VWT /* jca 17 Sept 93.  Not in VR { */// PRO-JAP moved strings to AppText.h/* some useful macros, to speed up life *//* if next entry would cause the buffer to overflow, empty it */#define EmptyBufferIfNecessary(b, max, siz, update, incr)	\	if (siz + incr >= max) \		{	\		file->IOData(b, siz);	\		update += siz; \		siz = 0;	\		}/* constants */#define IFDENTRY_SIZE		12		/* size of an Image File Directory Entry */#define CHARBITS  			8		/* num bits in a char */#define SHORTBITS			16 		/* num bits in a short */#define BITDEPTH			32		/* desired frame buffer depth */#define MAX_SIZE			256#define TIFF_RECOMMENDED_BUFFER_SIZE	8192#define MAX_TABLE_SIZE		4096#define CODE_BUF_SIZE		256		/* size of output buffer */#define ENCODED_BUF_SIZE	(CODE_BUF_SIZE * 3)/2 + 1	/* 1.5 * CODE_BUF_SIZE */#define EMPTY				8192#define SAVE_LEFTOVERS		1#define HASH_TABLE_SIZE		8191#define	REHASH_TABLE_SIZE	10#define RED_SAMPLE			0	/* constants for the bitsPerSample table */#define GREEN_SAMPLE		1#define BLUE_SAMPLE			2#define SINGLE_SAMPLE		RED_SAMPLE#define NO_PREDICTION			1	/* prediction/compression stuff */#define HORIZONTAL_DIFF			2#define NO_COMPRESSION			1#define CCITT_COMPRESSION 		2#define LZW_COMPRESSION			5#define PACKBITS_COMPRESSION	32773/* bit flags */#define	INTEL_BASED			0x1			/* The "other" machine's type */#define MOTOROLA_BASED		0x2	#define BILEVEL				0x10		/* color options */#define GRAYSCALE 			0x20#define PALETTE_COLOR		0x40#define RGB_COLOR			0x80#define NASTY_PLANAR_CONFIG	0x100		/* each pixel is an index to an r table, a g table, and a b table, rather than an rgb entry */#define VARIABLE_BITS		0x200		/* the number of bits per sample is not 8,8,8 for rgb */#define INVERTED			0x400		/* invert the b+w image */#define COLOR_CORRECTION	0x800#define BYTE_SWAP			0x1000		/* do we byte-swap? */#define COMPRESS			0x2000		/* compression ? */#define BIG_ENDIAN			0x4000		/* byte arrangement on this machine */#define LITTLE_ENDIAN 		0x8000/* these should be inline functions */#define	CONVERT_INT_TO_CHAR(from, to, type)	\	{ char	*citmp; citmp = (char *) &from; if (flags & BYTE_SWAP) { 	\	if (type == TIFFSHORT) { to[0] = citmp[1]; to[1] = citmp[0]; } \	else if (type == TIFFLONG) {to[0] = citmp[3]; to[1] = citmp[2]; \	to[2] = citmp[1]; to[3] = citmp[0];}} \	else { if (type == TIFFSHORT) { to[0] = citmp[0]; to[1] = citmp[1]; } \	else if (type == TIFFLONG) { to[0] = citmp[0]; to[1] = citmp[1]; \	to[2] = citmp[2]; to[3] = citmp[3]; }}}#define	CONVERT_LONG_TO_CHAR(from, to)	\	{ char	*citmp; citmp = (char *) &from; if (flags & BYTE_SWAP) { 	\	to[0] = citmp[3]; to[1] = citmp[2]; \	to[2] = citmp[1]; to[3] = citmp[0];} \	else { to[0] = citmp[0]; to[1] = citmp[1]; \	to[2] = citmp[2]; to[3] = citmp[3]; }}#define	CONVERT_SHORT_TO_CHAR(from, to)	\	{ char	*citmp; citmp = (char *) &from; if (flags & BYTE_SWAP) { 	\	to[0] = citmp[1]; to[1] = citmp[0]; } \	else {  to[0] = citmp[0]; to[1] = citmp[1]; }}#define	CONVERT_CHAR_TO_INT(to, from, type)	\	{ char	*cctmp; cctmp = (char *) &to; if (flags & BYTE_SWAP) { \	if (type == TIFFSHORT) { cctmp[0] = from[1]; cctmp[1] = from[0]; } \	else if (type == TIFFLONG) { cctmp[0] = from[3]; cctmp[1] = from[2]; \	cctmp[2] = from[1]; cctmp[3] = from[0]; }}\	else { if (type == TIFFSHORT) { cctmp[0] = from[0]; cctmp[1] = from[1]; } \	else if (type == TIFFLONG) { cctmp[0] = from[0]; \	cctmp[1] = from[1]; cctmp[2] = from[2]; cctmp[3] = from[3];}}}#define	CONVERT_CHAR_TO_LONG(to, from)	\	{ char	*cctmp; cctmp = (char *) &to; if (flags & BYTE_SWAP) { \	cctmp[0] = from[3]; cctmp[1] = from[2]; cctmp[2] = from[1]; \	cctmp[3] = from[0]; }	else { cctmp[0] = from[0]; \	cctmp[1] = from[1]; cctmp[2] = from[2]; cctmp[3] = from[3];}}#define	CONVERT_CHAR_TO_SHORT(to, from)	\	{ char	*cctmp; cctmp = (char *) &to; if (flags & BYTE_SWAP) { \	cctmp[0] = from[1]; cctmp[1] = from[0]; } \	else { cctmp[0] = from[0]; cctmp[1] = from[1]; }}#endif // VWT.  jca 17 Sept 93 }#endif