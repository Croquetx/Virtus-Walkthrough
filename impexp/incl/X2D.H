/*	X2D.H	26-NOV-1991	Copyright _ 1991 by Kandu Software Corporation.	All rights reserved.	Written by Ken Lathan	______________________________________________________________	Modification level 0 .. 26-NOV-1991	Modification level 1 .. 03-DEC-1991	Modification level 2 .. 09-DEC-1991		Changed Point2DFFixed into PointFFixed.		Removed file descriptor handle from definition of X2DPBRec.		Added ifdef to prevent multiple inclusion of header file	Modification level 3 .. 17-DEC-1991		Changed definition of X2DPBRec:		The color field was replaced by fillColor and edgeColor,		and a new field (bits) was added.	Modification level 4 .. 26-MAR-1992		Added X2DRuler definition		Added unit codes	______________________________________________________________*/#ifndef	_X2D_#define	_X2D_#include "DXFOUT.H"#if	DEF2D_WANTEDtypedef	struct	{	FFixed			x,y;}	PointFFixed;#endiftypedef	enum	fmt2d	{	pict,	dxf,	md2,	ccd2}	fmt2d;typedef	struct	X2DFile {	char			**buf_h;	long			count;	os_id			opSys;	color_mode		colorMode;	double			fdata[20];	long			ldata[8];}	X2DFile;#ifdef	GODZILLAtypedef	struct	X2DPBRec {	short			nrPoints;			/*	Number of points in face			*/	short			layerIndex;			/*	0 <= layerIndex < number of layers	*/	RGBColor		color;				/*	Color of entire object				*/	PointFFixed		*thePoints;			/*	Pointer to list of 2D vertices		*/	long			internal;			/*	Internal Use						*/	short			status;				/*	Info for caller						*/}	X2DPBRec;#elsetypedef	struct	X2DPBRec {	short			nrPoints;			/*	Number of points in face			*/	short			layerIndex;			/*	0 <= layerIndex < number of layers	*/	RGBColor		edgeColor;			/*	Color of object boundary			*/	RGBColor		fillColor;			/*	Color of object interior			*/	PointFFixed		*thePoints;			/*	Pointer to list of 2D vertices		*/	long			internal;			/*	Internal Use						*/	short			status;				/*	Info for caller						*/	long			bits;				/*	Flags set by caller					*/}	X2DPBRec;#endifX2DFile		**OpenX2D(fmt2d f, color_mode cm);int			CloseX2D(X2DFile ** h);int			DisposX2D(X2DFile ** h);int			X2DInitLayers(X2DFile ** h, int nrLayers);int			X2DLayerData(X2DFile ** h, char * name, RGBColor * color);int			X2DEndLayers(X2DFile ** h);int			X2DPolygon(X2DFile ** h, X2DPBRec * pb);int			X2DEnd(X2DFile ** h);int			X2DGetData(X2DFile ** h, void ** buf, long * howmuch);int			X2DGetRsrc(X2DFile ** h, long * type, int * id, long * size, void ** theData);int			X2DRuler(short *unitCode, double *UnitSizeInMeters);	/*	MOD4 920326	*/#ifndef	__2DRULERS__#define	__2DRULERS__#define	RULER_MM		1#define	RULER_CM		2#define	RULER_METER		3#define	RULER_KM		4#define	RULER_MIL		5#define	RULER_POINT		6#define	RULER_PICA		7#define	RULER_INCH		8#define	RULER_FOOT		9#define	RULER_MILE		10#endif#endif