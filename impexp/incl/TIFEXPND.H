#ifndef TIFF_PIXEL_EXPANDER_#define TIFF_PIXEL_EXPANDER_#include "VTYPES.H"#if VWT /* jca 17 Sept 93. Not in VR { */#include "TIFCompr.h"/* a TIFFPixelExpander is somewhat like the old Charles Atlas chest expanderdevices:  it takes a small, compressed, weak-chested-98-pound weakling and(by applying the device) turns it into a standard-sized, uniform strip of 8-bit values.  *//* The data structures are identical, so just make the complex and destructors into macros */#define dTIFFExpander1()				dTIFFExpander()#define dTIFFExpander4()				dTIFFExpander()#define dTIFFExpander8()				dTIFFExpander()struct TIFFExpander:indirect {	BaseUncompressor	*reader;	V_Array				*compacted;	/* pixel buffer passed to BaseUncompressor */	int					flags;	long				width, bufPos;	long				count, when;	V_Array				*cMap, *correction;		int					cTIFFExpander(BaseUncompressor *, long, int, V_Array *, V_Array *);	void				dTIFFExpander(void);	virtual long		ExpandCodes(V_Array *, long, long, long);};struct TIFFExpander1 : TIFFExpander {	int					cTIFFExpander1(BaseUncompressor *, long, int, V_Array *, V_Array *);	long				ExpandCodes(V_Array *, long, long, long);};struct TIFFExpander4 : TIFFExpander {	int					cTIFFExpander4(BaseUncompressor *, long, int, V_Array *, V_Array *);	long				ExpandCodes(V_Array *, long, long, long);};struct TIFFExpander8 : TIFFExpander {	int					cTIFFExpander8(BaseUncompressor *, long, int, V_Array *, V_Array *);	long				ExpandCodes(V_Array *, long, long, long);};/*struct TIFFExpanderChar : TIFFExpander {	int					cTIFFExpanderChar(Uncompressor *, long, int, V_Array *, V_Array *);	int					ExpandCodes(V_Array *, long, long, long);};struct TIFFExpanderShort : TIFFExpander {	int					cTIFFExpanderShort(Uncompressor *, long, int, V_Array *, V_Array *);	int					ExpandCodes(V_Array *, long, long, long);};struct TIFFExpanderLong : TIFFExpander {	int					cTIFFExpanderLong(Uncompressor *, long, int, V_Array *, V_Array *);	int					ExpandCodes(V_Array *, long, long, long);};*/#endif // VWT#endif