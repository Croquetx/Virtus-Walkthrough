#ifndef AUTODESK_ANIMATOR#define AUTODESK_ANIMATOR#include "VTypes.h"#include "WalkMovi.h"// this is what a skip packet for the FLI_SS2 Word-Align Delta Compression// stype is like.typedef struct {	UChar	skip;	char	typeCount;    UShort	data;	} aaWordDiffPacket;struct AnimatorMovie:WalkMovie {	unsigned int 		chunkCount;	int					flc, grayScale;	ULong				fileStart;	struct fli_head 	*flcHeader;#if WINDOWS	struct V_Offscreen 	*screen0, *screen1;	struct V_Offscreen 	*currFrame, *prevFrame;	Handle				currHeader, prevHeader, currStrip, prevStrip;	long				stripsPerSegment;#endif	int		cWalkMovie(TranslatorPreference *, V_Buffer *);	void	dWalkMovie(void);	/* standard public movie routines */	int	BeginMovie(Rect *, long, long);	int AnimateMovie(struct V_Pane *, struct Observer *);	int	WriteMovieFrame(struct V_Offscreen *);	int	EndMovie(void);	/* protected member */	int	WriteFirstMovieFrame(struct V_Pane *, struct V_Offscreen *);	/* internal, private routines.  Call from outside    on pain of death _only_ */	void EmergencyCleanUp(int);	Point	CalcAspectRatio(void);	int CreateHeader(void);	int WriteHeader(void);#if WINDOWS	int WriteCompletePalette(BITMAPINFO *);	int WriteChangedPalette(BITMAPINFO *, BITMAPINFO *);#endif	int	ByteDiffFar(short *, short *, long, char *, char *);	int	WordDiffFar(short *, short *, long, char *, char *);	int	ByteCompressFar(int, long, long, char *);	int	WordCompressFar(long, long, short *);	int	NoCompress(long, char *);#if 0	int	WritePostageStamp(struct V_Offscreen *, int);#endif};	// PRO-JAP moved some strings#define SEGMENT_SIZE	65000	// leave some room for allocation junk#define COPY_STATE		0x2#define REPLICATE_STATE	0x1#define UNDECIDED_STATE	0#define DIFF_STATE		1#define SAME_STATE		2#define BRUN			0#define BDELTA			1#define	MILLISECS		1000#define JIFFIES			70#define LINESKIP		0xC000#define LASTPIXEL		0x8000#define AA_CREATOR		0x42494C46	// 'BILF', which is FLIB in Intel order#define AA_OK			0x0003		// the all-ok flag set after we write the ring frame#define	ANIMATOR_MAX_FRAMES 	4000#define PIXEL_BUFFER_LENGTH 	(((r.right - r.left) + 0x3) & ~0x3)#define UpdateFileSize(s) 	flcHeader->size = s;#define EQUAL(c1,c2) \(((c1.rgbRed == c2.rgbRed) && (c1.rgbGreen == c2.rgbGreen)) && (c1.rgbBlue == c2.rgbBlue))#endif