#ifndef WALK_MOVIE#define WALK_MOVIE#include "VTypes.h"/* WalkMovie is the virtual base class of a movie/animation type.All routines return 0 for success; the caller is responsible forchecking the return types and not calling subsequent movie routines.	BeginMovie initializes any internal variables the movie needs		and writes out the appropriate header for the movie file.		It is passed the frame dimensions, bit depth, and the number        frames to render.	AnimateMovie does the actual animations.  It is passed an Observer, which		contains a V_Array of position and view points.  The movie has control		over the rendering and can do what is appropriate to the format		with regard to changing the palette, rendering frames in the		right order, and so on.  Any animation event timeline should be		passed in as a parameter (when such things become available).	WriteMovieFrame is passed an offscreen which it writes in the manner		appropriate to the format.  WriteFrame is written to be callable		from the outside (though it is highly preferable that does not happen!)		in case somebody needs direct control over animating the frames.	EndMovie does cleanup on the animation: updates the file, writes		any tail info (but does not close the file -- which is done by		the opener -- or cleanup any movie data structures -- which is        done by the deconstructor or AnimateFrames).*/struct WalkMovie:indirect {	struct V_Buffer *movieBuffer;	Rect 			r;	long 			nFrames, framesPerSecond;	int	 			depth, err;	virtual int		cWalkMovie(struct TranslatorPreference *, struct V_Buffer *);	virtual void	dWalkMovie(void);	virtual int		BeginMovie(Rect *, long, long);	virtual int 	AnimateMovie(struct V_Pane *, struct Observer *);	virtual int 	WriteMovieFrame(struct V_Offscreen *);	virtual int		EndMovie(void);};/* define an 8-bit deep rgb triplet for use with animationformats (since they often use 8-bit deep planes */struct RGB8BitColor {	unsigned char	red, green, blue;};extern char *WrongFrameRate;extern char *NFramesRemaining;#endif