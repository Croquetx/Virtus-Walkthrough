/*------------------------------------------------------------------------------ * Virtus WalkThrough_ * Version 1.1.1 * * Copyright _ 1990-1992 by Virtus Corporation * All Rights Reserved * Written by  	 *				David W. Easter *				 * Virtus Corporation * Suite 204 * 117 Edinburgh South * Cary, North Carolina    27511 * (919) 467-9700 *------------------------------------------------------------------------------ * Source File:  * Notes:  * History:  *------------------------------------------------------------------------------ */#include "VTypes.h"#include "ExpArray.h"#include "Export.h"intExportArray::cArray(long ln,long sz,long blk)         // ABD MERGE-BUG2	{ 	int err;		err = V_Array::cArray(ln, sz, blk);	export = NULL;	type = (ExportObject)0;   // MSVC is pretty finicky...		return(err);	}voidExportArray::SetExport(ModelExport *exp)	{	export = exp;	}voidExportArray::SetObject(ExportObject obj)	{	type = obj;	}#define polyA (*(struct Polyhedron **)a)#define polyB (*(struct Polyhedron **)b)#define surfA (*(struct Surface **)a)#define surfB (*(struct Surface **)b)#define featA (*(struct SurfFeature **)a)#define featB (*(struct SurfFeature **)b)intExportArray::Compare(void *a, void *b)	{	switch (type)		{		case expPolyhedron: return(export->ComparePoly(polyA, polyB)); break;		case expSurface: return(export->CompareSurf(surfA, surfB)); break;		case expFeature: return(export->CompareFeat(featA, featB)); break;		}	return(0);	}