/*------------------------------------------------------------------------------ * Virtus WalkThrough_ * Version 1.1.1 * * Copyright _ 1990-1992 by Virtus Corporation * All Rights Reserved * Written by   *				David W. Easter *				 * Virtus Corporation * Suite 204 * 117 Edinburgh South * Cary, North Carolina    27511 * (919) 467-9700 *------------------------------------------------------------------------------ * Source File:  * Notes:  * History:  *------------------------------------------------------------------------------ */#include "VTypes.h"#if VWT// jca 17 Spet 93.  No dxf in VR {#if THINK_C			// PRO25#error don't use this file#else#include "XDXF3D-PPC.h"#include "XDXF2D-PPC.h"#endif#include "WalkBuff.h"#include "VArray.h"voidExport_DXF2D::cExport()	{	Export_DXF3D::cExport();	this->dxf_geometry = poly2d;	extrude = FALSE;	surfVisible = FALSE;	}voidExport_DXF2D::Options2D(int os, int clr, Point3DFFixed v)	{	osMode = os;	colorMode = clr;	SetView(v);	}intExport_DXF2D::OpenSurface(V_Array *pointRefs, RGBAColor color, Point3DFFixed normal)	{	int err = 0;	surfVisible = Visible(normal);	if (surfVisible)		err = Export_DXF3D::OpenSurface(pointRefs, color, normal);	return(err);	}intExport_DXF2D::CloseSurface()	{	int err = 0;	if (surfVisible)		err = Export_DXF3D::CloseSurface();	return(err);	}intExport_DXF2D::OpenFeature(V_Array *points, RGBAColor color, int where, int connected)	{	int err = 0;	if (surfVisible)		err = Export_DXF3D::OpenFeature(points, color, where, connected);	return(err);	}intExport_DXF2D::CloseFeature()	{	int err = 0;	if (surfVisible)		err = Export_DXF3D::CloseFeature();	return(err);	}voidExport_DXF2D::Transform(void *in, void *out)	{	Point3DFFixed *pIn = (Point3DFFixed*)in, *pOut = (Point3DFFixed*)out;	*pOut = Translate(*pIn);	}// jca 17 Sept 93 }#endif // VWT