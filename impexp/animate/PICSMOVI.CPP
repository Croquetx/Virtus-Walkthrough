/*------------------------------------------------------------------------------ * Virtus WalkThrough_ * Version 1.1.1 * * Copyright _ 1990-1992 by Virtus Corporation * All Rights Reserved * Written by  	John C. Alspaugh * * Virtus Corporation * Suite 204 * 117 Edinburgh South * Cary, North Carolina    27511 * (919) 467-9700 *------------------------------------------------------------------------------ * Source File:  * Notes:  * History:  * Platform: 	 *				WINDOWS		 *------------------------------------------------------------------------------ */#include "VTypes.h"#include "VIO.h"#include "VPane.h"#include "VGraphic.h"#include "VArray.h"#include "VDialog.h"#include "VGUtil.h"#include "VMemutil.h"#include "Clip.h"#include "VFile.h"#include "AppDeflt.h"#include "AppText.h"#include "View.h"#include "observer.h"#include "PICSMovi.h"#include <stdio.h>intPICSMovie::cWalkMovie(TranslatorPreference *transPref, V_Buffer *buffer){	movieBuffer = buffer;	err = 0;	return(err);}voidPICSMovie::dWalkMovie(){	delete(this);}intPICSMovie::BeginMovie(Rect *rect, long bitDepth, long frames){	Rect   nRect;	r = *rect;	nRect = *rect;	depth = bitDepth;	nFrames = frames;	frame = new(V_Picture);	frame->cPicture(TRUE);	frame->PutRect(&nRect);	frame->SetDepth(bitDepth);	return(err);}intPICSMovie::AnimateMovie(struct V_Pane *window, struct Observer *eye){	char	str[256];	if (err)	return(err);	/* meter */	sprintf(str,NFramesRemaining,nFrames);	MeterSetCountTitle(str);	for (frameCount = 0; (!err) && frameCount < nFrames; frameCount++)		{		sprintf(str,NFramesRemaining,nFrames-frameCount);		MeterSetCountTitle(str);		eye->SetFrame(frameCount);		err = err ? err : window->VOutput(frame);		err = err ? err : WriteMovieFrame((V_Offscreen *) frame);		MeterSetCount(frameCount);      /* handle the meter */		err = err ? err : MeterUpdate(0);		}	sprintf(str,NFramesRemaining,0);	MeterSetCountTitle(str);	MeterSetCount(frameCount);      /* handle the meter */	MeterUpdate(0);	return(err);}intPICSMovie::WriteMovieFrame(V_Offscreen *newFrame){	if (err)	return(err);	err = ((V_Picture *)newFrame)->IOResource((V_File*)movieBuffer,128+frameCount,NULL);	return(err);}intPICSMovie::EndMovie(){	frame->dPicture();	return(err);}