/*------------------------------------------------------------------------------ * Virtus WalkThrough_ * Version 1.1.1 * * Copyright _ 1990-1992 by Virtus Corporation * All Rights Reserved * Written by  	 *				David W. Easter *				 * Virtus Corporation * Suite 204 * 117 Edinburgh South * Cary, North Carolina    27511 * (919) 467-9700 *------------------------------------------------------------------------------ * Source File:  * Notes:  * History:  *------------------------------------------------------------------------------ */#include "VTypes.h"#include "Drawing.h"#include "Polyhdrn.h"#include <stddef.h>#include <math.h>/* *	Possible optimizations: *		when clipping, only compute clip point once per shared line *		use div table when computing clip *		don't calculate clip when object is far enough away that drawing is fast * *	Look into using longs during calculations to allow for points > 32K apart. *//* *	Drawing constructor/destructor methods. */voidWalkDrawing::cWalkDrawing(struct WalkController *cntr)	{	control = cntr;		sequence = 1;	polyhedron = NewPolyhedron();	polyhedron->cPolyhedron(this);	polyhedron->CreateRoot();	}voidWalkDrawing::dWalkDrawing()	{	polyhedron->dPolyhedron();	delete(this);	}voidWalkDrawing::Sequence()	{	if (++sequence == 0)		sequence++;	}Polyhedron *WalkDrawing::NewPolyhedron()	{	return(new(Polyhedron));	}