#ifndef CAVOBJECT#define CAVOBJECT#include "WTypes.h"#define IN_DEF_VIEW		0x001#define OUT_DEF_VIEW	0x002#define ROTATE_OUT_VIEW	0x004typedef struct DisplayInfo	{	struct V_Array	*posnPoints;	struct LayerItem *layer;	struct V_Array  		*pieces;	struct PolyConvex		*piece;	struct CAVEnvironment	*environment;#if MACINTOSH	struct V_Picture		*picture;#elif WINDOWS	struct V_Offscreen		*picture;#endif	RGBColor		color;	Point3DFFixed	origin;	Angle3DFFixed 	orientation;	Point3D			posnBoundMin;	Point3D			posnBoundMax;	short			editType;	short			state;	short 			direction;	} DisplayInfo;struct CAVObject:indirect	{	struct V_Array		*outline;	/* index into world list describing the outline */	struct V_Array		*points;	/* scaled points 								*/	struct CAVEnvironment	*environment;	/* CAVEnvironment its in						*/	Rect		bounds;				/* world bounds									*/	PointLong	cmax,cmin;			/* scale points min and max 					*/		PointLong	origin;				/* scaled origin 								*/		short		dirty;				/* if it needs to be scaled or not				*/	short		editMode;			/* if it is editable in the side or full mode	*/	short		angle;		void 	cCAVObject(void);	void 	dCAVObject(void);	void 	SetEnvironment(struct CAVEnvironment  *); 	void	SetDirty(int);	Point   GetAnchor(int,int);	void	Scale(struct DisplayInfo *);	void	Update(Point3D,Point3D);	void	Display(struct DisplayInfo	*);	void	DisplaySurface(struct PolyConvex *,PointLong *,PointLong,struct DisplayInfo *);	void	Select(struct DisplayInfo	*,int);	void	Hilite(int);	int		Find(struct V_Array *, struct PolyConvex *,PointLong *,int,int);	int		FindDetail(PointLong *,short *,short *,int);	int		FindConvexSurface(struct PolyConvex *,PointLong *,PointLong *,int);	void 	RotatePolyhedron(Point,FFixed);		void	MoveOutline(Point);	int 	BreakLine(Point,int,int);	int 	MovePolyhedronPoint(Point,long,int);	int 	MovePolyhedronLine(Point,FFixed,int,int,long);	void 	MoveRectanglePoint(Point,FFixed,int);	void 	MoveRectangleLine(Point,FFixed,int);	void 	MoveRegPoint(Point,FFixed,int,int);	void 	MoveRegLine(Point,int,int);	void 	MakeOutl(struct V_Array *,int,int,int,int,int,FFixed,FFixed);	FFixed 	Translate2Outline(Point3DFFixed,int,int);	int 	ScalePolyhedronPoint(Point,PointFFixed,long);	};#endif //CAVOBJECT