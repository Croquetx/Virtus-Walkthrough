#ifndef LIGHT#define LIGHT#include "WTypes.h"#include "VArray.h"/* DWE *//* Values for 'type' (for IO) */#define LIGHT_AMBIENT			1#define LIGHT_INFINITE			2#define LIGHT_POINT				3/* Definitions for light source functions */#define DRAW_KEEPSOURCE			0x01#define DRAW_KEEPCOLOR			0x02#define DRAW_KEEPACTIVE			0x04/* DWE */struct LightModel:V_Array	{		/* --- */		void cLightModel(void);	void dLightModel(void);		void Copy(struct LightModel * );		int AddLight(struct Light *);	int RemoveLight(struct Light *);	struct Light * GetLight(int);		RGBColor CalcShade(RGBColor, Point3D);	FFixed CalcShadeLevel(int max_levels, Point3D normal);	// MERGE-GOURAUD // ABD MERGE-TEXTURE 9/13/93	int IO(struct V_Buffer *);	int IO_ELGT(struct V_Buffer *);	int IO_LGHT06(struct V_Buffer *);	};/* DWE */struct Light:V_IO	{	Point3D source;				/* where the light is */	RGBColor color;				/* what color it emits */	short brightness;			/* intensity of light source */	short active;				/* is the light shining? */		/* --- */		struct Light * cLight(void);	void dLight(void);		struct Light * Copy(void);		void SetSource(int x, int y, int z);	void SetAmbient(void);	void SetColor(RGBColor rgb);	void SetShade(int s);	void SetBrightness(int b);	void Activate(int a);	int Ambient(void);	int IO(struct V_Buffer *);	int IO_ELGT(struct V_Buffer *);int IO_LGHT06(struct V_Buffer *);	};#endif //LIGHT