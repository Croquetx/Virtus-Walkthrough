#ifndef SURFFEATURE#define SURFFEATURE#include "WTypes.h"#include "VIO.h"#define FEAT_INVALID		10		/* Invalid or incomplete data */#define FEAT_MTV			-119	/* DigiVideo TV hack */#define FEAT_POLY			6struct SurfFeature:V_IO	{	struct SurfDef *surfDef;	int type;	struct V_Array *name;	struct V_Array *data;	// ABD MERGE-TEXTURE 9/13/93 [[[	struct V_Array *rawTexturePoints;	// ABD TEXTURE raw texture points	struct V_Array *rendTexturePoints;	// ABD TEXTURE clipped texture points	struct TextureItem *texture;		// ABD TEXTURE ptr to texture or NULL if none										// NEVER set texture directly; use SetTexture()	struct ShadeEntry *insideTextureShade;		// ABD TEXTURE texture shading array	struct ShadeEntry *outsideTextureShade;		// ABD TEXTURE texture shading array	struct V_Array *NoPerspPoints; /* (Point3DNoPersp) */		// JAM TEXTURE// ABD MERGE-TEXTURE 9/13/93 ]]]	short hidden;	/* definition data */	short editType;	struct V_Array *outline;	/* (PointFFixed) */	RGBColor color;	unsigned short opacity;	RGBColor insideShade;	RGBColor outsideShade;		/* positioning information */	struct Position *posn;	/* 3D data derived from definition */	struct V_Array *points;		/* (Point3DFFixed) */	struct V_Array *posnPoints;	/* (Point3DFFixed) */		/* data for 3D rendering */	short calculated;			/* set when this feature has been calculated in this frame */	char visible;				/* set when feature not outside of clip planes */	struct V_Array *rendPoints;	/* (Point3DFast) */		struct V_Array *featConnections[2];	// BILBIL - multiple surface connections	int	renderPoly[2];					// BILBIL - multiple surface connections		#if VRML_ANCHOR			// VRML-ABD 23JUN95	struct V_Array *vrml_anchor;	#endif // VRML_ANCHOR		/* --- */	virtual void cSurfFeature(void);	virtual void dSurfFeature(void);		void SetName(char *, int);	int GetName(char *, int);	struct V_Array *GetNameArray(void);	void SetData(char *, int);	int GetData(char *, int);	struct V_Array *GetDataArray(void);	void SetHidden(int);	int GetHidden(void);	void Create(struct V_Array *, PointFFixed);	void AddPoint(int, PointFFixed);	void RemovePoint(int);	void AddPoints(int);	void RemovePoints(int);// ABD MERGE-TEXTURE 9/13/93 [[[	void SetTexture(struct TextureItem *);				// ABD TEXTURE	void SetTextureIO(struct TextureItem *);				// ABD TEXTURE	void GetTextureInfo(struct V_Offscreen **, Rect *);				// ABD TEXTURE	struct TextureItem *GetTexture(void);				// ABD TEXTURE	void CalcTextureMapping(void);		// ABD TEXTURE	struct V_Array *GetRawTexturePoints(void);		// ABD TEXTURE	struct V_Array *GetRendTexturePoints(void);		// ABD TEXTURE// ABD MERGE-TEXTURE 9/13/93 ]]]// JAM bounding sphere for surf features fix 9/24/93 [[[/*JAM added for expanding bounding sphere based on surface features*/	void ExpandBound(Point3D *, Point3D *, int);// JAM bounding sphere for surf features fix 9/24/93 ]]]	void Move(PointFFixed);	void MoveTo(PointFFixed);	void Rotate(FFixed, PointFFixed);	void RotateTo(FFixed);	void Scale(PointFFixed, PointFFixed);	void ScaleTo(PointFFixed);	void MovePoint(int, PointFFixed);	void MoveLine(int, PointFFixed);		#if VRML_ANCHOR				// VRML-ABD 23JUN95	void SetVRMLAnchor(char *new_anchor);	struct V_Array * GetVRMLAnchor(void);	int HasVRMLAnchor(void);	int IO_VRAN(struct V_Buffer *buf);	#endif // VRML_ANCHOR	void ChangeUnit(FFixed);	void SetColor(RGBColor, unsigned short);	RGBColor GetColor(void);	unsigned short GetOpacity(void);		virtual void SetEditType(int);	int GetEditType(void);	virtual void Update(void);	void CalcShade(void);	void PositionX(void);	void PositionPoly(void);		int FeatValid(void); 		int IsFeatScaled(void);     	// jca 25MAR94 info funcs [[	int IsFeatRotated(void);    int CanSidesBeChanged(void);    // jca 25MAR94 ]]	void UpdateConnections(void);		// BILBIL - multiple surface connections	void AddConnection(int,int,int);	// BILBIL - multiple surface connections	void RemoveConnection(int,int,int);	// BILBIL - multiple surface connections		int Calc3D(struct View *, int);	void Draw3D(struct View *, struct Clip *, int, int, struct PolyConvex *, int,		struct V_Array *, struct V_Array *, struct PolyConvex *, int, struct Surface *,		int, RGBAColor);	// BILBIL new connection arguments	int IO(struct V_Buffer *);	int IO_NAME(struct V_Buffer *);	int IO_DATA(struct V_Buffer *);	int IO_COLR(struct V_Buffer *);	int IO_SFTX(struct V_Buffer *);		// ABD MERGE-TEXTURE 9/13/93	int IO_POLY(struct V_Buffer *);	void GetTextureName(char *name);		// PRO25	V_Array *surfFeat3dVerts();	};#endif //SURFFEATURE