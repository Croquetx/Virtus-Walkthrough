#ifndef CAV_SURFFEATURE#define CAV_SURFFEATURE#include "SurfFeat.h"struct CAVSurfFeature:SurfFeature	{	struct V_Array 		*CAVlist;	struct V_Array 		*localOutline;	struct LayerItem	*layer;	struct SurfObject	*surfFeatureObject;#if MACINTOSH	struct V_Picture 	*picture;#elif WINDOWS	struct V_Offscreen 	*picture;#endif	char	editState;		void cSurfFeature(void);	void dSurfFeature(void);	void Update(void);	void SetEditType(int);	void SetDirty(int);	void SetLayer(struct LayerItem	*);	void DisplayFeature(struct DisplayInfo *);	void AddCAVCtrl(struct CAVEnvironment *);	void RemoveCAVCtrl(struct CAVEnvironment *);	void SetEditState(int);	int  GetEditState(void);		void	CalcOutline(PointFFixed*,PointFFixed*);	void	Extrema(PointFFixed*,PointFFixed*);	void	cSurfObject(struct CAVEnvironment *); 	void	dSurfObject(void); 	void	Display(void);	void	Select(void);	int		SelectRect(Rect*,int);	struct CAVSurfFeature	*Find(Point *, PointFFixed *,long, int,int);	void	SetMode(int);	int		GetMode(void);	void	SetSide(int);	int		GetSide(void);	Point	GetAnchor(int);	int		GetMark(void);		#if VRML_ANCHOR		// PRO25	CAVSurfFeature *FindNoSideEffects(Point *p,PointFFixed *wPt,long modifiers,int detailed,int findMode); 	#endif // VRML_ANCHOR		int		ScaleSurf(Point,PointFFixed,long);	int		BreakLine(Point,long);	int		MoveSurf(Point,Point,FFixed,long);	int		RotateSurf(Point,FFixed,long);	int		NewMove(PointFFixed);	int		NewMoveCorner(PointFFixed,int);	int		NewMoveSide(PointFFixed,int);	int		NewAddPoint(PointFFixed,int);	int		NewRemovePoint(PointFFixed*,int);	int		NewOutline(PointFFixed,int);	int		Export(struct ModelExport *, int, int);#if MACINTOSH	int		SetPicture(struct V_Picture *);#elif WINDOWS	int		SetPicture(struct V_Offscreen *);#endif	};#endif //CAV_SURFFEATURE