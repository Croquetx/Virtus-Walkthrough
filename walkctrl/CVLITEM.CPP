/*------------------------------------------------------------------------------ * Virtus WalkThrough_ * Version 1.1.1 * * Copyright _ 1990-1992 by Virtus Corporation * All Rights Reserved * Written by   *				 *				Mark J. Uland * Virtus Corporation * Suite 204 * 117 Edinburgh South * Cary, North Carolina    27511 * (919) 467-9700 *------------------------------------------------------------------------------ * Source File:  * Notes:  * History:  * Platform: 	MACINTOSH 	X *				WINDOWS		X *------------------------------------------------------------------------------ */ #include "VTypes.h"#include "CVLItem.h"#include "CadCntrl.h"#include "WalkBuff.h" /* DWE */#include "Misc.h" /* DWE */#include "AppText.h"#include "VGraphic.h"#include "VGUtil.h"#include "VMemUtil.h"#include <stdio.h>#include <string.h>#define TEXT_START	8void LayerItem::cListItem(char *str)	{	controller = NULL;	flagState = FEATURE_LAYER|RENDER_LAYER|COLOR_LAYER;	color = vBlack;	strcpy(name,str);	}	void LayerItem::SetController(Controller *cntrl) { controller = cntrl; }		void LayerItem::SetID(int id) { layerID = id; }	void LayerItem::GetName(char *str) { strcpy(str,name); }void LayerItem::SetColor(RGBColor col) { color = col; }int  LayerItem::GetFlag() { return flagState; }void LayerItem::SetFlag(int type,int state) 	{ 	if(state)flagState|=type;	else flagState&=~type;	}	void LayerItem::Display()	{	Rect	r;	Point	p;	int		inColor,i;		inColor = FindDepth();	if(inColor < 4)inColor = FALSE;	if(inColor) VForeColor(&color); else  VSetPattern(vPatBlack);	r.left = 0;	r.right = TEXT_START;	r.bottom = location;	r.top = location - GetHeight(); 	if(LOCK_LAYER&flagState) VSetPattern(vPatGray); else VSetPattern(vPatBlack);	if(HIDE_LAYER&flagState) VFrameRect(&r);	else {if(inColor)VPaintRect(&r);else VFillRect(&r); }	if(!(RENDER_LAYER&flagState))		{		VSetPattern(vPatBlack);		r.left+=2;r.top+=2;r.right-=2;r.bottom-=2;		VForeColor(&vWhite);		VPaintRect(&r);		VForeColor(&vBlack);		VFrameRect(&r);		}			VForeColor(&vBlack);	VSetPattern(vPatBlack);	#if MACINTOSH	r.left=r.right+2;r.bottom-=2;r.top=r.bottom-vMediumFont;#elif WINDOWS	r.left=r.right+2;r.bottom=r.top+vMediumFont;  // jca 29MAR94 this leaves space for descending letters, like 'g' and 'y'#endif // MACINTOSH#if JAPANESE   // for japanese layer names    jca 18APR95 pro 201J	TextSetUp(vAppFont,vMediumFont,vNormal);#else	TextSetUp(vMonacoFont,vMediumFont,vNormal);#endif // JAPANESE	VDrawText(name,0,strlen(name),&r);	TextSetUp(vSystemFont,vSystemFontSize,vNormal);	}			void LayerItem::GetRect(Rect *r)	{	r->top = location - GetHeight();	r->bottom = location;	r->left = TEXT_START;	}	int  LayerItem::IO(V_Buffer *buffer)	{	int		err;	short	flags;	ObjLock((ObjectHandle)this);		if (buffer->IODirection() == DATA_OUT)		{		flags = 0;				if (!(flagState & COLOR_LAYER)) flags |= 0x0001;		if (!(flagState & LOCK_LAYER)) flags |= 0x0002;		if (!(flagState & HIDE_LAYER)) flags |= 0x0004;		if (flagState & FEATURE_LAYER) flags |= 0x0008;		if (!(flagState & RENDER_LAYER)) flags |= 0x0010;		}	IOType(buffer, name, IO_CSTR);	IOType(buffer, &color, IO_RGB_COLOR);	buffer->IOType(&flags, IO_SHORT);	if (buffer->IODirection() == DATA_IN)		{		flagState = 0;#if VWT// DAS-VR 9/6/93		if (!(flags & 0x0001)) flagState |= COLOR_LAYER;		if (!(flags & 0x0002)) flagState |= LOCK_LAYER;		if (!(flags & 0x0004)) flagState |= HIDE_LAYER;		if (flags & 0x0008) flagState |= FEATURE_LAYER;		if (!(flags & 0x0010)) flagState |= RENDER_LAYER;#elif VR	flagState |= RENDER_LAYER;	flagState |= COLOR_LAYER;	flagState |= FEATURE_LAYER;	// BILBIL - render surface features in design view 3/27/94#endif		}	ObjUnlock((ObjectHandle)this);	}