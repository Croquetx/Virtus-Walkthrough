#ifndef LIGHT_PANE#define LIGHT_PANE#include "SpacPane.h"#include "VMenu.h"struct LightPane:SpacePane	{	struct Controller *controller;	struct MenuLight  *menu;	struct Polyhedron *lampPolyhedron;	struct CAVTumbleObject	*lamp;	struct Space *cubeSpace;	struct Space *lampSpace;	Point oldPoint;	struct LightModel *lights;	struct Light *light;	struct WalkDrawing *drawing;	struct WalkDrawing *nirvana;	int lampVisible;	int subject;	int ambient;	RGBColor backColor;	int polyinit;	FFixed lampScale;	/* --- */		void cPane(int);	void dPane(void);	void Display(int,int,int);	void CalcSize(Rect *,Point *,int,int);		void SizeNotify(void);	void Track(Point,long,int);	void MouseDown(Point,long);	int GetAction(long,long);	void TrackHelp(Point,long modifier);// DAS-VWINDOWS 9/30/93		void UpdateSource(void);	void SetController(struct Controller *);	void ShowLamp(int flag);	void InstallLight(struct Light *);	void SetColor(void);	void SetPin(int newpin);	void MakeLamp(void);	void SetPolyhedron(struct Polyhedron *);	};enum menuLight{	menuLightApply = 1,	menuLightRevert,	menuLightAdd = menuLightRevert+2,	menuLightRemove	};#if !SPANISH			// ABD-PRO25	 #define menuLightApplyKeyPos		1	 #define menuLightRemoveKeyPos		1#endif // !SPANISH#define menuLightEuroKey		'L'#define menuLightApplyEuroKey	'A'#define menuListRevertEuroKey	'R'#define menuLightAddEuroKey		'N'#define menuLightRemoveEuroKey	'D'struct MenuLight:V_Menu	{		void ctheMenu(void);	void dtheMenu(void);	void Action(int, long);	};#endif //LIGHT_PANE