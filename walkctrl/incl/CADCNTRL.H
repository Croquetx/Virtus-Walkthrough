#ifndef CAD_CONTROLLER#define CAD_CONTROLLER#include "VTypes.h"#include "Cntrl.h"#include "WTypes.h"#define	POSITION_TRACK	0x01#define	POSITION_EDIT	0x02#define	TRACK_WORLD		0x01#define	TRACK_VIEW		0x02#define	UTILITY_SPOT	0		/* where is the utility pop up is *///#define	ALTSELECTOR_SPOT	1		/* where is the alternate selector pop up is *///#define	SELECTOR_SPOT	2		/* where is the selector tool is *///#define	REGULAR_SPOT	3		/* where is the regular pop up is *///#define	TOOL_SPOT		8		/* where is the tool pop up is */#define	ALTSELECTOR_SPOT	5		/* where is the alternate selector pop up is */#define	SELECTOR_SPOT	2		/* where is the selector tool is MERGE-GOURAUD-PRO */#define	REGULAR_SPOT	6		/* where is the regular pop up is MERGE-GOURAUD-PRO */#define	TOOL_SPOT		4		/* where is the tool pop up is MERGE-GOURAUD-PRO */enum editAxis{	trackX = 1,	trackY,	trackZ	};struct CadControl:Controller{	struct CAVPolyhedron	*polyhedron;	struct V_Console		*environmentConsole;		struct V_Console		*modifierConsole;		struct V_Console		*gouraud_modifierConsole;		// MERGE-GOURAUD	struct V_Console		*toolConsole;	struct TumbleAxis 		*tumbleAxis;	struct CadPosition		*position;	struct WalkList			*walkList;	struct CadButton		*zoom;	struct ColorSelect		*color;	struct UtilityToolButton *utilityTools;	struct SelectToolButton *selectTools;	struct RegPolyButton 	*regularPoly;	struct ModButton		*modifiers;	struct GouraudModButton		*gouraud_modifiers;		// MERGE-GOURAUD	struct ToolButton 		*toolSet;	struct CAVEnvironment	*environment;	struct CadDraft			*cadDraft;// { DAS-VR-VRTOOLS 8/15/93#if VWT	struct EmptyPane		*emptyPane;#elif VR	struct ExpandPane		*expandPane;	struct VRTools			*vrTools;	struct VRColor			*vrColor;	struct VRTexture		*vrTexture;		// ABD WILLIAMS MERGE12 9/12/93	struct TextureSelect	*vrTextureSelect;		// ABD MERGE13	struct VRTextureTitle   *textureTitle;	// ABD WILLIAMS MERGE16	struct VRFiller			*vrFiller;#endif// } DAS-VR-VRTOOLS 8/15/93	struct Ruler			*hRuler;	struct Ruler			*vRuler;	struct ToolButton		*tools;	struct V_Array			*guideLines;	short	zoomState,editTool,toggleSpot;	int		defaultRegSides,defaultLevels;		virtual void 	cController(V_Document *);	virtual void 	dController(void);	virtual void 	*cTool(struct Controller *ctrl,int);	virtual void	Activate(int);	virtual void	Request(void *,int,int,int);	virtual void 	GetPlace(Rect *,int,int);	virtual void	SetPreference(struct AppPreference *,int );/* NEW */	virtual void	ChangeView(int);/* NEW */	virtual void	OrientRuler(void); /* NEW */	virtual void 	SetScale(double,int);/* REWORKED */	virtual struct CadDraft		*NewDraft(void);	virtual void 	ControlMessage(int,long,int);	virtual void	InstallTools(void);	virtual struct TextureItem *GetTexture(void);			// ABD WILLIAMS MERGE-TEXTURE 9/13/93	virtual void	SetTexture(struct TextureItem *);		// ABD WILLIAMS MERGE-TEXTURE 9/13/93	virtual void	SetShadeType(unsigned char);			// ABD MERGE-GOURAUD#if VPRO//JAM TXTRFIDDLE 06/14/94 [[[	struct TextureBackPane *GetTextureBackPane(void);//JAM TXTRFIDDLE 06/14/94 ]]]		struct TextureList *GetTextureList(void);		// ABD VPRO#endif 	void 	SetPolyhedron(struct CAVPolyhedron *);	struct V_Window *GetWindow(int);	void	ResetPositionBox(long);	int 	GetEditTool(void);	int 	GetNumSides(void);	void 	SetPosition(short,double);	void 	SetTrackSet(struct TrackSet *);	void	Track(struct TrackData *);	void	ClearTrack(void);	void 	ZoomUser(int);	RGBColor	GetColor(void);	void	ColorDropper(RGBColor,struct TextureItem *);		// ABD WILLIAMS MERGE-TEXTURE 9/13/93	struct LayerItem *GetLayer(void);	int		CreateOK(void);	void	LaunchEditor(struct Polyhedron *,FFixed,struct SurfDef *,Point3DFFixed,int);		void	SetColor(RGBColor);	void	SetOpacity(long);	int 	GetShadeType(void);	// MERGE-GOURAUD		double	GetScale(void);	/* REWORKED */	int		UnitConversion(double);			PointFFixed	Constrain(Point*,FFixed*);/* NEW */	void	Push(int,int);/* NEW */	PointFFixed	SetOrigin(PointFFixed);/* NEW */	void	DrawGuide(int,int,int);/* NEW */	PointFFixed	GridUnit(void);/* NEW */	void	Display(int);/* NEW */	int 	GetOpacity(void);	void	SetTool(long,int);/* NEW */	void	SetPositionOrigin(void);/* NEW */	void	RulerTrack(struct TrackData *);/* dude */	void 	SetRulerValue(int,struct RulerItemDef *);	void 	SetGuideLines(void);	int		EditLayer(struct LayerItem *,int, int);	int 	ExportContents(struct V_Buffer *,int);	int 	IsAnythingSelected(void);	// jca 22MAR94 for use with the Edit menu.	int		CanBufferPaste(struct V_Buffer *);	// to tell the edit menu if we can paste the buffer stuff	ULong	SelectedConditions(void);   // jca 24MAR94 tells menus about the conditions of the selected items	};#define pcc(ptr) ((CadControl*)ptr)#endif //CAD_CONTROLLER