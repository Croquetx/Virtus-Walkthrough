#ifndef	POLY_UNDO#define	POLY_UNDO#include "WTypes.h"#include "UndoSpec.h"struct UPoly:EditSpec{	struct CAVPolyhedron *undoPolyhedron;	struct Polyhedron *container;	struct V_Array	*contents;	struct V_Array	*connections[3];	short  inheritFlag;	virtual void	cEditSpec(void);	virtual  void	dEditSpec(void);	virtual struct EditSpec *Clone(void);	virtual int	CleanUp(void);	virtual int	IO(struct V_Buffer *);		int		SetPolyhedron(struct CAVPolyhedron *);	struct  CAVPolyhedron *GetPolyhedron(void);	int		GetConnections(struct V_Array *a[3]);	int		SwapConnections(struct V_Array *a[3]);	int		SetContainer(struct Polyhedron	*);	void	InheritEdit(void);	void	SetInherit(int);	};struct UPolyInstall:UPoly{	int		Edit(void);	struct EditSpec *Clone(void);	};	struct UPolyType:UPoly{	short	editType;		int		SetEditType(short);	int		Edit(void);	struct EditSpec *Clone(void);	};struct UPolyMove:UPoly{	Point3DFFixed	baseVector;	Point3DFFixed	pointVector;		virtual int	EditAction(void);	virtual int	Switch(void);	virtual struct EditSpec *Clone(void);	int		Edit(void);	void	SetVector(Point3DFFixed,Point3DFFixed);	int		IO(struct V_Buffer *);	};	struct UPolyRotate:UPolyMove{	Angle3DFFixed	baseAngle;	Angle3DFFixed	pointAngle;		int		EditAction(void);	void	SetAngle(Angle3DFFixed,Angle3DFFixed);	int		Switch(void);	struct EditSpec	*Clone(void);	};struct UPolyScale:UPolyMove{	Point3DFFixed	multScale;	Point3DFFixed	originScale;		int		EditAction(void);	void	SetScale(Point3DFFixed,Point3DFFixed);	struct  EditSpec	*Clone(void);	};struct UPolySkew:UPolyMove{	PointFFixed	topSkew,bottomSkew;	int		EditAction(void);	void	SetSkew(PointFFixed,PointFFixed);	struct EditSpec	*Clone(void);	};	struct UPolyColor:UPoly{	RGBColor	color,oldColor;	short		alpha,oldAlpha;	short		side,oldSide;		int		Edit(void);	void	SetColor(RGBColor,short,short);	struct EditSpec	*Clone(void);	};		// ABD MERGE-TEXTURE 9/13/93 [[[struct UPolyTexture:UPoly{				// ABD TEXTURE	struct TextureItem *texture,*oldTexture;	short		side,oldSide;		int		Edit(void);	void	SetTexture(struct TextureItem *,short);	EditSpec	*Clone(void);	};	// ABD MERGE-TEXTURE 9/13/93 ]]]// ABD MERGE-GOURAUD [[[struct UPolyGouraud:UPoly{	unsigned char shade_type, old_shade_type;	short		side,oldSide;		int		Edit(void);	void	SetShadeType(unsigned char,short);	EditSpec	*Clone(void);	};	// ABD MERGE-GOURAUD ]]]struct UPolyCreate:UPoly{	void	dEditSpec(void);	int		Edit(void);	int		Switch(void);	struct EditSpec	*Clone(void);	};	struct UPolyHide:UPoly{	int		Edit(void);	int		Switch(void);	struct EditSpec	*Clone(void);	};	struct UPolyConnect:UPoly{	struct CAVPolyhedron	*toPolyhedron;	int	 	toWall;		int		Edit(void);	int		SetConnection(struct CAVPolyhedron *,int);	int		Switch(void);	struct EditSpec	*Clone(void);	};	struct UPolyInflate:UPoly{	short		levels;	char		inflate;	short		direction;		int		Edit(void);	int		SetInflate(char,short,short);	struct EditSpec	*Clone(void);	};	struct UPolyDirection:UPoly{	short		direction;		int		Edit(void);	int		SetDirection(short);	struct  EditSpec	*Clone(void);	};	struct UPolyText:UPoly{	Handle	text;	long	length;		void	cEditSpec(void);	void	dEditSpec(void);	int		Edit(void);	int		SetText(char *,long);	struct EditSpec	*Clone(void);	};	struct UPolySlice:UPoly{	struct CAVSlice	*theSlice;	Angle3DFFixed orientation;	PointFFixed	start,end;	FFixed	a,b,c,d;		int		Edit(void);	int		Switch(void);	void	SetEnds(PointFFixed,PointFFixed);	void	SetOrientation(Angle3DFFixed);	void	SetDefinition(FFixed,FFixed,FFixed,FFixed);	void	SetSlice(struct CAVSlice *);	struct CAVSlice *GetSlice(void);	struct EditSpec	*Clone(void);	};	struct UPolyNumSides:UPoly{	int 	number;	int		Edit(void);	void	SetNumber(int);	struct EditSpec	*Clone(void);	};	#endif	//POLY_UNDO