#ifndef WALK_PANE#define WALK_PANE#include "VMenu.h"#include "VPane.h"enum menuWalkOptions{	menuButtonDown = 1,	menuCrossHair,    menuGrid,    #if VPRO	// MERGE-GOURAUD-PRO-7 [[[    menuRBest = menuGrid+2,	menuRBetter,	menuRFast,	menuRFastest,	menuVCRRecord  = menuRFastest+2,	#else	menuNormalSpeed = menuGrid+2,	menuFasterSpeed,	menuFastestSpeed,	menuVCRRecord  = menuFastestSpeed+2,	#endif // VPRO // MERGE-GOURAUD-PRO-7 ]]]	menuVCRPlay,	menuVCRStop,	menuAspectRatio = menuVCRStop+2,	menuFullScreen	#if USE_HMD			// ABD HMD MAR95	,	menuUseHMDs = menuFullScreen+2,	menuCrossEyes	#endif // USE_HMD	};#if GERMAN	#define menuWalkKeyPos			2	#define menuFastestSpeedKeyPos	2	#define menuFasterSpeedKeyPos	1	#define	menuAspectRatioKeyPos   2	#define menuVCRPlayKeyPos	    1	#define menuVCRStopKeyPos	   	2#elif SPANISH	#define menuWalkKeyPos			3	#define menuRFastKeyPos			1	#define menuRFastestKeyPos		2	#define menuRewindKeyPos		5	#define menuFullScreenKeyPos	1	#define menuRBestKeyPos			10	#define menuVCRPlayKeyPos	    5	#define menuAspectRatioKeyPos	11#else // ENGLISH default	#define menuWalkKeyPos			3	#define menuFastestSpeedKeyPos	3	#define menuFasterSpeedKeyPos	4	#define menuFullScreenKeyPos	1#endif // SPANISH#define menuWalkEuroKey			'K'#define menuButtonDownEuroKey	'B'#define menuCrossHairEuroKey	'C'#define menuGridEuroKey			'G'#if VPRO#define menuRBestEuroKey        '1'#define menuRBetterEuroKey      '2'#define menuRFastEuroKey        '3'#define menuRFastestEuroKey     '4'#else#define menuNormalSpeedEuroKey  '1'#define menuFasterSpeedEuroKey  '2'#define menuFastestSpeedEuroKey '3'#endif // VPRO#define menuVCRRecordEuroKey    'R'#define menuVCRPlayEuroKey      'P'#define menuVCRStopEuroKey      'S'#define menuAspectRatioEuroKey  'A'#define menuFullScreenEuroKey   'F'#if USE_HMD#define menuUseHMDsKeyPos		5#define menuCrossEyesKeyPos		9#define menuUseHMDsEuroKey		'O'#define menuCrossEyesEuroKey	'Y'#endif // USE_HMD#if WINDOWS#define VGRID_MINUS_BLACK 	3#define VGRID_PLUS_BLACK    4#define VGRID_MINUS_WHITE   5#define VGRID_PLUS_WHITE    6#elif MACINTOSH#define VGRID_MINUS_BLACK 	3#define VGRID_PLUS_BLACK    3#define VGRID_MINUS_WHITE   5#define VGRID_PLUS_WHITE    5#endif // WINDOWS#if WINKEYBOARDVAVIGATION		//JAM-WINDOWS-KEYBOARD-NAVIGATION [[[#define	UPARROW			38#define	DOWNARROW		40#define	LEFTARROW		37#define	RIGHTARROW		39#define SHIFTKEY		16#define CTRLKEY			17#define TABKEY			9#define UPLEFTARROW		36#define UPRIGHTARROW	33#define DOWNLEFTARROW	35#define	DOWNRIGHTARROW	34#endif //WINKEYBOARDVAVIGATION	//JAM-WINDOWS-KEYBOARD-NAVIGATION [[[struct MenuWalk:V_Menu	{	struct ViewController *controller;	void ctheMenu(void);	void SetController(struct ViewController *);	void Preempt(void);	void Action(int,long);	};struct WalkPane:V_Pane	{	struct ViewController *control;	struct View *view;	struct MenuWalk	*walkMenu;	int vcenterX, vcenterY;	V_Offscreen *fullScreen;	short aspectH, aspectV;	short options;	short inAnimation;	 	Rect aspectRect;	Rect aspectEdge1;	Rect aspectEdge2;	short lastType;	#if WINKEYBOARDVAVIGATION	//17OCT94 JAM-WINDOWS-KEYBOARD-NAVIGATION [[[	//instance variables which indicate which keys are currently    //depressed.  handled in keyaction and keyupaction [[[	int WinOptionDown;	int WinShiftDown;	int WinControlDown;	int WinRightDown;	int WinLeftDown;	int WinUpDown;	int WinDownDown;	int WinStrafeLeftDown;	// keypad 1 or 7	int WinStrafeRightDown;	// keypad 3 or 9	//instance variables which indicate which keys are currently    //depressed.  handled in keyaction and keyupaction ]]]	#endif //WINKEYBOARDVAVIGATION //17OCT94 JAM-WINDOWS-KEYBOARD-NAVIGATION ]]]	/* --- */	void cPane(int);	void dPane(void);	virtual void Init(struct ViewController *, struct View *);	// ABD WILLIAMS added virtual 8/11/93	void FullScreen(struct V_Offscreen *);	int AspectRatio(int, int);	void CalcSize(Rect *, Point *, int, int);	void SizeNotify(void);	void Display(int, int, int);	int  KeyAction(char, long);	#if WINKEYBOARDVAVIGATION	//17OCT94 JAM-WINDOWS-KEYBOARD-NAVIGATION [[[	int  KeyUpAction(char,long);	#endif		//17OCT94 JAM-WINDOWS-KEYBOARD-NAVIGATION ]]]	void MouseDown(Point, long);	void MouseUp(Point, long);	int	GetAction(long, long);	void TrackHelp(Point,long modifier);// DAS-VWINDOWS 9/30/93	void Track(Point, long, int);#if WINDOWS	int ContinuousTrack(void);	// jca 5APR94#endif // WINDOWS	int Velocity(int);	int AngVelocity(int);	void SetOptions(int);	int GetOptions(int);	int  TakeSnapShot(struct V_Buffer *,int);	int  Animation(struct V_Buffer *,int);	};	#endif //WALK_PANE