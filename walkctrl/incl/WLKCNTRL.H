#ifndef WALK_CONTROLLER#define WALK_CONTROLLER#include "WTypes.h"#include "Cntrl.h"struct WalkController:Controller	{	struct V_Array			*toolChest;	struct V_Array			*controllers;	struct Controller		*lastController;		struct WalkDrawing 		*drawing;	struct Observer			*observer;			struct Polyhedron		*root;	struct AppPreference	*appPreferences;	struct TextureArray		*docTextures;		// ABD MERGE-TEXTURE 9/13/93		Point3DFFixed			defStartPt;	Angle3DFFixed			defStartAngle;	Rect	preFullScreenRect;	char 	fullFlag;	int		appChange;#if WINDOWS	int 	preFullScreenState;#endif // WINDOWS		/* --- */	virtual void cController(V_Document *);	virtual void dController(void);	struct  Controller *GetFrontController(void);	virtual int	React(struct V_Window *,int);	virtual int	Empty(void);	int		Changed(void); 	void	SetChange(int);				virtual void LaunchController(struct  LaunchInit , int);		void	SetTitle(char *);	virtual void InitInfo(struct Controller *);	void	SetFocalValue(int,int);	void	GetPosition(Point3DFFixed *,Angle3DFFixed *);	void 	SetPosition(Point3DFFixed,Angle3DFFixed);	/* observer only */	void	SetViewPoint(Point3DFFixed,Angle3DFFixed);		/* everyone */	void	ObserverRecord(int);	void 	PlayBack(void);	virtual void 	*cTool(struct Controller *,int);	virtual struct WalkDrawing		*NewDrawing(void);	virtual struct Observer			*NewObserver(void);	virtual struct ViewController	*NewViewController(void);		#if VPRO	int	AddTextures(void);	// ABD TEXTURE	#endif // VPRO		struct TextureItem *GetTexture(void);	// ABD MERGE-TEXTURE 9/13/93		virtual struct  V_Window *GetWindow(int);	virtual void	SetDocument(struct V_Document *);	virtual void	Request(void *,int,int,int);		struct AppPreference *GetPreference(void);	virtual void	SetPreference(struct AppPreference *,int );	virtual int		UnitConversion(double);	virtual void	LoadWindowPref(struct AppPreference	*);	#if (!VPLAYER)	virtual int	IO(struct V_Buffer *);		int		IO_TEXTURELIB(struct V_Buffer *);		// ABD MERGE-TEXTURE 9/13/93	int		IO_FORM(struct V_Buffer *);	virtual int	IO_ReadExtra(struct V_Buffer *,long);	virtual int	IO_WriteFirst(struct V_Buffer *);	virtual int	IO_WriteLast(struct V_Buffer *);#endif //!VPLAYER	struct  Controller *FindController(int); 	virtual struct  V_Offscreen *FullScreen(struct Controller *,int); 	int		TreeSize(int);	long	VoyagerPartition(void);	 };#endif //WALK_CONTROLLER