#ifndef OBSERVER#define OBSERVER#include "View.h"struct Observer:View	{	struct Controller		*controller;	struct V_Array			*path;	Point3DFFixed			FFpoint,lastPoint;	Angle3DFFixed			FFangle,lastAngle;	Angle3D					lastAngle256;	short					record,frame;	short					resolution;	#if USE_HMD	int use_hmds;		// ABD HMD MAR95 use hmd render code?  	struct HMD *hmd;  	// MERGE-HMD    #endif // USE_HMD		virtual void	cView(struct WalkDrawing *);	void	dView(void);	void	KillPath(void);	void 	SetController(struct Controller *);	struct Polyhedron *FindContainer(void);	void 	SetPosition(Point3DFFixed,Angle3DFFixed);	void 	GetPosition(Point3DFFixed *,Angle3DFFixed *);		void 	Record(int,int);	void 	Walk(void);	int		SetFrame(int);	int		GetFrame(void);	void 	RecordPosition(void);		/* DUDE - temp till Easter has Fixed format for position */	void	SetPoint(Point3D);	void	SetFFPoint(Point3DFFixed);	void	SetAngle(Angle3D);	void	SetFFAngle(Angle3DFFixed);	void	Move(int,int,int,int,int,int);	void	MoveCollision(int,int,int,int,int,int);	// ABD MERGE18	void	ResetTilt(void);		void	CopyPath(struct V_Array *,int,int);	int 	IO(struct V_Buffer *);	// MERGE-HMD [[[	#if USE_HMD			// ABD HMD JUL95 int UseHMDs(void);						// MERGE-HMD ABD MAR95	// HMD MAR95 removed DefaultHMD()	int CreateHMD(int);						// MERGE-HMD	void DestroyHMD(void);					// MERGE-HMD	void DrawHMD(int, int);					// MERGE-HMD	void SetPointTemp(Point3D);				// MERGE-HMD	void SetFFPointTemp(Point3DFFixed);		// MERGE-HMD	void SetAngleTemp(Angle3D);				// MERGE-HMD	void SetFFAngleTemp(Angle3DFFixed);		// MERGE-HMD	// ABD HMD JUL95 struct HMD *GetHMD(void);				// MERGE-HMD	#endif // USE_HMD	// MERGE-HMD ]]]		};struct ObserverStep:V_IO	{	Point3DFFixed point;	Angle3DFFixed angle;		void 	cPathStep(void);	void 	dPathStep(void);	void	SetStep(Point3DFFixed,Angle3DFFixed);	void	GetStep(Point3DFFixed*,Angle3DFFixed*);	void	Copy(struct ObserverStep *); 	int		IO(struct V_Buffer *); /* DWEE */	};#endif //OBSERVER