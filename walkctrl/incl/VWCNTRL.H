#ifndef VIEW_CONTROLLER#define VIEW_CONTROLLER#include "Cntrl.h"#include "WTypes.h"/* Options */#define VIEW_BUTTON				0x0001		/* require button down to drive */#define VIEW_CROSSHAIR			0x0002		/* show crosshair */#define VIEW_VELOCITY			0x0004		/* show velocity markers */#define VIEW_SEE_IN				0x0008		/* see into holes in surfaces */#define VIEW_SEE_OUT			0x0010		/* see out of holes in surfaces */#define VIEW_SEE_THROUGH		0x0020		/* see through holes in connections */#define VIEW_FRAME				0x0040		/* frame polygons */#define VIEW_FILL				0x0080		/* fill polygons */#define VIEW_SHADE				0x0100		/* normal shading */#define VIEW_NO_SHADE			0x0200		/* no shading */#define VIEW_WHITE_SHADE		0x0400		/* no shading, all white */#define VIEW_COLLISIONS			0x0800		/* check for collisions */#define WALK_RECORD	0x01#define WALK_PLAY	0x02#define WALK_STOP	0x04struct ViewController:Controller{	struct Polyhedron		*polyhedron;	struct WalkPane			*walkPane;#if VR	struct WalkBPane		*walkBPane;// < DAS-VR-WALKBPANE 8/13/93#endif	struct View				*view;	struct V_Console		*environmentConsole;	struct V_Console		*three_d_pick_console;		// MERGE-GOURAUD-PRO	struct Pick3DButton     *three_d_pick_button;		// MERGE-GOURAUD-PRO	struct ColorSelect		*color;	struct TumbleAxis		*tumbleAxis;	struct FocalPane		*focalPane;		struct ViewCameraButton	*recording;	struct ToolController	*toolChest;	int		recordState;		virtual void 	cController(V_Document *);	virtual void 	*cTool(struct Controller *,int);	virtual void	Activate(int);	virtual void 	GetPlace(Rect *,int,int);	virtual void	Request(void*,int,int,int);	virtual void	Response(void*,int,int,int);		void	SetViewPoint(Point3DFFixed,Angle3DFFixed);	void	SetView(struct View *);	void	SetOptions(int);	struct V_Window *GetWindow(int);	void	SetPreference(struct AppPreference *,int );/* NEW */	void	FullScreen(int)	;	void 	SetTitle(char *);	int		ExportContents(struct V_Buffer *,int);	int		GetRecordState(void);		void	SetRecordState(int);		};#define pvc(ptr) ((ViewController*)ptr)#endif //VIEW_CONTROLLER