/*------------------------------------------------------------------------------ * Virtus WalkThrough_ * Version 1.1.1 * * Copyright _ 1990-1992 by Virtus Corporation * All Rights Reserved * Written by   *				 *				Mark J. Uland * Virtus Corporation * Suite 204 * 117 Edinburgh South * Cary, North Carolina    27511 * (919) 467-9700 *------------------------------------------------------------------------------ * Source File:  * Notes:  * History:  *------------------------------------------------------------------------------ */#include "VTypes.h"#include "LbWCntrl.h"#include "LbVCntrl.h"#include "ToolDef.h"#include "Observer.h"#include "Drawing.h"#include "Polyhdrn.h"#include "LibDefs.h"#include "Light.h"#include "WalkBuff.h"#include "VMDL.h"#include "AppDeflt.h"#include "Informtn.h"#include "VFile.h"#include "VMath.h"			// ABD SURFACE LIBRARY for FFZero#include "VGraphic.h"		// ABD SURFACE LIBRARY for vWhite#include "Unit.h"#include "TextArry.h"	// ABD MERGE-TEXTURE 9/13/93void LIBWalkController::cController(V_Document *doc)	{		Point3DFFixed pt;	Angle3DFFixed agl;		information = new(Information);	information->cInformation();	WalkController::cController(doc);	docTextures->SetController(NULL);	// ABD MERGE-TEXTURE 9/13/93 so lib textures are not added to a list	GetPosition(&pt,&agl);	pt.y.intg = -120;	SetPosition(pt,agl);	libFile = NULL;	libViewControl = NULL;	}void LIBWalkController::SetLibrary(V_File *file)	{		libFile = file;	libFile->GetFName(title);	}int LIBWalkController::Empty()	{	int val = TRUE;	if(libViewControl)		val = libViewControl->Empty();	return(val);	}// ABD DWE SURFACE LIBRARY 8/12/93void	LIBWalkController::SetDrawing(int features, Polyhedron **rootPoly, Polyhedron **featPoly)	// ABD SURFACE LIBRARY	{		ModelPreference		*modelPref;	Polyhedron *poly = NULL;		// ABD DWE SURFACE LIBRARY 8/12/93	V_Array *outl;					// ABD DWE SURFACE LIBRARY 8/12/93	PointFFixed outlPnt;			// ABD DWE SURFACE LIBRARY 8/12/93	extern TextureArray *gAllTextures;	modelPref = (ModelPreference*)appPreferences->GetPreference(preferModeler);// ABD MERGE-TEXTURE 9/13/93 [[[	// ABD TEXTURE	// set drawing is called to setup a new drawing to i/o into.  We dispose of the current	// drawing if it exists.  We also dispose of the textures array and create a new one,	// because we want each texture item to have it's own array -- and not complain about	// name conflicts with other library items.	#if VR	// jca 19JAN94  if this is VR, set docTextures to gAllTextures (if    // gAllTextures exists.  Otherwise, do docTextures (and ASSERT)	if (gAllTextures)		docTextures = gAllTextures;	else		{  // fall back, reasonably gracefully.		ASSERT(gAllTextures);#endif // VR	if (docTextures)		docTextures->dTextureArray();		// ABD TEXTURE			docTextures = new(TextureArray);		// ABD TEXTURE	docTextures->cTextureArray();			// ABD TEXTURE	docTextures->SetController(NULL);		// ABD TEXTURE#if VR		}#endif // VR// ABD MERGE-TEXTURE 9/13/93 ]]]	if(drawing)		drawing->dWalkDrawing();		 	drawing = NewDrawing();	drawing->cWalkDrawing(this);	root = drawing->polyhedron;	root->SetColor(modelPref->skyColor,0xFFFF,SURF_SHARED);	// ABD DWE SURFACE LIBRARY 8/12/93 v// For library items that are Surface Features, create a polyhedron to put them on.// The polyhedron is inflated along the Y-axis (front to back) and is 1 unit deep. The// features will be installed on the last surface.	if (features)		{		FFixed point, base;		FFixed tempfixed1, tempfixed2;	//JAM 4-11-94 hack fix for library pasting in different units		outl = new(V_Array);		outl->cArray(0, sizeof(PointFFixed), 4);//JAM 4-11-94 hack fix for library pasting in different units [[[		/*poly is 120x120, want units to be appropriate--inches, centimeters, etc*//*		tempfixed1 = DblToFixed(appPreferences->unit->unitSize/0.0254);		tempfixed2.intg = 120;		tempfixed2.frac = 0;		tempfixed1 = FFMult(tempfixed1, tempfixed2);				outlPnt.h = FFZero; outlPnt.v = FFZero;		outlPnt.h.intg = 0; outlPnt.v = tempfixed1; outl->Append(&outlPnt);		outlPnt.h = tempfixed1; outlPnt.v = tempfixed1; outl->Append(&outlPnt);		outlPnt.h = tempfixed1; outlPnt.v.l = -tempfixed1.l; outl->Append(&outlPnt);		outlPnt.h.intg = 0; outlPnt.v.l = -tempfixed1.l; outl->Append(&outlPnt);*/		outlPnt.h.intg = 0; outlPnt.v.intg = 120; outl->Append(&outlPnt);		outlPnt.h.intg = 120; outlPnt.v.intg = 120; outl->Append(&outlPnt);		outlPnt.h.intg = 120; outlPnt.v.intg = -120; outl->Append(&outlPnt);		outlPnt.h.intg = 0; outlPnt.v.intg = -120; outl->Append(&outlPnt);//JAM 4-11-94 hack fix for library pasting in different units ]]]				point.intg = 350;		// ABD MERGE15		point.frac = 0;		base.intg = 249;		base.frac = 0;				poly = new(Polyhedron);		poly->cPolyhedron(drawing);		poly->CreateInflate(INFL_Y, INFL_EXTRUDE, outl, point, base);		poly->SetColor(vWhite, OPAQUE_NOM, SURF_SHARED);		drawing->polyhedron->Install(poly);		outl->dArray();		}// ABD DWE SURFACE LIBRARY 8/12/93 ^	observer->drawing = drawing;	observer->ResetViewPoly();		Request(NULL,msgInit,objDefaults,0);	root->RemoveUnit();		// BILBIL - library preview should be unitless - 4/13/94	libViewControl->SetView(observer);// ABD DWE SURFACE LIBRARY 8/12/93 v// return the root and feature polyhedra pointers. *featPoly will be NULL if // "features" is not TRUE.		*rootPoly = drawing->polyhedron;	*featPoly = poly;// ABD DWE SURFACE LIBRARY 8/12/93 ^	}V_File	*LIBWalkController::GetFile()	{	return(libFile);	}		intLIBWalkController::IO(V_Buffer *buffer)	{	return(libViewControl->IO(buffer));	}ViewController	*LIBWalkController::NewViewController()	{	ViewController	*vctrl = new(LibViewController);	libViewControl = (LibViewController*)vctrl;	return(vctrl);	}			