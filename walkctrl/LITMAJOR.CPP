/*------------------------------------------------------------------------------ * Virtus WalkThrough_ * Version 1.1.1 * * Copyright _ 1990-1992 by Virtus Corporation * All Rights Reserved * Written by   *				 *				Mark J. Uland * Virtus Corporation * Suite 204 * 117 Edinburgh South * Cary, North Carolina    27511 * (919) 467-9700 *------------------------------------------------------------------------------ * Source File:  * Notes:  * History:  *------------------------------------------------------------------------------ */#include "VTypes.h"#include "LitMajor.h"#include "LitCntrl.h"#include "AppText.h"#include "ToolDef.h"#include "Misc.h"#include "VItem.h"#include "VButton.h"#include "VGraphic.h"#include "VSound.h"#include <stdio.h>#include <string.h>voidObjectLight::SetController(Controller *ctrl)	{	controller = ctrl;	}	voidObjectLight::cPane(int flag)	{	VStyleRec style;	V_Text *statText;	Rect r;		controller = NULL;	V_Pane::cPane(flag);	button = new(V_BItem);	button->cBItem(SUBJECT_CHAR);		r.left = 12;r.right = r.left + 90;#if MACINTOSH	r.left = 12;r.right = r.left + 90;	r.bottom = 13;r.top = r.bottom-12;#elif WINDOWS	r.left = 14;r.right = r.left + 90;	r.bottom = 18;r.top = r.bottom-16;#endif // MACINTOSH	statText = new(V_Text);	statText->cItem();	statText->SetRect(&r);	statText->SetText(TXT_SUBJECT);		// PRO-JAP	statText->GetStyle(&style);	style.textFlags = FALSE;	statText->SetStyle(&style);	AddItem(statText);		selected=TRUE;	}voidObjectLight::dPane()	{	button->dBItem();	V_Pane::dPane();	}	void ObjectLight::CalcSize(Rect *r,Point *p,int type,int warning)	{	controller->GetPlace(r,warning,toolPLight);	}	voidObjectLight::Display(int type,int h,int v)	{	Rect r;	RGBColor	color;		r=dataRect;	SetMetaPort();		if(selected)		{		button->SetState(ONSTATE);		if(depth>2) 			{ VSetColor(color,0xFFFF,0xFFFF,0x4000); }		else 			color = vWhite;		}	else		{		button->SetState(OFFSTATE);		color = vBlack;		}		if(depth>=4)		{		button->MoveButton(&r);  // jca 31JAN94 position button correctly.		button->CDraw(); // DAS-VBUTTON 8/17/93		VForeColor(&color);		V_Pane::Display(type,h,v);		}	else 		{		MonoButton(&r,selected?ONSTATE:OFFSTATE);//VTextMode(vSrcXor);		V_Pane::Display(type,h,v);//VTextMode(vSrcOr);		}		MetaCopy(&r);	UnsetMetaPort();	}void ObjectLight::MouseDown(Point p,long modifiers)	{	VPlaySound(clickSound);	controller->Request(0,msgDraw,-1,0);	}void ObjectLight::Track(Point p,long modifiers,int lastCall)	{	VSetCursor(vCursorArrow);	}void ObjectLight::SetSelect(int state)	{	if(selected!=state)		{		selected = state;		VDisplay(DRAW);		}	}