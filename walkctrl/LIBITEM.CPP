/*------------------------------------------------------------------------------ * Virtus WalkThrough_ * Version 1.1.1 * * Copyright _ 1990-1992 by Virtus Corporation * All Rights Reserved * Written by   *				 *				Mark J. Uland * Virtus Corporation * Suite 204 * 117 Edinburgh South * Cary, North Carolina    27511 * (919) 467-9700 *------------------------------------------------------------------------------ * Source File:  * Notes:  * History:  *------------------------------------------------------------------------------ */#include "VTypes.h"#include "LibItem.h"#include "LibIndex.h"#include "LbVCntrl.h"#include "AppText.h"#include "Misc.h"#include "VGraphic.h"#include "VButton.h"#include <stdio.h>#include <string.h>char 	libSymbolChar = (char)POLY_LIBRARY_SYMBOL;void LibraryItem::cListItem()	{	entry = NULL;	controller = NULL;	type = TRUE;	}void LibraryItem::SetController(Controller *ctrl)	{	controller = ctrl;	}void LibraryItem::SetEntry(LibraryEntry *newEntry,int num)	{	Handle str;	entry = newEntry;	str  = newEntry->GetName();	if(str) strcpy(name,(char *)HDeref(str));	else sprintf(name,TXT_LIBRARY_OBJECT_NUM_I,num+1);		// PRO-JAP	}void LibraryItem::Display()	{		Rect r;	r.left = 1;	r.right = 8;#if WINDOWS	r.top = location;	r.bottom = r.top+vButtonFontSize;	VTextMode(vSrcXor);	r.top -= GetHeight();	r.bottom -= GetHeight();#elif MACINTOSH	r.bottom = location-6;	r.top = r.bottom-vButtonFontSize;	VTextMode(vSrcOr);#endif //WINDOWS	if(type) 		{  		TextSetUp(vButtonFont,vButtonFontSize,vNormal);			VDrawChar(libSymbolChar,&r);		}#if WINDOWS	VTextMode(vSrcOr);	r.top = location - GetHeight();	r.bottom = r.top + vAppFontSize;#elif MACINTOSH	r.bottom = location-2;	r.top = r.bottom-vAppFontSize;#endif //WINDOWS	r.left = r.right;  	TextSetUp(vAppFont,vAppFontSize,vNormal);		VDrawText(name,0,strlen(name),&r);	TextSetUp(vSystemFont,vSystemFontSize,vNormal);#if WINDOWS	GetRect(&r);    r.right = currentPane->dataRect.right;	VMoveTo(r.right-1,r.top);    VLineTo(r.right-1,r.bottom);#endif //WINDOWS	}void  LibraryItem::SetName(char *str) { strcpy(name,str); }void LibraryItem::GetName(char *str) { strcpy(str,name);}#if VRML_ANCHOR // ABD-VRML3void LibraryItem::Hilite(int hiliteState)	{	Rect	r;		hilited = hiliteState;		r.left = 0;	r.right = 500; /* dude */	GetRect(&r);	VEraseRect(&r);		Display();		if(hilited)		{		VPenMode(vPatXor);			VPaintRect(&r);			VPenMode(vPatCopy);		}	}#endif // ABD-VRML3